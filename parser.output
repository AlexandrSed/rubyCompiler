Nonterminals useless in grammar

    break_stmt
    next_stmt


Terminals unused in grammar

    BREAK_KEYWORD
    NEXT_KEYWORD
    RETRY_KEYWORD
    SELF_KEYWORD
    SUPER_KEYWORD
    UNDEF_KEYWORD
    YIELD_KEYWORD
    '{'
    '}'


Rules useless in grammar

  206 break_stmt: BREAK_KEYWORD IF_KEYWORD expr
  207           | BREAK_KEYWORD expr IF_KEYWORD expr

  208 next_stmt: NEXT_KEYWORD IF_KEYWORD expr
  209          | NEXT_KEYWORD expr IF_KEYWORD expr


State 15 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 202 conflicts: 37 shift/reduce
State 298 conflicts: 1 shift/reduce
State 318 conflicts: 32 reduce/reduce
State 319 conflicts: 40 reduce/reduce
State 321 conflicts: 1 shift/reduce
State 322 conflicts: 40 reduce/reduce
State 323 conflicts: 40 reduce/reduce
State 343 conflicts: 3 shift/reduce
State 368 conflicts: 1 reduce/reduce


Grammar

    0 $accept: programm $end

    1 programm: %empty
    2         | programm_el_list_not_empty

    3 expr: IDENTIFIER
    4     | OBJECT_VAR_NAME
    5     | CLASS_VAR_NAME
    6     | CONSTANT_NAME
    7     | STRING
    8     | TRUE_KEYWORD
    9     | FALSE_KEYWORD
   10     | NIL_KEYWORD
   11     | INTEGER_NUMBER
   12     | FLOAT_NUMBER
   13     | expr '=' expr
   14     | expr '[' expr ']'
   15     | expr '/' expr
   16     | expr '%' expr
   17     | expr '*' expr
   18     | expr '+' expr
   19     | expr '-' expr
   20     | '-' expr
   21     | IDENTIFIER '(' expr_list ')'
   22     | expr '.' IDENTIFIER
   23     | expr '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr AND_KEYWORD expr
   25     | expr OR_KEYWORD expr
   26     | NOT_KEYWORD '(' expr ')'
   27     | expr ARITHMETIC_POW_OP expr
   28     | expr EQL_OP expr
   29     | expr NOT_EQL_OP expr
   30     | expr GREATER_OP expr
   31     | expr LESS_OP expr
   32     | expr GREATER_OR_EQL_OP expr
   33     | expr LESS_OR_EQL_OP expr
   34     | expr COMB_COMPRASION_OP expr
   35     | expr CASE_EQL_OP expr
   36     | expr ADD_ASSIGN_OP expr
   37     | expr SUB_ASSIGN_OP expr
   38     | expr MUL_ASSIGN_OP expr
   39     | expr DIV_ASSIGN_OP expr
   40     | expr MOD_ASSIGN_OP expr
   41     | expr POW_ASSIGN_OP expr
   42     | expr BIN_AND_OP expr
   43     | expr BIN_OR_OP expr
   44     | expr BIN_XOR_OP expr
   45     | expr BIN_ONES_COMPLEMENT_OP expr
   46     | expr BIN_LEFT_SHIFT_OP expr
   47     | expr BIN_RIGHT_SHIFT_OP expr
   48     | expr LOGICAL_AND_OP expr
   49     | expr LOGICAL_OR_OP expr
   50     | LOGICAL_NOT_OP expr
   51     | expr INCLUSIVE_RANGE_OP expr
   52     | expr EXCLUSIVE_RANGE_OP expr
   53     | '(' expr ')'
   54     | '[' expr_list ']'
   55     | DEFINED_KEYWORD expr
   56     | DOUBLE_COLON_SYMBOL expr
   57     | expr DOUBLE_COLON_SYMBOL expr
   58     | expr QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr '=' linefeed_expr
   60     | expr '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr '/' linefeed_expr
   62     | expr '%' linefeed_expr
   63     | expr '*' linefeed_expr
   64     | expr '+' linefeed_expr
   65     | expr '-' linefeed_expr
   66     | '-' linefeed_expr
   67     | IDENTIFIER '(' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ')'
   68     | expr '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr AND_KEYWORD linefeed_expr
   73     | expr OR_KEYWORD linefeed_expr
   74     | NOT_KEYWORD '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')'
   75     | expr ARITHMETIC_POW_OP linefeed_expr
   76     | expr EQL_OP linefeed_expr
   77     | expr NOT_EQL_OP linefeed_expr
   78     | expr GREATER_OP linefeed_expr
   79     | expr LESS_OP linefeed_expr
   80     | expr GREATER_OR_EQL_OP linefeed_expr
   81     | expr LESS_OR_EQL_OP linefeed_expr
   82     | expr COMB_COMPRASION_OP linefeed_expr
   83     | expr CASE_EQL_OP linefeed_expr
   84     | expr ADD_ASSIGN_OP linefeed_expr
   85     | expr SUB_ASSIGN_OP linefeed_expr
   86     | expr MUL_ASSIGN_OP linefeed_expr
   87     | expr DIV_ASSIGN_OP linefeed_expr
   88     | expr MOD_ASSIGN_OP linefeed_expr
   89     | expr POW_ASSIGN_OP linefeed_expr
   90     | expr BIN_AND_OP linefeed_expr
   91     | expr BIN_OR_OP linefeed_expr
   92     | expr BIN_XOR_OP linefeed_expr
   93     | expr BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr LOGICAL_AND_OP linefeed_expr
   97     | expr LOGICAL_OR_OP linefeed_expr
   98     | LOGICAL_NOT_OP linefeed_expr
   99     | expr INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr EXCLUSIVE_RANGE_OP linefeed_expr
  101     | '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')'
  102     | '[' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ']'
  103     | DEFINED_KEYWORD linefeed_expr
  104     | DOUBLE_COLON_SYMBOL linefeed_expr
  105     | expr DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

  107 linefeed_expr: NEW_LINE_SYMBOL expr

  108 programm_element: class_stmt
  109                 | method_stmt
  110                 | module_stmt

  111 programm_el_list_not_empty: programm_element
  112                           | programm_el_list_not_empty programm_element

  113 delimiter: NEW_LINE_SYMBOL
  114          | SEMICOLON_SYMBOL
  115          | SEMICOLON_SYMBOL NEW_LINE_SYMBOL

  116 expr_list: %empty
  117          | expr_list_not_empty

  118 expr_list_not_empty: expr
  119                    | expr_list_not_empty COMMA_SYMBOL expr

  120 stmt_list: stmt
  121          | stmt_list stmt

  122 stmt: expr delimiter
  123     | if_stmt delimiter
  124     | while_stmt delimiter
  125     | for_stmt delimiter
  126     | until_stmt delimiter
  127     | case_stmt delimiter
  128     | unless_stmt delimiter
  129     | return_stmt delimiter
  130     | alias_stmt delimiter
  131     | begin_rescue_stmt delimiter

  132 param_list_not_empty: IDENTIFIER
  133                     | param_list_not_empty COMMA_SYMBOL IDENTIFIER

  134 param_list: %empty
  135           | param_list_not_empty

  136 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list ')' delimiter stmt_list END_KEYWORD
  137            | DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list ')' delimiter stmt_list END_KEYWORD
  138            | DEF_KEYWORD IDENTIFIER delimiter stmt_list END_KEYWORD
  139            | DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL delimiter stmt_list END_KEYWORD
  140            | DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' delimiter stmt_list END_KEYWORD
  141            | DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP delimiter stmt_list END_KEYWORD
  142            | DEF_KEYWORD IDENTIFIER '=' '(' param_list ')' delimiter stmt_list END_KEYWORD
  143            | DEF_KEYWORD IDENTIFIER '=' delimiter stmt_list END_KEYWORD

  144 class_stmt: CLASS_KEYWORD CONSTANT_NAME delimiter class_body END_KEYWORD

  145 class_body_stmt: method_stmt delimiter
  146                | CLASS_VAR_NAME delimiter
  147                | CLASS_VAR_NAME '=' expr delimiter
  148                | OBJECT_VAR_NAME delimiter
  149                | OBJECT_VAR_NAME '=' expr delimiter
  150                | class_stmt delimiter

  151 class_body_not_empty: class_body_stmt
  152                     | class_body_not_empty class_body_stmt

  153 class_body: %empty
  154           | class_body_not_empty

  155 if_stmt: IF_KEYWORD expr delimiter stmt END_KEYWORD
  156        | IF_KEYWORD expr THEN_KEYWORD stmt END_KEYWORD
  157        | IF_KEYWORD expr delimiter stmt ELSE_KEYWORD stmt END_KEYWORD
  158        | IF_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  159        | IF_KEYWORD expr delimiter stmt elsif_list stmt END_KEYWORD
  160        | IF_KEYWORD expr THEN_KEYWORD stmt elsif_list stmt END_KEYWORD
  161        | IF_KEYWORD expr delimiter stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD
  162        | IF_KEYWORD expr THEN_KEYWORD stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD
  163        | expr IF_KEYWORD expr
  164        | expr IF_KEYWORD NEW_LINE_SYMBOL expr

  165 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt END_KEYWORD
  166            | UNLESS_KEYWORD expr stmt END_KEYWORD
  167            | UNLESS_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  168            | UNLESS_KEYWORD expr stmt ELSE_KEYWORD stmt END_KEYWORD
  169            | expr UNLESS_KEYWORD expr
  170            | expr UNLESS_KEYWORD NEW_LINE_SYMBOL expr

  171 elsif_list: ELSIF_KEYWORD expr delimiter stmt
  172           | ELSIF_KEYWORD expr THEN_KEYWORD stmt
  173           | elsif_list ELSIF_KEYWORD expr delimiter stmt
  174           | elsif_list ELSIF_KEYWORD expr THEN_KEYWORD stmt

  175 while_stmt: WHILE_KEYWORD expr DO_KEYWORD stmt END_KEYWORD
  176           | WHILE_KEYWORD expr stmt END_KEYWORD
  177           | WHILE_KEYWORD expr stmt redo_stmt END_KEYWORD

  178 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr DO_KEYWORD stmt END_KEYWORD
  179         | FOR_KEYWORD expr IN_KEYWORD expr stmt END_KEYWORD

  180 until_stmt: UNTIL_KEYWORD expr stmt END_KEYWORD
  181           | UNTIL_KEYWORD expr DO_KEYWORD stmt END_KEYWORD
  182           | expr UNTIL_KEYWORD expr

  183 return_stmt: RETURN_KEYWORD expr
  184            | RETURN_KEYWORD

  185 redo_stmt: REDO_KEYWORD IF_KEYWORD expr
  186          | REDO_KEYWORD expr IF_KEYWORD expr

  187 case_stmt: CASE_KEYWORD expr when_list END_KEYWORD
  188          | CASE_KEYWORD expr when_list ELSE_KEYWORD stmt END_KEYWORD

  189 when_list: WHEN_KEYWORD expr_list delimiter stmt
  190          | WHEN_KEYWORD expr_list THEN_KEYWORD stmt
  191          | when_list expr_list delimiter stmt
  192          | when_list expr_list THEN_KEYWORD stmt

  193 alias_stmt: ALIAS_KEYWORD IDENTIFIER IDENTIFIER

  194 module_stmt: MODULE_KEYWORD CONSTANT_NAME delimiter module_body END_KEYWORD

  195 module_body_stmt: expr delimiter
  196                 | method_stmt delimiter
  197                 | alias_stmt delimiter
  198                 | class_stmt delimiter
  199                 | module_stmt delimiter

  200 module_body_not_empty: module_body_stmt
  201                      | module_body_not_empty module_body_stmt

  202 module_body: %empty
  203            | module_body_not_empty

  204 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list END_KEYWORD
  205                  | BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 16 62
    '(' (40) 21 26 53 67 74 101 136 137 140 142
    ')' (41) 21 26 53 67 74 101 136 137 140 142
    '*' (42) 17 63
    '+' (43) 18 64
    '-' (45) 19 20 65 66
    '.' (46) 22 23 68 69 70 71
    '/' (47) 15 61
    '=' (61) 13 59 71 142 143 147 149
    '[' (91) 14 54 60 102
    ']' (93) 14 54 60 102
    '{' (123)
    '}' (125)
    error (256)
    ALIAS_KEYWORD (258) 193
    BEGIN_KEYWORD (259) 204 205
    BREAK_KEYWORD (260)
    CASE_KEYWORD (261) 187 188
    CLASS_KEYWORD (262) 144
    DEF_KEYWORD (263) 136 137 138 139 140 141 142 143
    DEFINED_KEYWORD (264) 55 103
    DO_KEYWORD (265) 175 178 181
    IF_KEYWORD (266) 155 156 157 158 159 160 161 162 163 164 185 186
    ELSE_KEYWORD (267) 157 158 161 162 167 168 188
    ELSIF_KEYWORD (268) 171 172 173 174
    END_KEYWORD (269) 136 137 138 139 140 141 142 143 144 155 156 157 158 159 160 161 162 165 166 167 168 175 176 177 178 179 180 181 187 188 194 204 205
    ENSURE_KEYWORD (270) 205
    FALSE_KEYWORD (271) 9
    FOR_KEYWORD (272) 178 179
    IN_KEYWORD (273) 178 179
    MODULE_KEYWORD (274) 194
    NEXT_KEYWORD (275)
    NIL_KEYWORD (276) 10
    REDO_KEYWORD (277) 185 186
    RESCUE_KEYWORD (278) 204 205
    RETRY_KEYWORD (279)
    RETURN_KEYWORD (280) 183 184
    SELF_KEYWORD (281)
    SUPER_KEYWORD (282)
    THEN_KEYWORD (283) 156 158 160 162 165 167 172 174 190 192
    TRUE_KEYWORD (284) 8
    UNDEF_KEYWORD (285)
    UNLESS_KEYWORD (286) 165 166 167 168 169 170
    UNTIL_KEYWORD (287) 180 181 182
    WHEN_KEYWORD (288) 189 190
    WHILE_KEYWORD (289) 175 176 177
    YIELD_KEYWORD (290)
    OR_KEYWORD (291) 25 73
    AND_KEYWORD (292) 24 72
    NOT_KEYWORD (293) 26 74
    ADD_ASSIGN_OP (294) 36 84
    SUB_ASSIGN_OP (295) 37 85
    MUL_ASSIGN_OP (296) 38 86
    DIV_ASSIGN_OP (297) 39 87
    MOD_ASSIGN_OP (298) 40 88
    POW_ASSIGN_OP (299) 41 89
    QUESTION_SYMBOL (300) 23 58 69 106 137 139
    COLON_SYMBOL (301) 58 106
    EXCLUSIVE_RANGE_OP (302) 52 100
    INCLUSIVE_RANGE_OP (303) 51 99
    LOGICAL_OR_OP (304) 49 97
    LOGICAL_AND_OP (305) 48 96
    EQL_OP (306) 28 76
    NOT_EQL_OP (307) 29 77
    COMB_COMPRASION_OP (308) 34 82
    CASE_EQL_OP (309) 35 83
    GREATER_OP (310) 30 78
    LESS_OP (311) 31 79
    GREATER_OR_EQL_OP (312) 32 80
    LESS_OR_EQL_OP (313) 33 81
    BIN_OR_OP (314) 43 91
    BIN_XOR_OP (315) 44 92
    BIN_AND_OP (316) 42 90
    BIN_LEFT_SHIFT_OP (317) 46 94
    BIN_RIGHT_SHIFT_OP (318) 47 95
    UMINUS (319)
    LOGICAL_NOT_OP (320) 50 70 98 140 141
    BIN_ONES_COMPLEMENT_OP (321) 45 93
    ARITHMETIC_POW_OP (322) 27 75
    DOUBLE_COLON_SYMBOL (323) 56 57 104 105
    COMMA_SYMBOL (324) 119 133
    SEMICOLON_SYMBOL (325) 114 115
    NEW_LINE_SYMBOL (326) 60 67 68 69 70 71 74 101 102 106 107 113 115 164 170
    STRING (327) 7
    INTEGER_NUMBER (328) 11
    FLOAT_NUMBER (329) 12
    IDENTIFIER (330) 3 21 22 23 67 68 69 70 71 132 133 136 137 138 139 140 141 142 143 193
    OBJECT_VAR_NAME (331) 4 148 149
    CLASS_VAR_NAME (332) 5 146 147
    CONSTANT_NAME (333) 6 144 194


Nonterminals, with rules where they appear

    $accept (92)
        on left: 0
    programm (93)
        on left: 1 2
        on right: 0
    expr (94)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106
        on right: 13 14 15 16 17 18 19 20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 55 56 57 58 59 60 61 62 63 64 65 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 99 100 101 105 106 107 118 119 122 147 149 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 185 186 187 188 195
    linefeed_expr (95)
        on left: 107
        on right: 59 60 61 62 63 64 65 66 72 73 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 103 104 105 106
    programm_element (96)
        on left: 108 109 110
        on right: 111 112
    programm_el_list_not_empty (97)
        on left: 111 112
        on right: 2 112
    delimiter (98)
        on left: 113 114 115
        on right: 122 123 124 125 126 127 128 129 130 131 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 155 157 159 161 171 173 189 191 194 195 196 197 198 199 204 205
    expr_list (99)
        on left: 116 117
        on right: 21 54 67 102 189 190 191 192
    expr_list_not_empty (100)
        on left: 118 119
        on right: 117 119
    stmt_list (101)
        on left: 120 121
        on right: 121 136 137 138 139 140 141 142 143 204 205
    stmt (102)
        on left: 122 123 124 125 126 127 128 129 130 131
        on right: 120 121 155 156 157 158 159 160 161 162 165 166 167 168 171 172 173 174 175 176 177 178 179 180 181 188 189 190 191 192
    param_list_not_empty (103)
        on left: 132 133
        on right: 133 135
    param_list (104)
        on left: 134 135
        on right: 136 137 140 142
    method_stmt (105)
        on left: 136 137 138 139 140 141 142 143
        on right: 109 145 196
    class_stmt (106)
        on left: 144
        on right: 108 150 198
    class_body_stmt (107)
        on left: 145 146 147 148 149 150
        on right: 151 152
    class_body_not_empty (108)
        on left: 151 152
        on right: 152 154
    class_body (109)
        on left: 153 154
        on right: 144
    if_stmt (110)
        on left: 155 156 157 158 159 160 161 162 163 164
        on right: 123
    unless_stmt (111)
        on left: 165 166 167 168 169 170
        on right: 128
    elsif_list (112)
        on left: 171 172 173 174
        on right: 159 160 161 162 173 174
    while_stmt (113)
        on left: 175 176 177
        on right: 124
    for_stmt (114)
        on left: 178 179
        on right: 125
    until_stmt (115)
        on left: 180 181 182
        on right: 126
    return_stmt (116)
        on left: 183 184
        on right: 129
    redo_stmt (117)
        on left: 185 186
        on right: 177
    case_stmt (118)
        on left: 187 188
        on right: 127
    when_list (119)
        on left: 189 190 191 192
        on right: 187 188 191 192
    alias_stmt (120)
        on left: 193
        on right: 130 197
    module_stmt (121)
        on left: 194
        on right: 110 199
    module_body_stmt (122)
        on left: 195 196 197 198 199
        on right: 200 201
    module_body_not_empty (123)
        on left: 200 201
        on right: 201 203
    module_body (124)
        on left: 202 203
        on right: 194
    begin_rescue_stmt (125)
        on left: 204 205
        on right: 131


State 0

    0 $accept: . programm $end

    CLASS_KEYWORD   shift, and go to state 1
    DEF_KEYWORD     shift, and go to state 2
    MODULE_KEYWORD  shift, and go to state 3

    $default  reduce using rule 1 (programm)

    programm                    go to state 4
    programm_element            go to state 5
    programm_el_list_not_empty  go to state 6
    method_stmt                 go to state 7
    class_stmt                  go to state 8
    module_stmt                 go to state 9


State 1

  144 class_stmt: CLASS_KEYWORD . CONSTANT_NAME delimiter class_body END_KEYWORD

    CONSTANT_NAME  shift, and go to state 10


State 2

  136 method_stmt: DEF_KEYWORD . IDENTIFIER '(' param_list ')' delimiter stmt_list END_KEYWORD
  137            | DEF_KEYWORD . IDENTIFIER QUESTION_SYMBOL '(' param_list ')' delimiter stmt_list END_KEYWORD
  138            | DEF_KEYWORD . IDENTIFIER delimiter stmt_list END_KEYWORD
  139            | DEF_KEYWORD . IDENTIFIER QUESTION_SYMBOL delimiter stmt_list END_KEYWORD
  140            | DEF_KEYWORD . IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' delimiter stmt_list END_KEYWORD
  141            | DEF_KEYWORD . IDENTIFIER LOGICAL_NOT_OP delimiter stmt_list END_KEYWORD
  142            | DEF_KEYWORD . IDENTIFIER '=' '(' param_list ')' delimiter stmt_list END_KEYWORD
  143            | DEF_KEYWORD . IDENTIFIER '=' delimiter stmt_list END_KEYWORD

    IDENTIFIER  shift, and go to state 11


State 3

  194 module_stmt: MODULE_KEYWORD . CONSTANT_NAME delimiter module_body END_KEYWORD

    CONSTANT_NAME  shift, and go to state 12


State 4

    0 $accept: programm . $end

    $end  shift, and go to state 13


State 5

  111 programm_el_list_not_empty: programm_element .

    $default  reduce using rule 111 (programm_el_list_not_empty)


State 6

    2 programm: programm_el_list_not_empty .
  112 programm_el_list_not_empty: programm_el_list_not_empty . programm_element

    CLASS_KEYWORD   shift, and go to state 1
    DEF_KEYWORD     shift, and go to state 2
    MODULE_KEYWORD  shift, and go to state 3

    $default  reduce using rule 2 (programm)

    programm_element  go to state 14
    method_stmt       go to state 7
    class_stmt        go to state 8
    module_stmt       go to state 9


State 7

  109 programm_element: method_stmt .

    $default  reduce using rule 109 (programm_element)


State 8

  108 programm_element: class_stmt .

    $default  reduce using rule 108 (programm_element)


State 9

  110 programm_element: module_stmt .

    $default  reduce using rule 110 (programm_element)


State 10

  144 class_stmt: CLASS_KEYWORD CONSTANT_NAME . delimiter class_body END_KEYWORD

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 17


State 11

  136 method_stmt: DEF_KEYWORD IDENTIFIER . '(' param_list ')' delimiter stmt_list END_KEYWORD
  137            | DEF_KEYWORD IDENTIFIER . QUESTION_SYMBOL '(' param_list ')' delimiter stmt_list END_KEYWORD
  138            | DEF_KEYWORD IDENTIFIER . delimiter stmt_list END_KEYWORD
  139            | DEF_KEYWORD IDENTIFIER . QUESTION_SYMBOL delimiter stmt_list END_KEYWORD
  140            | DEF_KEYWORD IDENTIFIER . LOGICAL_NOT_OP '(' param_list ')' delimiter stmt_list END_KEYWORD
  141            | DEF_KEYWORD IDENTIFIER . LOGICAL_NOT_OP delimiter stmt_list END_KEYWORD
  142            | DEF_KEYWORD IDENTIFIER . '=' '(' param_list ')' delimiter stmt_list END_KEYWORD
  143            | DEF_KEYWORD IDENTIFIER . '=' delimiter stmt_list END_KEYWORD

    '='               shift, and go to state 18
    QUESTION_SYMBOL   shift, and go to state 19
    LOGICAL_NOT_OP    shift, and go to state 20
    '('               shift, and go to state 21
    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 22


State 12

  194 module_stmt: MODULE_KEYWORD CONSTANT_NAME . delimiter module_body END_KEYWORD

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 23


State 13

    0 $accept: programm $end .

    $default  accept


State 14

  112 programm_el_list_not_empty: programm_el_list_not_empty programm_element .

    $default  reduce using rule 112 (programm_el_list_not_empty)


State 15

  114 delimiter: SEMICOLON_SYMBOL .
  115          | SEMICOLON_SYMBOL . NEW_LINE_SYMBOL

    NEW_LINE_SYMBOL  shift, and go to state 24

    NEW_LINE_SYMBOL  [reduce using rule 114 (delimiter)]
    $default         reduce using rule 114 (delimiter)

    shift/reduce conflict on token NEW_LINE_SYMBOL:
      114 delimiter: SEMICOLON_SYMBOL .
      115 delimiter: SEMICOLON_SYMBOL . NEW_LINE_SYMBOL
      First example: DEF_KEYWORD IDENTIFIER delimiter CASE_KEYWORD expr WHEN_KEYWORD expr_list expr SEMICOLON_SYMBOL . NEW_LINE_SYMBOL stmt expr_list delimiter stmt END_KEYWORD delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 127: case_stmt                                                                                                                                                               delimiter
                                                                                                    `-> 187: CASE_KEYWORD expr when_list                                                                                                                        END_KEYWORD
                                                                                                                               `-> 191: when_list                                                                                      expr_list delimiter stmt
                                                                                                                                        `-> 189: WHEN_KEYWORD expr_list stmt                                                      stmt
                                                                                                                                                                        `-> 122: expr delimiter
                                                                                                                                                                                      `-> 115: SEMICOLON_SYMBOL . NEW_LINE_SYMBOL
      Second example: DEF_KEYWORD IDENTIFIER delimiter CASE_KEYWORD expr WHEN_KEYWORD expr_list delimiter expr SEMICOLON_SYMBOL . expr_list NEW_LINE_SYMBOL stmt END_KEYWORD delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 127: case_stmt                                                                                                                                                                   delimiter
                                                                                                    `-> 187: CASE_KEYWORD expr when_list                                                                                                                            END_KEYWORD
                                                                                                                               `-> 191: when_list                                                                           expr_list delimiter                stmt
                                                                                                                                        `-> 189: WHEN_KEYWORD expr_list delimiter stmt                                                `-> 113: NEW_LINE_SYMBOL
                                                                                                                                                                                  `-> 122: expr delimiter
                                                                                                                                                                                                `-> 114: SEMICOLON_SYMBOL .



State 16

  113 delimiter: NEW_LINE_SYMBOL .

    $default  reduce using rule 113 (delimiter)


State 17

  144 class_stmt: CLASS_KEYWORD CONSTANT_NAME delimiter . class_body END_KEYWORD

    CLASS_KEYWORD    shift, and go to state 1
    DEF_KEYWORD      shift, and go to state 2
    OBJECT_VAR_NAME  shift, and go to state 25
    CLASS_VAR_NAME   shift, and go to state 26

    $default  reduce using rule 153 (class_body)

    method_stmt           go to state 27
    class_stmt            go to state 28
    class_body_stmt       go to state 29
    class_body_not_empty  go to state 30
    class_body            go to state 31


State 18

  142 method_stmt: DEF_KEYWORD IDENTIFIER '=' . '(' param_list ')' delimiter stmt_list END_KEYWORD
  143            | DEF_KEYWORD IDENTIFIER '=' . delimiter stmt_list END_KEYWORD

    '('               shift, and go to state 32
    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 33


State 19

  137 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL . '(' param_list ')' delimiter stmt_list END_KEYWORD
  139            | DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL . delimiter stmt_list END_KEYWORD

    '('               shift, and go to state 34
    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 35


State 20

  140 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP . '(' param_list ')' delimiter stmt_list END_KEYWORD
  141            | DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP . delimiter stmt_list END_KEYWORD

    '('               shift, and go to state 36
    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 37


State 21

  136 method_stmt: DEF_KEYWORD IDENTIFIER '(' . param_list ')' delimiter stmt_list END_KEYWORD

    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 134 (param_list)

    param_list_not_empty  go to state 39
    param_list            go to state 40


State 22

  138 method_stmt: DEF_KEYWORD IDENTIFIER delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 68
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 23

  194 module_stmt: MODULE_KEYWORD CONSTANT_NAME delimiter . module_body END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    CLASS_KEYWORD        shift, and go to state 1
    DEF_KEYWORD          shift, and go to state 2
    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    MODULE_KEYWORD       shift, and go to state 3
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 202 (module_body)

    expr                   go to state 79
    method_stmt            go to state 80
    class_stmt             go to state 81
    alias_stmt             go to state 82
    module_stmt            go to state 83
    module_body_stmt       go to state 84
    module_body_not_empty  go to state 85
    module_body            go to state 86


State 24

  115 delimiter: SEMICOLON_SYMBOL NEW_LINE_SYMBOL .

    $default  reduce using rule 115 (delimiter)


State 25

  148 class_body_stmt: OBJECT_VAR_NAME . delimiter
  149                | OBJECT_VAR_NAME . '=' expr delimiter

    '='               shift, and go to state 87
    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 88


State 26

  146 class_body_stmt: CLASS_VAR_NAME . delimiter
  147                | CLASS_VAR_NAME . '=' expr delimiter

    '='               shift, and go to state 89
    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 90


State 27

  145 class_body_stmt: method_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 91


State 28

  150 class_body_stmt: class_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 92


State 29

  151 class_body_not_empty: class_body_stmt .

    $default  reduce using rule 151 (class_body_not_empty)


State 30

  152 class_body_not_empty: class_body_not_empty . class_body_stmt
  154 class_body: class_body_not_empty .

    CLASS_KEYWORD    shift, and go to state 1
    DEF_KEYWORD      shift, and go to state 2
    OBJECT_VAR_NAME  shift, and go to state 25
    CLASS_VAR_NAME   shift, and go to state 26

    $default  reduce using rule 154 (class_body)

    method_stmt      go to state 27
    class_stmt       go to state 28
    class_body_stmt  go to state 93


State 31

  144 class_stmt: CLASS_KEYWORD CONSTANT_NAME delimiter class_body . END_KEYWORD

    END_KEYWORD  shift, and go to state 94


State 32

  142 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' . param_list ')' delimiter stmt_list END_KEYWORD

    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 134 (param_list)

    param_list_not_empty  go to state 39
    param_list            go to state 95


State 33

  143 method_stmt: DEF_KEYWORD IDENTIFIER '=' delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 96
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 34

  137 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' . param_list ')' delimiter stmt_list END_KEYWORD

    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 134 (param_list)

    param_list_not_empty  go to state 39
    param_list            go to state 97


State 35

  139 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 98
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 36

  140 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' . param_list ')' delimiter stmt_list END_KEYWORD

    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 134 (param_list)

    param_list_not_empty  go to state 39
    param_list            go to state 99


State 37

  141 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 100
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 38

  132 param_list_not_empty: IDENTIFIER .

    $default  reduce using rule 132 (param_list_not_empty)


State 39

  133 param_list_not_empty: param_list_not_empty . COMMA_SYMBOL IDENTIFIER
  135 param_list: param_list_not_empty .

    COMMA_SYMBOL  shift, and go to state 101

    $default  reduce using rule 135 (param_list)


State 40

  136 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list . ')' delimiter stmt_list END_KEYWORD

    ')'  shift, and go to state 102


State 41

  193 alias_stmt: ALIAS_KEYWORD . IDENTIFIER IDENTIFIER

    IDENTIFIER  shift, and go to state 103


State 42

  204 begin_rescue_stmt: BEGIN_KEYWORD . delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list END_KEYWORD
  205                  | BEGIN_KEYWORD . delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 104


State 43

  187 case_stmt: CASE_KEYWORD . expr when_list END_KEYWORD
  188          | CASE_KEYWORD . expr when_list ELSE_KEYWORD stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 105


State 44

   55 expr: DEFINED_KEYWORD . expr
  103     | DEFINED_KEYWORD . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 107
    linefeed_expr  go to state 108


State 45

  155 if_stmt: IF_KEYWORD . expr delimiter stmt END_KEYWORD
  156        | IF_KEYWORD . expr THEN_KEYWORD stmt END_KEYWORD
  157        | IF_KEYWORD . expr delimiter stmt ELSE_KEYWORD stmt END_KEYWORD
  158        | IF_KEYWORD . expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  159        | IF_KEYWORD . expr delimiter stmt elsif_list stmt END_KEYWORD
  160        | IF_KEYWORD . expr THEN_KEYWORD stmt elsif_list stmt END_KEYWORD
  161        | IF_KEYWORD . expr delimiter stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD
  162        | IF_KEYWORD . expr THEN_KEYWORD stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 109


State 46

    9 expr: FALSE_KEYWORD .

    $default  reduce using rule 9 (expr)


State 47

  178 for_stmt: FOR_KEYWORD . expr IN_KEYWORD expr DO_KEYWORD stmt END_KEYWORD
  179         | FOR_KEYWORD . expr IN_KEYWORD expr stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 110


State 48

   10 expr: NIL_KEYWORD .

    $default  reduce using rule 10 (expr)


State 49

  183 return_stmt: RETURN_KEYWORD . expr
  184            | RETURN_KEYWORD .

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 184 (return_stmt)

    expr  go to state 111


State 50

    8 expr: TRUE_KEYWORD .

    $default  reduce using rule 8 (expr)


State 51

  165 unless_stmt: UNLESS_KEYWORD . expr THEN_KEYWORD stmt END_KEYWORD
  166            | UNLESS_KEYWORD . expr stmt END_KEYWORD
  167            | UNLESS_KEYWORD . expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  168            | UNLESS_KEYWORD . expr stmt ELSE_KEYWORD stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 112


State 52

  180 until_stmt: UNTIL_KEYWORD . expr stmt END_KEYWORD
  181           | UNTIL_KEYWORD . expr DO_KEYWORD stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 113


State 53

  175 while_stmt: WHILE_KEYWORD . expr DO_KEYWORD stmt END_KEYWORD
  176           | WHILE_KEYWORD . expr stmt END_KEYWORD
  177           | WHILE_KEYWORD . expr stmt redo_stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 114


State 54

   26 expr: NOT_KEYWORD . '(' expr ')'
   74     | NOT_KEYWORD . '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')'

    '('  shift, and go to state 115


State 55

   20 expr: '-' . expr
   66     | '-' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 116
    linefeed_expr  go to state 117


State 56

   50 expr: LOGICAL_NOT_OP . expr
   98     | LOGICAL_NOT_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 118
    linefeed_expr  go to state 119


State 57

   53 expr: '(' . expr ')'
  101     | '(' . NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 120
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 121


State 58

   54 expr: '[' . expr_list ']'
  102     | '[' . NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ']'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 122
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 116 (expr_list)

    expr                 go to state 123
    expr_list            go to state 124
    expr_list_not_empty  go to state 125


State 59

   56 expr: DOUBLE_COLON_SYMBOL . expr
  104     | DOUBLE_COLON_SYMBOL . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 126
    linefeed_expr  go to state 127


State 60

    7 expr: STRING .

    $default  reduce using rule 7 (expr)


State 61

   11 expr: INTEGER_NUMBER .

    $default  reduce using rule 11 (expr)


State 62

   12 expr: FLOAT_NUMBER .

    $default  reduce using rule 12 (expr)


State 63

    3 expr: IDENTIFIER .
   21     | IDENTIFIER . '(' expr_list ')'
   67     | IDENTIFIER . '(' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ')'

    '('  shift, and go to state 128

    '('       [reduce using rule 3 (expr)]
    $default  reduce using rule 3 (expr)

    shift/reduce conflict on token '(':
        3 expr: IDENTIFIER .
       21 expr: IDENTIFIER . '(' expr_list ')'
      First example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD IDENTIFIER . '(' expr_list ')' DO_KEYWORD stmt END_KEYWORD delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: method_stmt
                               `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                             END_KEYWORD
                                                                         `-> 120: stmt
                                                                                  `-> 124: while_stmt                                                                                delimiter
                                                                                           `-> 175: WHILE_KEYWORD expr                                   DO_KEYWORD stmt END_KEYWORD
                                                                                                                  `-> 21: IDENTIFIER . '(' expr_list ')'
      Second example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD IDENTIFIER . '(' expr ')' delimiter END_KEYWORD delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                  $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                  END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                     delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr                stmt                                    END_KEYWORD
                                                                                                                           `-> 3: IDENTIFIER . `-> 122: expr                 delimiter
                                                                                                                                                        `-> 53: '(' expr ')'

    shift/reduce conflict on token '(':
        3 expr: IDENTIFIER .
       67 expr: IDENTIFIER . '(' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ')'
      First example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD IDENTIFIER . '(' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ')' DO_KEYWORD stmt END_KEYWORD delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: method_stmt
                               `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                             END_KEYWORD
                                                                         `-> 120: stmt
                                                                                  `-> 124: while_stmt                                                                                                                delimiter
                                                                                           `-> 175: WHILE_KEYWORD expr                                                                   DO_KEYWORD stmt END_KEYWORD
                                                                                                                  `-> 67: IDENTIFIER . '(' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ')'
      Second example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD IDENTIFIER . '(' expr ')' delimiter END_KEYWORD delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                  $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                  END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                     delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr                stmt                                    END_KEYWORD
                                                                                                                           `-> 3: IDENTIFIER . `-> 122: expr                 delimiter
                                                                                                                                                        `-> 53: '(' expr ')'



State 64

    4 expr: OBJECT_VAR_NAME .

    $default  reduce using rule 4 (expr)


State 65

    5 expr: CLASS_VAR_NAME .

    $default  reduce using rule 5 (expr)


State 66

    6 expr: CONSTANT_NAME .

    $default  reduce using rule 6 (expr)


State 67

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  122 stmt: expr . delimiter
  163 if_stmt: expr . IF_KEYWORD expr
  164        | expr . IF_KEYWORD NEW_LINE_SYMBOL expr
  169 unless_stmt: expr . UNLESS_KEYWORD expr
  170            | expr . UNLESS_KEYWORD NEW_LINE_SYMBOL expr
  182 until_stmt: expr . UNTIL_KEYWORD expr

    IF_KEYWORD              shift, and go to state 129
    UNLESS_KEYWORD          shift, and go to state 130
    UNTIL_KEYWORD           shift, and go to state 131
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    SEMICOLON_SYMBOL        shift, and go to state 15
    NEW_LINE_SYMBOL         shift, and go to state 16

    delimiter  go to state 169


State 68

  121 stmt_list: stmt_list . stmt
  138 method_stmt: DEF_KEYWORD IDENTIFIER delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 170
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 69

  120 stmt_list: stmt .

    $default  reduce using rule 120 (stmt_list)


State 70

  123 stmt: if_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 172


State 71

  128 stmt: unless_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 173


State 72

  124 stmt: while_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 174


State 73

  125 stmt: for_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 175


State 74

  126 stmt: until_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 176


State 75

  129 stmt: return_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 177


State 76

  127 stmt: case_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 178


State 77

  130 stmt: alias_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 179


State 78

  131 stmt: begin_rescue_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 180


State 79

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  195 module_body_stmt: expr . delimiter

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    SEMICOLON_SYMBOL        shift, and go to state 15
    NEW_LINE_SYMBOL         shift, and go to state 16

    delimiter  go to state 181


State 80

  196 module_body_stmt: method_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 182


State 81

  198 module_body_stmt: class_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 183


State 82

  197 module_body_stmt: alias_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 184


State 83

  199 module_body_stmt: module_stmt . delimiter

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 185


State 84

  200 module_body_not_empty: module_body_stmt .

    $default  reduce using rule 200 (module_body_not_empty)


State 85

  201 module_body_not_empty: module_body_not_empty . module_body_stmt
  203 module_body: module_body_not_empty .

    ALIAS_KEYWORD        shift, and go to state 41
    CLASS_KEYWORD        shift, and go to state 1
    DEF_KEYWORD          shift, and go to state 2
    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    MODULE_KEYWORD       shift, and go to state 3
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 203 (module_body)

    expr              go to state 79
    method_stmt       go to state 80
    class_stmt        go to state 81
    alias_stmt        go to state 82
    module_stmt       go to state 83
    module_body_stmt  go to state 186


State 86

  194 module_stmt: MODULE_KEYWORD CONSTANT_NAME delimiter module_body . END_KEYWORD

    END_KEYWORD  shift, and go to state 187


State 87

  149 class_body_stmt: OBJECT_VAR_NAME '=' . expr delimiter

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 188


State 88

  148 class_body_stmt: OBJECT_VAR_NAME delimiter .

    $default  reduce using rule 148 (class_body_stmt)


State 89

  147 class_body_stmt: CLASS_VAR_NAME '=' . expr delimiter

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 189


State 90

  146 class_body_stmt: CLASS_VAR_NAME delimiter .

    $default  reduce using rule 146 (class_body_stmt)


State 91

  145 class_body_stmt: method_stmt delimiter .

    $default  reduce using rule 145 (class_body_stmt)


State 92

  150 class_body_stmt: class_stmt delimiter .

    $default  reduce using rule 150 (class_body_stmt)


State 93

  152 class_body_not_empty: class_body_not_empty class_body_stmt .

    $default  reduce using rule 152 (class_body_not_empty)


State 94

  144 class_stmt: CLASS_KEYWORD CONSTANT_NAME delimiter class_body END_KEYWORD .

    $default  reduce using rule 144 (class_stmt)


State 95

  142 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' param_list . ')' delimiter stmt_list END_KEYWORD

    ')'  shift, and go to state 190


State 96

  121 stmt_list: stmt_list . stmt
  143 method_stmt: DEF_KEYWORD IDENTIFIER '=' delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 191
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 97

  137 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list . ')' delimiter stmt_list END_KEYWORD

    ')'  shift, and go to state 192


State 98

  121 stmt_list: stmt_list . stmt
  139 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 193
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 99

  140 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list . ')' delimiter stmt_list END_KEYWORD

    ')'  shift, and go to state 194


State 100

  121 stmt_list: stmt_list . stmt
  141 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 195
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 101

  133 param_list_not_empty: param_list_not_empty COMMA_SYMBOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 196


State 102

  136 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list ')' . delimiter stmt_list END_KEYWORD

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 197


State 103

  193 alias_stmt: ALIAS_KEYWORD IDENTIFIER . IDENTIFIER

    IDENTIFIER  shift, and go to state 198


State 104

  204 begin_rescue_stmt: BEGIN_KEYWORD delimiter . stmt_list RESCUE_KEYWORD delimiter stmt_list END_KEYWORD
  205                  | BEGIN_KEYWORD delimiter . stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 199
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 105

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  187 case_stmt: CASE_KEYWORD expr . when_list END_KEYWORD
  188          | CASE_KEYWORD expr . when_list ELSE_KEYWORD stmt END_KEYWORD

    WHEN_KEYWORD            shift, and go to state 200
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    when_list  go to state 201


State 106

  107 linefeed_expr: NEW_LINE_SYMBOL . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 202


State 107

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   55     | DEFINED_KEYWORD expr .
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 55 (expr)


State 108

  103 expr: DEFINED_KEYWORD linefeed_expr .

    $default  reduce using rule 103 (expr)


State 109

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  155 if_stmt: IF_KEYWORD expr . delimiter stmt END_KEYWORD
  156        | IF_KEYWORD expr . THEN_KEYWORD stmt END_KEYWORD
  157        | IF_KEYWORD expr . delimiter stmt ELSE_KEYWORD stmt END_KEYWORD
  158        | IF_KEYWORD expr . THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  159        | IF_KEYWORD expr . delimiter stmt elsif_list stmt END_KEYWORD
  160        | IF_KEYWORD expr . THEN_KEYWORD stmt elsif_list stmt END_KEYWORD
  161        | IF_KEYWORD expr . delimiter stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD
  162        | IF_KEYWORD expr . THEN_KEYWORD stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD

    THEN_KEYWORD            shift, and go to state 203
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    SEMICOLON_SYMBOL        shift, and go to state 15
    NEW_LINE_SYMBOL         shift, and go to state 16

    delimiter  go to state 204


State 110

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  178 for_stmt: FOR_KEYWORD expr . IN_KEYWORD expr DO_KEYWORD stmt END_KEYWORD
  179         | FOR_KEYWORD expr . IN_KEYWORD expr stmt END_KEYWORD

    IN_KEYWORD              shift, and go to state 205
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 111

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  183 return_stmt: RETURN_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 183 (return_stmt)


State 112

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  165 unless_stmt: UNLESS_KEYWORD expr . THEN_KEYWORD stmt END_KEYWORD
  166            | UNLESS_KEYWORD expr . stmt END_KEYWORD
  167            | UNLESS_KEYWORD expr . THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  168            | UNLESS_KEYWORD expr . stmt ELSE_KEYWORD stmt END_KEYWORD

    ALIAS_KEYWORD           shift, and go to state 41
    BEGIN_KEYWORD           shift, and go to state 42
    CASE_KEYWORD            shift, and go to state 43
    DEFINED_KEYWORD         shift, and go to state 44
    IF_KEYWORD              shift, and go to state 45
    FALSE_KEYWORD           shift, and go to state 46
    FOR_KEYWORD             shift, and go to state 47
    NIL_KEYWORD             shift, and go to state 48
    RETURN_KEYWORD          shift, and go to state 49
    THEN_KEYWORD            shift, and go to state 206
    TRUE_KEYWORD            shift, and go to state 50
    UNLESS_KEYWORD          shift, and go to state 51
    UNTIL_KEYWORD           shift, and go to state 52
    WHILE_KEYWORD           shift, and go to state 53
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    NOT_KEYWORD             shift, and go to state 54
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 207
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    LOGICAL_NOT_OP          shift, and go to state 56
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '('                     shift, and go to state 57
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 208
    DOUBLE_COLON_SYMBOL     shift, and go to state 209
    STRING                  shift, and go to state 60
    INTEGER_NUMBER          shift, and go to state 61
    FLOAT_NUMBER            shift, and go to state 62
    IDENTIFIER              shift, and go to state 63
    OBJECT_VAR_NAME         shift, and go to state 64
    CLASS_VAR_NAME          shift, and go to state 65
    CONSTANT_NAME           shift, and go to state 66

    expr               go to state 67
    stmt               go to state 210
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 113

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  180 until_stmt: UNTIL_KEYWORD expr . stmt END_KEYWORD
  181           | UNTIL_KEYWORD expr . DO_KEYWORD stmt END_KEYWORD

    ALIAS_KEYWORD           shift, and go to state 41
    BEGIN_KEYWORD           shift, and go to state 42
    CASE_KEYWORD            shift, and go to state 43
    DEFINED_KEYWORD         shift, and go to state 44
    DO_KEYWORD              shift, and go to state 211
    IF_KEYWORD              shift, and go to state 45
    FALSE_KEYWORD           shift, and go to state 46
    FOR_KEYWORD             shift, and go to state 47
    NIL_KEYWORD             shift, and go to state 48
    RETURN_KEYWORD          shift, and go to state 49
    TRUE_KEYWORD            shift, and go to state 50
    UNLESS_KEYWORD          shift, and go to state 51
    UNTIL_KEYWORD           shift, and go to state 52
    WHILE_KEYWORD           shift, and go to state 53
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    NOT_KEYWORD             shift, and go to state 54
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 207
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    LOGICAL_NOT_OP          shift, and go to state 56
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '('                     shift, and go to state 57
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 208
    DOUBLE_COLON_SYMBOL     shift, and go to state 209
    STRING                  shift, and go to state 60
    INTEGER_NUMBER          shift, and go to state 61
    FLOAT_NUMBER            shift, and go to state 62
    IDENTIFIER              shift, and go to state 63
    OBJECT_VAR_NAME         shift, and go to state 64
    CLASS_VAR_NAME          shift, and go to state 65
    CONSTANT_NAME           shift, and go to state 66

    expr               go to state 67
    stmt               go to state 212
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 114

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  175 while_stmt: WHILE_KEYWORD expr . DO_KEYWORD stmt END_KEYWORD
  176           | WHILE_KEYWORD expr . stmt END_KEYWORD
  177           | WHILE_KEYWORD expr . stmt redo_stmt END_KEYWORD

    ALIAS_KEYWORD           shift, and go to state 41
    BEGIN_KEYWORD           shift, and go to state 42
    CASE_KEYWORD            shift, and go to state 43
    DEFINED_KEYWORD         shift, and go to state 44
    DO_KEYWORD              shift, and go to state 213
    IF_KEYWORD              shift, and go to state 45
    FALSE_KEYWORD           shift, and go to state 46
    FOR_KEYWORD             shift, and go to state 47
    NIL_KEYWORD             shift, and go to state 48
    RETURN_KEYWORD          shift, and go to state 49
    TRUE_KEYWORD            shift, and go to state 50
    UNLESS_KEYWORD          shift, and go to state 51
    UNTIL_KEYWORD           shift, and go to state 52
    WHILE_KEYWORD           shift, and go to state 53
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    NOT_KEYWORD             shift, and go to state 54
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 207
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    LOGICAL_NOT_OP          shift, and go to state 56
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '('                     shift, and go to state 57
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 208
    DOUBLE_COLON_SYMBOL     shift, and go to state 209
    STRING                  shift, and go to state 60
    INTEGER_NUMBER          shift, and go to state 61
    FLOAT_NUMBER            shift, and go to state 62
    IDENTIFIER              shift, and go to state 63
    OBJECT_VAR_NAME         shift, and go to state 64
    CLASS_VAR_NAME          shift, and go to state 65
    CONSTANT_NAME           shift, and go to state 66

    expr               go to state 67
    stmt               go to state 214
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 115

   26 expr: NOT_KEYWORD '(' . expr ')'
   74     | NOT_KEYWORD '(' . NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 215
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 216


State 116

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   20     | '-' expr .
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 20 (expr)


State 117

   66 expr: '-' linefeed_expr .

    $default  reduce using rule 66 (expr)


State 118

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   50     | LOGICAL_NOT_OP expr .
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 50 (expr)


State 119

   98 expr: LOGICAL_NOT_OP linefeed_expr .

    $default  reduce using rule 98 (expr)


State 120

  101 expr: '(' NEW_LINE_SYMBOL . expr NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 217


State 121

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   53     | '(' expr . ')'
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    ')'                     shift, and go to state 218
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 122

  102 expr: '[' NEW_LINE_SYMBOL . expr_list NEW_LINE_SYMBOL ']'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 116 (expr_list)

    expr                 go to state 123
    expr_list            go to state 219
    expr_list_not_empty  go to state 125


State 123

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  118 expr_list_not_empty: expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 118 (expr_list_not_empty)


State 124

   54 expr: '[' expr_list . ']'

    ']'  shift, and go to state 220


State 125

  117 expr_list: expr_list_not_empty .
  119 expr_list_not_empty: expr_list_not_empty . COMMA_SYMBOL expr

    COMMA_SYMBOL  shift, and go to state 221

    $default  reduce using rule 117 (expr_list)


State 126

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   56     | DOUBLE_COLON_SYMBOL expr .
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    $default  reduce using rule 56 (expr)


State 127

  104 expr: DOUBLE_COLON_SYMBOL linefeed_expr .

    $default  reduce using rule 104 (expr)


State 128

   21 expr: IDENTIFIER '(' . expr_list ')'
   67     | IDENTIFIER '(' . NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 222
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 116 (expr_list)

    expr                 go to state 123
    expr_list            go to state 223
    expr_list_not_empty  go to state 125


State 129

  163 if_stmt: expr IF_KEYWORD . expr
  164        | expr IF_KEYWORD . NEW_LINE_SYMBOL expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 224
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 225


State 130

  169 unless_stmt: expr UNLESS_KEYWORD . expr
  170            | expr UNLESS_KEYWORD . NEW_LINE_SYMBOL expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 226
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 227


State 131

  182 until_stmt: expr UNTIL_KEYWORD . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 228


State 132

   25 expr: expr OR_KEYWORD . expr
   73     | expr OR_KEYWORD . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 229
    linefeed_expr  go to state 230


State 133

   24 expr: expr AND_KEYWORD . expr
   72     | expr AND_KEYWORD . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 231
    linefeed_expr  go to state 232


State 134

   13 expr: expr '=' . expr
   59     | expr '=' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 233
    linefeed_expr  go to state 234


State 135

   36 expr: expr ADD_ASSIGN_OP . expr
   84     | expr ADD_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 235
    linefeed_expr  go to state 236


State 136

   37 expr: expr SUB_ASSIGN_OP . expr
   85     | expr SUB_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 237
    linefeed_expr  go to state 238


State 137

   38 expr: expr MUL_ASSIGN_OP . expr
   86     | expr MUL_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 239
    linefeed_expr  go to state 240


State 138

   39 expr: expr DIV_ASSIGN_OP . expr
   87     | expr DIV_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 241
    linefeed_expr  go to state 242


State 139

   40 expr: expr MOD_ASSIGN_OP . expr
   88     | expr MOD_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 243
    linefeed_expr  go to state 244


State 140

   41 expr: expr POW_ASSIGN_OP . expr
   89     | expr POW_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 245
    linefeed_expr  go to state 246


State 141

   58 expr: expr QUESTION_SYMBOL . expr COLON_SYMBOL expr
  106     | expr QUESTION_SYMBOL . linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 247
    linefeed_expr  go to state 248


State 142

   52 expr: expr EXCLUSIVE_RANGE_OP . expr
  100     | expr EXCLUSIVE_RANGE_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 249
    linefeed_expr  go to state 250


State 143

   51 expr: expr INCLUSIVE_RANGE_OP . expr
   99     | expr INCLUSIVE_RANGE_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 251
    linefeed_expr  go to state 252


State 144

   49 expr: expr LOGICAL_OR_OP . expr
   97     | expr LOGICAL_OR_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 253
    linefeed_expr  go to state 254


State 145

   48 expr: expr LOGICAL_AND_OP . expr
   96     | expr LOGICAL_AND_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 255
    linefeed_expr  go to state 256


State 146

   28 expr: expr EQL_OP . expr
   76     | expr EQL_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 257
    linefeed_expr  go to state 258


State 147

   29 expr: expr NOT_EQL_OP . expr
   77     | expr NOT_EQL_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 259
    linefeed_expr  go to state 260


State 148

   34 expr: expr COMB_COMPRASION_OP . expr
   82     | expr COMB_COMPRASION_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 261
    linefeed_expr  go to state 262


State 149

   35 expr: expr CASE_EQL_OP . expr
   83     | expr CASE_EQL_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 263
    linefeed_expr  go to state 264


State 150

   30 expr: expr GREATER_OP . expr
   78     | expr GREATER_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 265
    linefeed_expr  go to state 266


State 151

   31 expr: expr LESS_OP . expr
   79     | expr LESS_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 267
    linefeed_expr  go to state 268


State 152

   32 expr: expr GREATER_OR_EQL_OP . expr
   80     | expr GREATER_OR_EQL_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 269
    linefeed_expr  go to state 270


State 153

   33 expr: expr LESS_OR_EQL_OP . expr
   81     | expr LESS_OR_EQL_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 271
    linefeed_expr  go to state 272


State 154

   43 expr: expr BIN_OR_OP . expr
   91     | expr BIN_OR_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 273
    linefeed_expr  go to state 274


State 155

   44 expr: expr BIN_XOR_OP . expr
   92     | expr BIN_XOR_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 275
    linefeed_expr  go to state 276


State 156

   42 expr: expr BIN_AND_OP . expr
   90     | expr BIN_AND_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 277
    linefeed_expr  go to state 278


State 157

   46 expr: expr BIN_LEFT_SHIFT_OP . expr
   94     | expr BIN_LEFT_SHIFT_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 279
    linefeed_expr  go to state 280


State 158

   47 expr: expr BIN_RIGHT_SHIFT_OP . expr
   95     | expr BIN_RIGHT_SHIFT_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 281
    linefeed_expr  go to state 282


State 159

   18 expr: expr '+' . expr
   64     | expr '+' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 283
    linefeed_expr  go to state 284


State 160

   19 expr: expr '-' . expr
   65     | expr '-' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 285
    linefeed_expr  go to state 286


State 161

   17 expr: expr '*' . expr
   63     | expr '*' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 287
    linefeed_expr  go to state 288


State 162

   15 expr: expr '/' . expr
   61     | expr '/' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 289
    linefeed_expr  go to state 290


State 163

   16 expr: expr '%' . expr
   62     | expr '%' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 291
    linefeed_expr  go to state 292


State 164

   45 expr: expr BIN_ONES_COMPLEMENT_OP . expr
   93     | expr BIN_ONES_COMPLEMENT_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 293
    linefeed_expr  go to state 294


State 165

   27 expr: expr ARITHMETIC_POW_OP . expr
   75     | expr ARITHMETIC_POW_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 295
    linefeed_expr  go to state 296


State 166

   22 expr: expr '.' . IDENTIFIER
   23     | expr '.' . IDENTIFIER QUESTION_SYMBOL
   68     | expr '.' . NEW_LINE_SYMBOL IDENTIFIER
   69     | expr '.' . NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr '.' . NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr '.' . NEW_LINE_SYMBOL IDENTIFIER '='

    NEW_LINE_SYMBOL  shift, and go to state 297
    IDENTIFIER       shift, and go to state 298


State 167

   14 expr: expr '[' . expr ']'
   60     | expr '[' . linefeed_expr NEW_LINE_SYMBOL ']'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 299
    linefeed_expr  go to state 300


State 168

   57 expr: expr DOUBLE_COLON_SYMBOL . expr
  105     | expr DOUBLE_COLON_SYMBOL . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 301
    linefeed_expr  go to state 302


State 169

  122 stmt: expr delimiter .

    $default  reduce using rule 122 (stmt)


State 170

  138 method_stmt: DEF_KEYWORD IDENTIFIER delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 138 (method_stmt)


State 171

  121 stmt_list: stmt_list stmt .

    $default  reduce using rule 121 (stmt_list)


State 172

  123 stmt: if_stmt delimiter .

    $default  reduce using rule 123 (stmt)


State 173

  128 stmt: unless_stmt delimiter .

    $default  reduce using rule 128 (stmt)


State 174

  124 stmt: while_stmt delimiter .

    $default  reduce using rule 124 (stmt)


State 175

  125 stmt: for_stmt delimiter .

    $default  reduce using rule 125 (stmt)


State 176

  126 stmt: until_stmt delimiter .

    $default  reduce using rule 126 (stmt)


State 177

  129 stmt: return_stmt delimiter .

    $default  reduce using rule 129 (stmt)


State 178

  127 stmt: case_stmt delimiter .

    $default  reduce using rule 127 (stmt)


State 179

  130 stmt: alias_stmt delimiter .

    $default  reduce using rule 130 (stmt)


State 180

  131 stmt: begin_rescue_stmt delimiter .

    $default  reduce using rule 131 (stmt)


State 181

  195 module_body_stmt: expr delimiter .

    $default  reduce using rule 195 (module_body_stmt)


State 182

  196 module_body_stmt: method_stmt delimiter .

    $default  reduce using rule 196 (module_body_stmt)


State 183

  198 module_body_stmt: class_stmt delimiter .

    $default  reduce using rule 198 (module_body_stmt)


State 184

  197 module_body_stmt: alias_stmt delimiter .

    $default  reduce using rule 197 (module_body_stmt)


State 185

  199 module_body_stmt: module_stmt delimiter .

    $default  reduce using rule 199 (module_body_stmt)


State 186

  201 module_body_not_empty: module_body_not_empty module_body_stmt .

    $default  reduce using rule 201 (module_body_not_empty)


State 187

  194 module_stmt: MODULE_KEYWORD CONSTANT_NAME delimiter module_body END_KEYWORD .

    $default  reduce using rule 194 (module_stmt)


State 188

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  149 class_body_stmt: OBJECT_VAR_NAME '=' expr . delimiter

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    SEMICOLON_SYMBOL        shift, and go to state 15
    NEW_LINE_SYMBOL         shift, and go to state 16

    delimiter  go to state 303


State 189

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  147 class_body_stmt: CLASS_VAR_NAME '=' expr . delimiter

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    SEMICOLON_SYMBOL        shift, and go to state 15
    NEW_LINE_SYMBOL         shift, and go to state 16

    delimiter  go to state 304


State 190

  142 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' param_list ')' . delimiter stmt_list END_KEYWORD

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 305


State 191

  143 method_stmt: DEF_KEYWORD IDENTIFIER '=' delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 143 (method_stmt)


State 192

  137 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list ')' . delimiter stmt_list END_KEYWORD

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 306


State 193

  139 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 139 (method_stmt)


State 194

  140 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' . delimiter stmt_list END_KEYWORD

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 307


State 195

  141 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 141 (method_stmt)


State 196

  133 param_list_not_empty: param_list_not_empty COMMA_SYMBOL IDENTIFIER .

    $default  reduce using rule 133 (param_list_not_empty)


State 197

  136 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list ')' delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 308
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 198

  193 alias_stmt: ALIAS_KEYWORD IDENTIFIER IDENTIFIER .

    $default  reduce using rule 193 (alias_stmt)


State 199

  121 stmt_list: stmt_list . stmt
  204 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list . RESCUE_KEYWORD delimiter stmt_list END_KEYWORD
  205                  | BEGIN_KEYWORD delimiter stmt_list . RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RESCUE_KEYWORD       shift, and go to state 309
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 200

  189 when_list: WHEN_KEYWORD . expr_list delimiter stmt
  190          | WHEN_KEYWORD . expr_list THEN_KEYWORD stmt

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 116 (expr_list)

    expr                 go to state 123
    expr_list            go to state 310
    expr_list_not_empty  go to state 125


State 201

  187 case_stmt: CASE_KEYWORD expr when_list . END_KEYWORD
  188          | CASE_KEYWORD expr when_list . ELSE_KEYWORD stmt END_KEYWORD
  191 when_list: when_list . expr_list delimiter stmt
  192          | when_list . expr_list THEN_KEYWORD stmt

    DEFINED_KEYWORD      shift, and go to state 44
    ELSE_KEYWORD         shift, and go to state 311
    END_KEYWORD          shift, and go to state 312
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 116 (expr_list)

    expr                 go to state 123
    expr_list            go to state 313
    expr_list_not_empty  go to state 125


State 202

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  107 linefeed_expr: NEW_LINE_SYMBOL expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    OR_KEYWORD              [reduce using rule 107 (linefeed_expr)]
    AND_KEYWORD             [reduce using rule 107 (linefeed_expr)]
    '='                     [reduce using rule 107 (linefeed_expr)]
    ADD_ASSIGN_OP           [reduce using rule 107 (linefeed_expr)]
    SUB_ASSIGN_OP           [reduce using rule 107 (linefeed_expr)]
    MUL_ASSIGN_OP           [reduce using rule 107 (linefeed_expr)]
    DIV_ASSIGN_OP           [reduce using rule 107 (linefeed_expr)]
    MOD_ASSIGN_OP           [reduce using rule 107 (linefeed_expr)]
    POW_ASSIGN_OP           [reduce using rule 107 (linefeed_expr)]
    QUESTION_SYMBOL         [reduce using rule 107 (linefeed_expr)]
    EXCLUSIVE_RANGE_OP      [reduce using rule 107 (linefeed_expr)]
    INCLUSIVE_RANGE_OP      [reduce using rule 107 (linefeed_expr)]
    LOGICAL_OR_OP           [reduce using rule 107 (linefeed_expr)]
    LOGICAL_AND_OP          [reduce using rule 107 (linefeed_expr)]
    EQL_OP                  [reduce using rule 107 (linefeed_expr)]
    NOT_EQL_OP              [reduce using rule 107 (linefeed_expr)]
    COMB_COMPRASION_OP      [reduce using rule 107 (linefeed_expr)]
    CASE_EQL_OP             [reduce using rule 107 (linefeed_expr)]
    GREATER_OP              [reduce using rule 107 (linefeed_expr)]
    LESS_OP                 [reduce using rule 107 (linefeed_expr)]
    GREATER_OR_EQL_OP       [reduce using rule 107 (linefeed_expr)]
    LESS_OR_EQL_OP          [reduce using rule 107 (linefeed_expr)]
    BIN_OR_OP               [reduce using rule 107 (linefeed_expr)]
    BIN_XOR_OP              [reduce using rule 107 (linefeed_expr)]
    BIN_AND_OP              [reduce using rule 107 (linefeed_expr)]
    BIN_LEFT_SHIFT_OP       [reduce using rule 107 (linefeed_expr)]
    BIN_RIGHT_SHIFT_OP      [reduce using rule 107 (linefeed_expr)]
    '+'                     [reduce using rule 107 (linefeed_expr)]
    '-'                     [reduce using rule 107 (linefeed_expr)]
    '*'                     [reduce using rule 107 (linefeed_expr)]
    '/'                     [reduce using rule 107 (linefeed_expr)]
    '%'                     [reduce using rule 107 (linefeed_expr)]
    BIN_ONES_COMPLEMENT_OP  [reduce using rule 107 (linefeed_expr)]
    ARITHMETIC_POW_OP       [reduce using rule 107 (linefeed_expr)]
    '.'                     [reduce using rule 107 (linefeed_expr)]
    '['                     [reduce using rule 107 (linefeed_expr)]
    DOUBLE_COLON_SYMBOL     [reduce using rule 107 (linefeed_expr)]
    $default                reduce using rule 107 (linefeed_expr)

    shift/reduce conflict on token '=':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       13 expr: expr . '=' expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '=' expr linefeed_expr '=' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                    delimiter
                                                                                                    `-> 13: expr                                                                   '=' expr
                                                                                                            `-> 66: linefeed_expr                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 13: expr . '=' expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '=' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 13: expr                                        '=' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '[':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       14 expr: expr . '[' expr ']'
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '[' expr ']' linefeed_expr '[' expr ']' delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                   $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                   END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                            delimiter
                                                                                                    `-> 14: expr                                                                       '[' expr ']'
                                                                                                            `-> 66: linefeed_expr                                        linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 14: expr . '[' expr ']'
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '[' expr ']' delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                             delimiter
                                                                                                    `-> 14: expr                                        '[' expr ']'
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '/':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       15 expr: expr . '/' expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '/' expr linefeed_expr '/' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                    delimiter
                                                                                                    `-> 15: expr                                                                   '/' expr
                                                                                                            `-> 66: linefeed_expr                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 15: expr . '/' expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '/' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 15: expr                                        '/' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '%':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       16 expr: expr . '%' expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '%' expr linefeed_expr '%' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                    delimiter
                                                                                                    `-> 16: expr                                                                   '%' expr
                                                                                                            `-> 66: linefeed_expr                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 16: expr . '%' expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '%' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 16: expr                                        '%' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '*':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       17 expr: expr . '*' expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '*' expr linefeed_expr '*' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                    delimiter
                                                                                                    `-> 17: expr                                                                   '*' expr
                                                                                                            `-> 66: linefeed_expr                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 17: expr . '*' expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '*' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 17: expr                                        '*' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '+':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       18 expr: expr . '+' expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '+' expr linefeed_expr '+' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                    delimiter
                                                                                                    `-> 18: expr                                                                   '+' expr
                                                                                                            `-> 66: linefeed_expr                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 18: expr . '+' expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '+' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 18: expr                                        '+' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '-':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       19 expr: expr . '-' expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '-' expr linefeed_expr '-' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                    delimiter
                                                                                                    `-> 19: expr                                                                   '-' expr
                                                                                                            `-> 66: linefeed_expr                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 19: expr . '-' expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '-' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 19: expr                                        '-' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '.':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       22 expr: expr . '.' IDENTIFIER
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '.' IDENTIFIER linefeed_expr '.' IDENTIFIER delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                delimiter
                                                                                                    `-> 22: expr                                                                         '.' IDENTIFIER
                                                                                                            `-> 66: linefeed_expr                                          linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 22: expr . '.' IDENTIFIER
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '.' IDENTIFIER delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                      $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                      END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                               delimiter
                                                                                                    `-> 22: expr                                        '.' IDENTIFIER
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '.':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       23 expr: expr . '.' IDENTIFIER QUESTION_SYMBOL
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '.' IDENTIFIER QUESTION_SYMBOL linefeed_expr '.' IDENTIFIER delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                delimiter
                                                                                                    `-> 22: expr                                                                                         '.' IDENTIFIER
                                                                                                            `-> 66: linefeed_expr                                                          linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 23: expr . '.' IDENTIFIER QUESTION_SYMBOL
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '.' IDENTIFIER delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                      $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                      END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                               delimiter
                                                                                                    `-> 22: expr                                        '.' IDENTIFIER
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token AND_KEYWORD:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       24 expr: expr . AND_KEYWORD expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . AND_KEYWORD expr linefeed_expr AND_KEYWORD expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                    delimiter
                                                                                                    `-> 24: expr                                                                           AND_KEYWORD expr
                                                                                                            `-> 66: linefeed_expr                                            linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 24: expr . AND_KEYWORD expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . AND_KEYWORD expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                        END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                 delimiter
                                                                                                    `-> 24: expr                                        AND_KEYWORD expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token OR_KEYWORD:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       25 expr: expr . OR_KEYWORD expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . OR_KEYWORD expr linefeed_expr OR_KEYWORD expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                         $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                         END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                  delimiter
                                                                                                    `-> 25: expr                                                                          OR_KEYWORD expr
                                                                                                            `-> 66: linefeed_expr                                           linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 25: expr . OR_KEYWORD expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . OR_KEYWORD expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                delimiter
                                                                                                    `-> 25: expr                                        OR_KEYWORD expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token ARITHMETIC_POW_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       27 expr: expr . ARITHMETIC_POW_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . ARITHMETIC_POW_OP expr linefeed_expr ARITHMETIC_POW_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                delimiter
                                                                                                    `-> 27: expr                                                                                 ARITHMETIC_POW_OP expr
                                                                                                            `-> 66: linefeed_expr                                                  linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 27: expr . ARITHMETIC_POW_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . ARITHMETIC_POW_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                              $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                              END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                       delimiter
                                                                                                    `-> 27: expr                                        ARITHMETIC_POW_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token EQL_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       28 expr: expr . EQL_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . EQL_OP expr linefeed_expr EQL_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                 $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                 END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                          delimiter
                                                                                                    `-> 28: expr                                                                      EQL_OP expr
                                                                                                            `-> 66: linefeed_expr                                       linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 28: expr . EQL_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . EQL_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                   $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                   END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                            delimiter
                                                                                                    `-> 28: expr                                        EQL_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token NOT_EQL_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       29 expr: expr . NOT_EQL_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . NOT_EQL_OP expr linefeed_expr NOT_EQL_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                         $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                         END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                  delimiter
                                                                                                    `-> 29: expr                                                                          NOT_EQL_OP expr
                                                                                                            `-> 66: linefeed_expr                                           linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 29: expr . NOT_EQL_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . NOT_EQL_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                delimiter
                                                                                                    `-> 29: expr                                        NOT_EQL_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token GREATER_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       30 expr: expr . GREATER_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . GREATER_OP expr linefeed_expr GREATER_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                         $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                         END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                  delimiter
                                                                                                    `-> 30: expr                                                                          GREATER_OP expr
                                                                                                            `-> 66: linefeed_expr                                           linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 30: expr . GREATER_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . GREATER_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                delimiter
                                                                                                    `-> 30: expr                                        GREATER_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token LESS_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       31 expr: expr . LESS_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . LESS_OP expr linefeed_expr LESS_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                   $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                   END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                            delimiter
                                                                                                    `-> 31: expr                                                                       LESS_OP expr
                                                                                                            `-> 66: linefeed_expr                                        linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 31: expr . LESS_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . LESS_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                             delimiter
                                                                                                    `-> 31: expr                                        LESS_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token GREATER_OR_EQL_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       32 expr: expr . GREATER_OR_EQL_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . GREATER_OR_EQL_OP expr linefeed_expr GREATER_OR_EQL_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                delimiter
                                                                                                    `-> 32: expr                                                                                 GREATER_OR_EQL_OP expr
                                                                                                            `-> 66: linefeed_expr                                                  linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 32: expr . GREATER_OR_EQL_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . GREATER_OR_EQL_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                              $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                              END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                       delimiter
                                                                                                    `-> 32: expr                                        GREATER_OR_EQL_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token LESS_OR_EQL_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       33 expr: expr . LESS_OR_EQL_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . LESS_OR_EQL_OP expr linefeed_expr LESS_OR_EQL_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                 $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                 END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                          delimiter
                                                                                                    `-> 33: expr                                                                              LESS_OR_EQL_OP expr
                                                                                                            `-> 66: linefeed_expr                                               linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 33: expr . LESS_OR_EQL_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . LESS_OR_EQL_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                    delimiter
                                                                                                    `-> 33: expr                                        LESS_OR_EQL_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token COMB_COMPRASION_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       34 expr: expr . COMB_COMPRASION_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . COMB_COMPRASION_OP expr linefeed_expr COMB_COMPRASION_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                         $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                         END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                  delimiter
                                                                                                    `-> 34: expr                                                                                  COMB_COMPRASION_OP expr
                                                                                                            `-> 66: linefeed_expr                                                   linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 34: expr . COMB_COMPRASION_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . COMB_COMPRASION_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                        delimiter
                                                                                                    `-> 34: expr                                        COMB_COMPRASION_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token CASE_EQL_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       35 expr: expr . CASE_EQL_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . CASE_EQL_OP expr linefeed_expr CASE_EQL_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                    delimiter
                                                                                                    `-> 35: expr                                                                           CASE_EQL_OP expr
                                                                                                            `-> 66: linefeed_expr                                            linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 35: expr . CASE_EQL_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . CASE_EQL_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                        END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                 delimiter
                                                                                                    `-> 35: expr                                        CASE_EQL_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token ADD_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       36 expr: expr . ADD_ASSIGN_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . ADD_ASSIGN_OP expr linefeed_expr ADD_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                        delimiter
                                                                                                    `-> 36: expr                                                                             ADD_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                              linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 36: expr . ADD_ASSIGN_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . ADD_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 36: expr                                        ADD_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token SUB_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       37 expr: expr . SUB_ASSIGN_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . SUB_ASSIGN_OP expr linefeed_expr SUB_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                        delimiter
                                                                                                    `-> 37: expr                                                                             SUB_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                              linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 37: expr . SUB_ASSIGN_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . SUB_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 37: expr                                        SUB_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token MUL_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       38 expr: expr . MUL_ASSIGN_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . MUL_ASSIGN_OP expr linefeed_expr MUL_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                        delimiter
                                                                                                    `-> 38: expr                                                                             MUL_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                              linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 38: expr . MUL_ASSIGN_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . MUL_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 38: expr                                        MUL_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token DIV_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       39 expr: expr . DIV_ASSIGN_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . DIV_ASSIGN_OP expr linefeed_expr DIV_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                        delimiter
                                                                                                    `-> 39: expr                                                                             DIV_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                              linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 39: expr . DIV_ASSIGN_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . DIV_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 39: expr                                        DIV_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token MOD_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       40 expr: expr . MOD_ASSIGN_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . MOD_ASSIGN_OP expr linefeed_expr MOD_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                        delimiter
                                                                                                    `-> 40: expr                                                                             MOD_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                              linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 40: expr . MOD_ASSIGN_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . MOD_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 40: expr                                        MOD_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token POW_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       41 expr: expr . POW_ASSIGN_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . POW_ASSIGN_OP expr linefeed_expr POW_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                        delimiter
                                                                                                    `-> 41: expr                                                                             POW_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                              linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 41: expr . POW_ASSIGN_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . POW_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 41: expr                                        POW_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_AND_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       42 expr: expr . BIN_AND_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_AND_OP expr linefeed_expr BIN_AND_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                         $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                         END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                  delimiter
                                                                                                    `-> 42: expr                                                                          BIN_AND_OP expr
                                                                                                            `-> 66: linefeed_expr                                           linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 42: expr . BIN_AND_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_AND_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                delimiter
                                                                                                    `-> 42: expr                                        BIN_AND_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_OR_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       43 expr: expr . BIN_OR_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_OR_OP expr linefeed_expr BIN_OR_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                delimiter
                                                                                                    `-> 43: expr                                                                         BIN_OR_OP expr
                                                                                                            `-> 66: linefeed_expr                                          linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 43: expr . BIN_OR_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_OR_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                      $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                      END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                               delimiter
                                                                                                    `-> 43: expr                                        BIN_OR_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_XOR_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       44 expr: expr . BIN_XOR_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_XOR_OP expr linefeed_expr BIN_XOR_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                         $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                         END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                  delimiter
                                                                                                    `-> 44: expr                                                                          BIN_XOR_OP expr
                                                                                                            `-> 66: linefeed_expr                                           linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 44: expr . BIN_XOR_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_XOR_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                delimiter
                                                                                                    `-> 44: expr                                        BIN_XOR_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_ONES_COMPLEMENT_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       45 expr: expr . BIN_ONES_COMPLEMENT_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_ONES_COMPLEMENT_OP expr linefeed_expr BIN_ONES_COMPLEMENT_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                 $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                 END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                          delimiter
                                                                                                    `-> 45: expr                                                                                      BIN_ONES_COMPLEMENT_OP expr
                                                                                                            `-> 66: linefeed_expr                                                       linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 45: expr . BIN_ONES_COMPLEMENT_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_ONES_COMPLEMENT_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                   $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                   END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                            delimiter
                                                                                                    `-> 45: expr                                        BIN_ONES_COMPLEMENT_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_LEFT_SHIFT_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       46 expr: expr . BIN_LEFT_SHIFT_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_LEFT_SHIFT_OP expr linefeed_expr BIN_LEFT_SHIFT_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                delimiter
                                                                                                    `-> 46: expr                                                                                 BIN_LEFT_SHIFT_OP expr
                                                                                                            `-> 66: linefeed_expr                                                  linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 46: expr . BIN_LEFT_SHIFT_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_LEFT_SHIFT_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                              $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                              END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                       delimiter
                                                                                                    `-> 46: expr                                        BIN_LEFT_SHIFT_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_RIGHT_SHIFT_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       47 expr: expr . BIN_RIGHT_SHIFT_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_RIGHT_SHIFT_OP expr linefeed_expr BIN_RIGHT_SHIFT_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                         $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                         END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                  delimiter
                                                                                                    `-> 47: expr                                                                                  BIN_RIGHT_SHIFT_OP expr
                                                                                                            `-> 66: linefeed_expr                                                   linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 47: expr . BIN_RIGHT_SHIFT_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_RIGHT_SHIFT_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                        delimiter
                                                                                                    `-> 47: expr                                        BIN_RIGHT_SHIFT_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token LOGICAL_AND_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       48 expr: expr . LOGICAL_AND_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . LOGICAL_AND_OP expr linefeed_expr LOGICAL_AND_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                 $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                 END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                          delimiter
                                                                                                    `-> 48: expr                                                                              LOGICAL_AND_OP expr
                                                                                                            `-> 66: linefeed_expr                                               linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 48: expr . LOGICAL_AND_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . LOGICAL_AND_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                    delimiter
                                                                                                    `-> 48: expr                                        LOGICAL_AND_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token LOGICAL_OR_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       49 expr: expr . LOGICAL_OR_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . LOGICAL_OR_OP expr linefeed_expr LOGICAL_OR_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                        delimiter
                                                                                                    `-> 49: expr                                                                             LOGICAL_OR_OP expr
                                                                                                            `-> 66: linefeed_expr                                              linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 49: expr . LOGICAL_OR_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . LOGICAL_OR_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 49: expr                                        LOGICAL_OR_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token INCLUSIVE_RANGE_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       51 expr: expr . INCLUSIVE_RANGE_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . INCLUSIVE_RANGE_OP expr linefeed_expr INCLUSIVE_RANGE_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                         $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                         END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                  delimiter
                                                                                                    `-> 51: expr                                                                                  INCLUSIVE_RANGE_OP expr
                                                                                                            `-> 66: linefeed_expr                                                   linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 51: expr . INCLUSIVE_RANGE_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . INCLUSIVE_RANGE_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                        delimiter
                                                                                                    `-> 51: expr                                        INCLUSIVE_RANGE_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token EXCLUSIVE_RANGE_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       52 expr: expr . EXCLUSIVE_RANGE_OP expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . EXCLUSIVE_RANGE_OP expr linefeed_expr EXCLUSIVE_RANGE_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                         $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                         END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                  delimiter
                                                                                                    `-> 52: expr                                                                                  EXCLUSIVE_RANGE_OP expr
                                                                                                            `-> 66: linefeed_expr                                                   linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 52: expr . EXCLUSIVE_RANGE_OP expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . EXCLUSIVE_RANGE_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                        delimiter
                                                                                                    `-> 52: expr                                        EXCLUSIVE_RANGE_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token DOUBLE_COLON_SYMBOL:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       57 expr: expr . DOUBLE_COLON_SYMBOL expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . DOUBLE_COLON_SYMBOL expr linefeed_expr DOUBLE_COLON_SYMBOL expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                    delimiter
                                                                                                    `-> 57: expr                                                                                   DOUBLE_COLON_SYMBOL expr
                                                                                                            `-> 66: linefeed_expr                                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 57: expr . DOUBLE_COLON_SYMBOL expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . DOUBLE_COLON_SYMBOL expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                         delimiter
                                                                                                    `-> 57: expr                                        DOUBLE_COLON_SYMBOL expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token QUESTION_SYMBOL:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       58 expr: expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . QUESTION_SYMBOL expr COLON_SYMBOL expr linefeed_expr QUESTION_SYMBOL expr COLON_SYMBOL expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                                                delimiter
                                                                                                    `-> 58: expr                                                                                                 QUESTION_SYMBOL expr COLON_SYMBOL expr
                                                                                                            `-> 66: linefeed_expr                                                                  linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 58: expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . QUESTION_SYMBOL expr COLON_SYMBOL expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                              $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                              END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                       delimiter
                                                                                                    `-> 58: expr                                        QUESTION_SYMBOL expr COLON_SYMBOL expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '=':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       59 expr: expr . '=' linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '=' linefeed_expr linefeed_expr '=' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                             delimiter
                                                                                                    `-> 13: expr                                                                            '=' expr
                                                                                                            `-> 66: linefeed_expr                                             linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 59: expr . '=' linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '=' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 13: expr                                        '=' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '[':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       60 expr: expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '[' linefeed_expr NEW_LINE_SYMBOL ']' linefeed_expr '[' expr ']' delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                            $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                            END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                     delimiter
                                                                                                    `-> 14: expr                                                                                                '[' expr ']'
                                                                                                            `-> 66: linefeed_expr                                                                 linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 60: expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '[' expr ']' delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                             delimiter
                                                                                                    `-> 14: expr                                        '[' expr ']'
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '/':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       61 expr: expr . '/' linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '/' linefeed_expr linefeed_expr '/' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                             delimiter
                                                                                                    `-> 15: expr                                                                            '/' expr
                                                                                                            `-> 66: linefeed_expr                                             linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 61: expr . '/' linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '/' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 15: expr                                        '/' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '%':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       62 expr: expr . '%' linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '%' linefeed_expr linefeed_expr '%' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                             delimiter
                                                                                                    `-> 16: expr                                                                            '%' expr
                                                                                                            `-> 66: linefeed_expr                                             linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 62: expr . '%' linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '%' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 16: expr                                        '%' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '*':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       63 expr: expr . '*' linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '*' linefeed_expr linefeed_expr '*' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                             delimiter
                                                                                                    `-> 17: expr                                                                            '*' expr
                                                                                                            `-> 66: linefeed_expr                                             linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 63: expr . '*' linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '*' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 17: expr                                        '*' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '+':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       64 expr: expr . '+' linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '+' linefeed_expr linefeed_expr '+' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                             delimiter
                                                                                                    `-> 18: expr                                                                            '+' expr
                                                                                                            `-> 66: linefeed_expr                                             linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 64: expr . '+' linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '+' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 18: expr                                        '+' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '-':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       65 expr: expr . '-' linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '-' linefeed_expr linefeed_expr '-' expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                             delimiter
                                                                                                    `-> 19: expr                                                                            '-' expr
                                                                                                            `-> 66: linefeed_expr                                             linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 65: expr . '-' linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '-' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                         delimiter
                                                                                                    `-> 19: expr                                        '-' expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '.':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       68 expr: expr . '.' NEW_LINE_SYMBOL IDENTIFIER
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '.' NEW_LINE_SYMBOL IDENTIFIER linefeed_expr '.' IDENTIFIER delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                delimiter
                                                                                                    `-> 22: expr                                                                                         '.' IDENTIFIER
                                                                                                            `-> 66: linefeed_expr                                                          linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 68: expr . '.' NEW_LINE_SYMBOL IDENTIFIER
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '.' IDENTIFIER delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                      $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                      END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                               delimiter
                                                                                                    `-> 22: expr                                        '.' IDENTIFIER
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '.':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       69 expr: expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL linefeed_expr '.' IDENTIFIER delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                                delimiter
                                                                                                    `-> 22: expr                                                                                                         '.' IDENTIFIER
                                                                                                            `-> 66: linefeed_expr                                                                          linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 69: expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '.' IDENTIFIER delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                      $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                      END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                               delimiter
                                                                                                    `-> 22: expr                                        '.' IDENTIFIER
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '.':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       70 expr: expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP linefeed_expr '.' IDENTIFIER delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                      $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                      END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                               delimiter
                                                                                                    `-> 22: expr                                                                                                        '.' IDENTIFIER
                                                                                                            `-> 66: linefeed_expr                                                                         linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 70: expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '.' IDENTIFIER delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                      $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                      END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                               delimiter
                                                                                                    `-> 22: expr                                        '.' IDENTIFIER
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token '.':
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       71 expr: expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . '.' NEW_LINE_SYMBOL IDENTIFIER '=' linefeed_expr '.' IDENTIFIER delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                    delimiter
                                                                                                    `-> 22: expr                                                                                             '.' IDENTIFIER
                                                                                                            `-> 66: linefeed_expr                                                              linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 71: expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . '.' IDENTIFIER delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                      $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                      END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                               delimiter
                                                                                                    `-> 22: expr                                        '.' IDENTIFIER
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token AND_KEYWORD:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       72 expr: expr . AND_KEYWORD linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . AND_KEYWORD linefeed_expr linefeed_expr AND_KEYWORD expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                             delimiter
                                                                                                    `-> 24: expr                                                                                    AND_KEYWORD expr
                                                                                                            `-> 66: linefeed_expr                                                     linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 72: expr . AND_KEYWORD linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . AND_KEYWORD expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                        END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                 delimiter
                                                                                                    `-> 24: expr                                        AND_KEYWORD expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token OR_KEYWORD:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       73 expr: expr . OR_KEYWORD linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . OR_KEYWORD linefeed_expr linefeed_expr OR_KEYWORD expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                  $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                  END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                           delimiter
                                                                                                    `-> 25: expr                                                                                   OR_KEYWORD expr
                                                                                                            `-> 66: linefeed_expr                                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 73: expr . OR_KEYWORD linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . OR_KEYWORD expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                delimiter
                                                                                                    `-> 25: expr                                        OR_KEYWORD expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token ARITHMETIC_POW_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       75 expr: expr . ARITHMETIC_POW_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . ARITHMETIC_POW_OP linefeed_expr linefeed_expr ARITHMETIC_POW_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                         delimiter
                                                                                                    `-> 27: expr                                                                                          ARITHMETIC_POW_OP expr
                                                                                                            `-> 66: linefeed_expr                                                           linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 75: expr . ARITHMETIC_POW_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . ARITHMETIC_POW_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                              $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                              END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                       delimiter
                                                                                                    `-> 27: expr                                        ARITHMETIC_POW_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token EQL_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       76 expr: expr . EQL_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . EQL_OP linefeed_expr linefeed_expr EQL_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                   delimiter
                                                                                                    `-> 28: expr                                                                               EQL_OP expr
                                                                                                            `-> 66: linefeed_expr                                                linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 76: expr . EQL_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . EQL_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                   $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                   END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                            delimiter
                                                                                                    `-> 28: expr                                        EQL_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token NOT_EQL_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       77 expr: expr . NOT_EQL_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . NOT_EQL_OP linefeed_expr linefeed_expr NOT_EQL_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                  $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                  END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                           delimiter
                                                                                                    `-> 29: expr                                                                                   NOT_EQL_OP expr
                                                                                                            `-> 66: linefeed_expr                                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 77: expr . NOT_EQL_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . NOT_EQL_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                delimiter
                                                                                                    `-> 29: expr                                        NOT_EQL_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token GREATER_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       78 expr: expr . GREATER_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . GREATER_OP linefeed_expr linefeed_expr GREATER_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                  $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                  END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                           delimiter
                                                                                                    `-> 30: expr                                                                                   GREATER_OP expr
                                                                                                            `-> 66: linefeed_expr                                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 78: expr . GREATER_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . GREATER_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                delimiter
                                                                                                    `-> 30: expr                                        GREATER_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token LESS_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       79 expr: expr . LESS_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . LESS_OP linefeed_expr linefeed_expr LESS_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                            $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                            END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                     delimiter
                                                                                                    `-> 31: expr                                                                                LESS_OP expr
                                                                                                            `-> 66: linefeed_expr                                                 linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 79: expr . LESS_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . LESS_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                             delimiter
                                                                                                    `-> 31: expr                                        LESS_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token GREATER_OR_EQL_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       80 expr: expr . GREATER_OR_EQL_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . GREATER_OR_EQL_OP linefeed_expr linefeed_expr GREATER_OR_EQL_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                         delimiter
                                                                                                    `-> 32: expr                                                                                          GREATER_OR_EQL_OP expr
                                                                                                            `-> 66: linefeed_expr                                                           linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 80: expr . GREATER_OR_EQL_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . GREATER_OR_EQL_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                              $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                              END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                       delimiter
                                                                                                    `-> 32: expr                                        GREATER_OR_EQL_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token LESS_OR_EQL_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       81 expr: expr . LESS_OR_EQL_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . LESS_OR_EQL_OP linefeed_expr linefeed_expr LESS_OR_EQL_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                   delimiter
                                                                                                    `-> 33: expr                                                                                       LESS_OR_EQL_OP expr
                                                                                                            `-> 66: linefeed_expr                                                        linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 81: expr . LESS_OR_EQL_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . LESS_OR_EQL_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                    delimiter
                                                                                                    `-> 33: expr                                        LESS_OR_EQL_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token COMB_COMPRASION_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       82 expr: expr . COMB_COMPRASION_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . COMB_COMPRASION_OP linefeed_expr linefeed_expr COMB_COMPRASION_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                  $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                  END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                           delimiter
                                                                                                    `-> 34: expr                                                                                           COMB_COMPRASION_OP expr
                                                                                                            `-> 66: linefeed_expr                                                            linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 82: expr . COMB_COMPRASION_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . COMB_COMPRASION_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                        delimiter
                                                                                                    `-> 34: expr                                        COMB_COMPRASION_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token CASE_EQL_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       83 expr: expr . CASE_EQL_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . CASE_EQL_OP linefeed_expr linefeed_expr CASE_EQL_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                             delimiter
                                                                                                    `-> 35: expr                                                                                    CASE_EQL_OP expr
                                                                                                            `-> 66: linefeed_expr                                                     linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 83: expr . CASE_EQL_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . CASE_EQL_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                        END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                 delimiter
                                                                                                    `-> 35: expr                                        CASE_EQL_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token ADD_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       84 expr: expr . ADD_ASSIGN_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . ADD_ASSIGN_OP linefeed_expr linefeed_expr ADD_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                        END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                 delimiter
                                                                                                    `-> 36: expr                                                                                      ADD_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                                       linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 84: expr . ADD_ASSIGN_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . ADD_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 36: expr                                        ADD_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token SUB_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       85 expr: expr . SUB_ASSIGN_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . SUB_ASSIGN_OP linefeed_expr linefeed_expr SUB_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                        END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                 delimiter
                                                                                                    `-> 37: expr                                                                                      SUB_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                                       linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 85: expr . SUB_ASSIGN_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . SUB_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 37: expr                                        SUB_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token MUL_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       86 expr: expr . MUL_ASSIGN_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . MUL_ASSIGN_OP linefeed_expr linefeed_expr MUL_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                        END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                 delimiter
                                                                                                    `-> 38: expr                                                                                      MUL_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                                       linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 86: expr . MUL_ASSIGN_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . MUL_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 38: expr                                        MUL_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token DIV_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       87 expr: expr . DIV_ASSIGN_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . DIV_ASSIGN_OP linefeed_expr linefeed_expr DIV_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                        END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                 delimiter
                                                                                                    `-> 39: expr                                                                                      DIV_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                                       linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 87: expr . DIV_ASSIGN_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . DIV_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 39: expr                                        DIV_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token MOD_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       88 expr: expr . MOD_ASSIGN_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . MOD_ASSIGN_OP linefeed_expr linefeed_expr MOD_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                        END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                 delimiter
                                                                                                    `-> 40: expr                                                                                      MOD_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                                       linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 88: expr . MOD_ASSIGN_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . MOD_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 40: expr                                        MOD_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token POW_ASSIGN_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       89 expr: expr . POW_ASSIGN_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . POW_ASSIGN_OP linefeed_expr linefeed_expr POW_ASSIGN_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                        END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                 delimiter
                                                                                                    `-> 41: expr                                                                                      POW_ASSIGN_OP expr
                                                                                                            `-> 66: linefeed_expr                                                       linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 89: expr . POW_ASSIGN_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . POW_ASSIGN_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 41: expr                                        POW_ASSIGN_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_AND_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       90 expr: expr . BIN_AND_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_AND_OP linefeed_expr linefeed_expr BIN_AND_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                  $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                  END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                           delimiter
                                                                                                    `-> 42: expr                                                                                   BIN_AND_OP expr
                                                                                                            `-> 66: linefeed_expr                                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 90: expr . BIN_AND_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_AND_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                delimiter
                                                                                                    `-> 42: expr                                        BIN_AND_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_OR_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       91 expr: expr . BIN_OR_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_OR_OP linefeed_expr linefeed_expr BIN_OR_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                         delimiter
                                                                                                    `-> 43: expr                                                                                  BIN_OR_OP expr
                                                                                                            `-> 66: linefeed_expr                                                   linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 91: expr . BIN_OR_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_OR_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                      $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                      END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                               delimiter
                                                                                                    `-> 43: expr                                        BIN_OR_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_XOR_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       92 expr: expr . BIN_XOR_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_XOR_OP linefeed_expr linefeed_expr BIN_XOR_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                  $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                  END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                           delimiter
                                                                                                    `-> 44: expr                                                                                   BIN_XOR_OP expr
                                                                                                            `-> 66: linefeed_expr                                                    linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 92: expr . BIN_XOR_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_XOR_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                       $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                       END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                delimiter
                                                                                                    `-> 44: expr                                        BIN_XOR_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_ONES_COMPLEMENT_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       93 expr: expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_ONES_COMPLEMENT_OP linefeed_expr linefeed_expr BIN_ONES_COMPLEMENT_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                                   delimiter
                                                                                                    `-> 45: expr                                                                                               BIN_ONES_COMPLEMENT_OP expr
                                                                                                            `-> 66: linefeed_expr                                                                linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 93: expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_ONES_COMPLEMENT_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                   $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                   END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                            delimiter
                                                                                                    `-> 45: expr                                        BIN_ONES_COMPLEMENT_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_LEFT_SHIFT_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       94 expr: expr . BIN_LEFT_SHIFT_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_LEFT_SHIFT_OP linefeed_expr linefeed_expr BIN_LEFT_SHIFT_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                         delimiter
                                                                                                    `-> 46: expr                                                                                          BIN_LEFT_SHIFT_OP expr
                                                                                                            `-> 66: linefeed_expr                                                           linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 94: expr . BIN_LEFT_SHIFT_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_LEFT_SHIFT_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                              $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                              END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                       delimiter
                                                                                                    `-> 46: expr                                        BIN_LEFT_SHIFT_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token BIN_RIGHT_SHIFT_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       95 expr: expr . BIN_RIGHT_SHIFT_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . BIN_RIGHT_SHIFT_OP linefeed_expr linefeed_expr BIN_RIGHT_SHIFT_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                  $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                  END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                           delimiter
                                                                                                    `-> 47: expr                                                                                           BIN_RIGHT_SHIFT_OP expr
                                                                                                            `-> 66: linefeed_expr                                                            linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 95: expr . BIN_RIGHT_SHIFT_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . BIN_RIGHT_SHIFT_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                        delimiter
                                                                                                    `-> 47: expr                                        BIN_RIGHT_SHIFT_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token LOGICAL_AND_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       96 expr: expr . LOGICAL_AND_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . LOGICAL_AND_OP linefeed_expr linefeed_expr LOGICAL_AND_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                   delimiter
                                                                                                    `-> 48: expr                                                                                       LOGICAL_AND_OP expr
                                                                                                            `-> 66: linefeed_expr                                                        linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 96: expr . LOGICAL_AND_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . LOGICAL_AND_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                    delimiter
                                                                                                    `-> 48: expr                                        LOGICAL_AND_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token LOGICAL_OR_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       97 expr: expr . LOGICAL_OR_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . LOGICAL_OR_OP linefeed_expr linefeed_expr LOGICAL_OR_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                        END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                 delimiter
                                                                                                    `-> 49: expr                                                                                      LOGICAL_OR_OP expr
                                                                                                            `-> 66: linefeed_expr                                                       linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 97: expr . LOGICAL_OR_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . LOGICAL_OR_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                   delimiter
                                                                                                    `-> 49: expr                                        LOGICAL_OR_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token INCLUSIVE_RANGE_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
       99 expr: expr . INCLUSIVE_RANGE_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . INCLUSIVE_RANGE_OP linefeed_expr linefeed_expr INCLUSIVE_RANGE_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                  $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                  END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                           delimiter
                                                                                                    `-> 51: expr                                                                                           INCLUSIVE_RANGE_OP expr
                                                                                                            `-> 66: linefeed_expr                                                            linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 99: expr . INCLUSIVE_RANGE_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . INCLUSIVE_RANGE_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                        delimiter
                                                                                                    `-> 51: expr                                        INCLUSIVE_RANGE_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token EXCLUSIVE_RANGE_OP:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
      100 expr: expr . EXCLUSIVE_RANGE_OP linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . EXCLUSIVE_RANGE_OP linefeed_expr linefeed_expr EXCLUSIVE_RANGE_OP expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                   $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                   END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                            delimiter
                                                                                                    `-> 52: expr                                                                                            EXCLUSIVE_RANGE_OP expr
                                                                                                            `-> 66: linefeed_expr                                                             linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 100: expr . EXCLUSIVE_RANGE_OP linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . EXCLUSIVE_RANGE_OP expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                        delimiter
                                                                                                    `-> 52: expr                                        EXCLUSIVE_RANGE_OP expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token DOUBLE_COLON_SYMBOL:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
      105 expr: expr . DOUBLE_COLON_SYMBOL linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . DOUBLE_COLON_SYMBOL linefeed_expr linefeed_expr DOUBLE_COLON_SYMBOL expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                     $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                     END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                              delimiter
                                                                                                    `-> 57: expr                                                                                             DOUBLE_COLON_SYMBOL expr
                                                                                                            `-> 66: linefeed_expr                                                              linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 105: expr . DOUBLE_COLON_SYMBOL linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . DOUBLE_COLON_SYMBOL expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                         delimiter
                                                                                                    `-> 57: expr                                        DOUBLE_COLON_SYMBOL expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .

    shift/reduce conflict on token QUESTION_SYMBOL:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
      106 expr: expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
      First example: DEF_KEYWORD IDENTIFIER delimiter NEW_LINE_SYMBOL expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr linefeed_expr QUESTION_SYMBOL expr COLON_SYMBOL expr delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                                                                                                                   delimiter
                                                                                                    `-> 58: expr                                                                                                                                    QUESTION_SYMBOL expr COLON_SYMBOL expr
                                                                                                            `-> 66: linefeed_expr                                                                                                     linefeed_expr
                                                                                                                    `-> 107: NEW_LINE_SYMBOL expr
                                                                                                                                             `-> 106: expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
      Second example: DEF_KEYWORD IDENTIFIER delimiter '-' NEW_LINE_SYMBOL expr . QUESTION_SYMBOL expr COLON_SYMBOL expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                              $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                              END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                       delimiter
                                                                                                    `-> 58: expr                                        QUESTION_SYMBOL expr COLON_SYMBOL expr
                                                                                                            `-> 66: '-' linefeed_expr
                                                                                                                        `-> 107: NEW_LINE_SYMBOL expr .



State 203

  156 if_stmt: IF_KEYWORD expr THEN_KEYWORD . stmt END_KEYWORD
  158        | IF_KEYWORD expr THEN_KEYWORD . stmt ELSE_KEYWORD stmt END_KEYWORD
  160        | IF_KEYWORD expr THEN_KEYWORD . stmt elsif_list stmt END_KEYWORD
  162        | IF_KEYWORD expr THEN_KEYWORD . stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 314
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 204

  155 if_stmt: IF_KEYWORD expr delimiter . stmt END_KEYWORD
  157        | IF_KEYWORD expr delimiter . stmt ELSE_KEYWORD stmt END_KEYWORD
  159        | IF_KEYWORD expr delimiter . stmt elsif_list stmt END_KEYWORD
  161        | IF_KEYWORD expr delimiter . stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 315
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 205

  178 for_stmt: FOR_KEYWORD expr IN_KEYWORD . expr DO_KEYWORD stmt END_KEYWORD
  179         | FOR_KEYWORD expr IN_KEYWORD . expr stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 316


State 206

  165 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD . stmt END_KEYWORD
  167            | UNLESS_KEYWORD expr THEN_KEYWORD . stmt ELSE_KEYWORD stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 317
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 207

   19 expr: expr '-' . expr
   20     | '-' . expr
   65     | expr '-' . linefeed_expr
   66     | '-' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 318
    linefeed_expr  go to state 319


State 208

   14 expr: expr '[' . expr ']'
   54     | '[' . expr_list ']'
   60     | expr '[' . linefeed_expr NEW_LINE_SYMBOL ']'
  102     | '[' . NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ']'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 320
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 116 (expr_list)

    expr                 go to state 321
    linefeed_expr        go to state 300
    expr_list            go to state 124
    expr_list_not_empty  go to state 125


State 209

   56 expr: DOUBLE_COLON_SYMBOL . expr
   57     | expr DOUBLE_COLON_SYMBOL . expr
  104     | DOUBLE_COLON_SYMBOL . linefeed_expr
  105     | expr DOUBLE_COLON_SYMBOL . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 322
    linefeed_expr  go to state 323


State 210

  166 unless_stmt: UNLESS_KEYWORD expr stmt . END_KEYWORD
  168            | UNLESS_KEYWORD expr stmt . ELSE_KEYWORD stmt END_KEYWORD

    ELSE_KEYWORD  shift, and go to state 324
    END_KEYWORD   shift, and go to state 325


State 211

  181 until_stmt: UNTIL_KEYWORD expr DO_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 326
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 212

  180 until_stmt: UNTIL_KEYWORD expr stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 327


State 213

  175 while_stmt: WHILE_KEYWORD expr DO_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 328
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 214

  176 while_stmt: WHILE_KEYWORD expr stmt . END_KEYWORD
  177           | WHILE_KEYWORD expr stmt . redo_stmt END_KEYWORD

    END_KEYWORD   shift, and go to state 329
    REDO_KEYWORD  shift, and go to state 330

    redo_stmt  go to state 331


State 215

   74 expr: NOT_KEYWORD '(' NEW_LINE_SYMBOL . expr NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 332


State 216

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   26     | NOT_KEYWORD '(' expr . ')'
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    ')'                     shift, and go to state 333
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 217

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  101     | '(' NEW_LINE_SYMBOL expr . NEW_LINE_SYMBOL ')'
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 334


State 218

   53 expr: '(' expr ')' .

    $default  reduce using rule 53 (expr)


State 219

  102 expr: '[' NEW_LINE_SYMBOL expr_list . NEW_LINE_SYMBOL ']'

    NEW_LINE_SYMBOL  shift, and go to state 335


State 220

   54 expr: '[' expr_list ']' .

    $default  reduce using rule 54 (expr)


State 221

  119 expr_list_not_empty: expr_list_not_empty COMMA_SYMBOL . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 336


State 222

   67 expr: IDENTIFIER '(' NEW_LINE_SYMBOL . expr_list NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 116 (expr_list)

    expr                 go to state 123
    expr_list            go to state 337
    expr_list_not_empty  go to state 125


State 223

   21 expr: IDENTIFIER '(' expr_list . ')'

    ')'  shift, and go to state 338


State 224

  164 if_stmt: expr IF_KEYWORD NEW_LINE_SYMBOL . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 339


State 225

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  163 if_stmt: expr IF_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 163 (if_stmt)


State 226

  170 unless_stmt: expr UNLESS_KEYWORD NEW_LINE_SYMBOL . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 340


State 227

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  169 unless_stmt: expr UNLESS_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 169 (unless_stmt)


State 228

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  182 until_stmt: expr UNTIL_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 182 (until_stmt)


State 229

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   25     | expr OR_KEYWORD expr .
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 25 (expr)


State 230

   73 expr: expr OR_KEYWORD linefeed_expr .

    $default  reduce using rule 73 (expr)


State 231

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   24     | expr AND_KEYWORD expr .
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 24 (expr)


State 232

   72 expr: expr AND_KEYWORD linefeed_expr .

    $default  reduce using rule 72 (expr)


State 233

   13 expr: expr . '=' expr
   13     | expr '=' expr .
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 13 (expr)


State 234

   59 expr: expr '=' linefeed_expr .

    $default  reduce using rule 59 (expr)


State 235

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   36     | expr ADD_ASSIGN_OP expr .
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 36 (expr)


State 236

   84 expr: expr ADD_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 84 (expr)


State 237

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   37     | expr SUB_ASSIGN_OP expr .
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 37 (expr)


State 238

   85 expr: expr SUB_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 85 (expr)


State 239

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   38     | expr MUL_ASSIGN_OP expr .
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 38 (expr)


State 240

   86 expr: expr MUL_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 86 (expr)


State 241

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   39     | expr DIV_ASSIGN_OP expr .
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 39 (expr)


State 242

   87 expr: expr DIV_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 87 (expr)


State 243

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   40     | expr MOD_ASSIGN_OP expr .
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 40 (expr)


State 244

   88 expr: expr MOD_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 88 (expr)


State 245

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   41     | expr POW_ASSIGN_OP expr .
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 41 (expr)


State 246

   89 expr: expr POW_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 89 (expr)


State 247

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   58     | expr QUESTION_SYMBOL expr . COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    COLON_SYMBOL            shift, and go to state 341
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 248

  106 expr: expr QUESTION_SYMBOL linefeed_expr . NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    NEW_LINE_SYMBOL  shift, and go to state 342


State 249

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   52     | expr EXCLUSIVE_RANGE_OP expr .
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 52 (expr)


State 250

  100 expr: expr EXCLUSIVE_RANGE_OP linefeed_expr .

    $default  reduce using rule 100 (expr)


State 251

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   51     | expr INCLUSIVE_RANGE_OP expr .
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 51 (expr)


State 252

   99 expr: expr INCLUSIVE_RANGE_OP linefeed_expr .

    $default  reduce using rule 99 (expr)


State 253

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   49     | expr LOGICAL_OR_OP expr .
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 49 (expr)


State 254

   97 expr: expr LOGICAL_OR_OP linefeed_expr .

    $default  reduce using rule 97 (expr)


State 255

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   48     | expr LOGICAL_AND_OP expr .
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 48 (expr)


State 256

   96 expr: expr LOGICAL_AND_OP linefeed_expr .

    $default  reduce using rule 96 (expr)


State 257

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   28     | expr EQL_OP expr .
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 28 (expr)


State 258

   76 expr: expr EQL_OP linefeed_expr .

    $default  reduce using rule 76 (expr)


State 259

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   29     | expr NOT_EQL_OP expr .
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 29 (expr)


State 260

   77 expr: expr NOT_EQL_OP linefeed_expr .

    $default  reduce using rule 77 (expr)


State 261

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   34     | expr COMB_COMPRASION_OP expr .
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 34 (expr)


State 262

   82 expr: expr COMB_COMPRASION_OP linefeed_expr .

    $default  reduce using rule 82 (expr)


State 263

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   35     | expr CASE_EQL_OP expr .
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 35 (expr)


State 264

   83 expr: expr CASE_EQL_OP linefeed_expr .

    $default  reduce using rule 83 (expr)


State 265

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   30     | expr GREATER_OP expr .
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 30 (expr)


State 266

   78 expr: expr GREATER_OP linefeed_expr .

    $default  reduce using rule 78 (expr)


State 267

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   31     | expr LESS_OP expr .
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 31 (expr)


State 268

   79 expr: expr LESS_OP linefeed_expr .

    $default  reduce using rule 79 (expr)


State 269

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   32     | expr GREATER_OR_EQL_OP expr .
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 32 (expr)


State 270

   80 expr: expr GREATER_OR_EQL_OP linefeed_expr .

    $default  reduce using rule 80 (expr)


State 271

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   33     | expr LESS_OR_EQL_OP expr .
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 33 (expr)


State 272

   81 expr: expr LESS_OR_EQL_OP linefeed_expr .

    $default  reduce using rule 81 (expr)


State 273

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   43     | expr BIN_OR_OP expr .
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 43 (expr)


State 274

   91 expr: expr BIN_OR_OP linefeed_expr .

    $default  reduce using rule 91 (expr)


State 275

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   44     | expr BIN_XOR_OP expr .
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 44 (expr)


State 276

   92 expr: expr BIN_XOR_OP linefeed_expr .

    $default  reduce using rule 92 (expr)


State 277

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   42     | expr BIN_AND_OP expr .
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 42 (expr)


State 278

   90 expr: expr BIN_AND_OP linefeed_expr .

    $default  reduce using rule 90 (expr)


State 279

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   46     | expr BIN_LEFT_SHIFT_OP expr .
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 46 (expr)


State 280

   94 expr: expr BIN_LEFT_SHIFT_OP linefeed_expr .

    $default  reduce using rule 94 (expr)


State 281

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   47     | expr BIN_RIGHT_SHIFT_OP expr .
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 47 (expr)


State 282

   95 expr: expr BIN_RIGHT_SHIFT_OP linefeed_expr .

    $default  reduce using rule 95 (expr)


State 283

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   18     | expr '+' expr .
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 18 (expr)


State 284

   64 expr: expr '+' linefeed_expr .

    $default  reduce using rule 64 (expr)


State 285

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   19     | expr '-' expr .
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 19 (expr)


State 286

   65 expr: expr '-' linefeed_expr .

    $default  reduce using rule 65 (expr)


State 287

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   17     | expr '*' expr .
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 17 (expr)


State 288

   63 expr: expr '*' linefeed_expr .

    $default  reduce using rule 63 (expr)


State 289

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   15     | expr '/' expr .
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 15 (expr)


State 290

   61 expr: expr '/' linefeed_expr .

    $default  reduce using rule 61 (expr)


State 291

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   16     | expr '%' expr .
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 16 (expr)


State 292

   62 expr: expr '%' linefeed_expr .

    $default  reduce using rule 62 (expr)


State 293

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   45     | expr BIN_ONES_COMPLEMENT_OP expr .
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 45 (expr)


State 294

   93 expr: expr BIN_ONES_COMPLEMENT_OP linefeed_expr .

    $default  reduce using rule 93 (expr)


State 295

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   27     | expr ARITHMETIC_POW_OP expr .
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '.'                  shift, and go to state 166
    '['                  shift, and go to state 167
    DOUBLE_COLON_SYMBOL  shift, and go to state 168

    $default  reduce using rule 27 (expr)


State 296

   75 expr: expr ARITHMETIC_POW_OP linefeed_expr .

    $default  reduce using rule 75 (expr)


State 297

   68 expr: expr '.' NEW_LINE_SYMBOL . IDENTIFIER
   69     | expr '.' NEW_LINE_SYMBOL . IDENTIFIER QUESTION_SYMBOL
   70     | expr '.' NEW_LINE_SYMBOL . IDENTIFIER LOGICAL_NOT_OP
   71     | expr '.' NEW_LINE_SYMBOL . IDENTIFIER '='

    IDENTIFIER  shift, and go to state 343


State 298

   22 expr: expr '.' IDENTIFIER .
   23     | expr '.' IDENTIFIER . QUESTION_SYMBOL

    QUESTION_SYMBOL  shift, and go to state 344

    QUESTION_SYMBOL  [reduce using rule 22 (expr)]
    $default         reduce using rule 22 (expr)

    shift/reduce conflict on token QUESTION_SYMBOL:
       22 expr: expr '.' IDENTIFIER .
       23 expr: expr '.' IDENTIFIER . QUESTION_SYMBOL
      First example: DEF_KEYWORD IDENTIFIER delimiter expr '.' IDENTIFIER . QUESTION_SYMBOL delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: method_stmt
                               `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                 END_KEYWORD
                                                                         `-> 120: stmt
                                                                                  `-> 122: expr                                          delimiter
                                                                                           `-> 23: expr '.' IDENTIFIER . QUESTION_SYMBOL
      Second example: DEF_KEYWORD IDENTIFIER delimiter expr '.' IDENTIFIER . QUESTION_SYMBOL expr COLON_SYMBOL expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                         delimiter
                                                                                                    `-> 58: expr                          QUESTION_SYMBOL expr COLON_SYMBOL expr
                                                                                                            `-> 22: expr '.' IDENTIFIER .



State 299

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   14     | expr '[' expr . ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    ']'                     shift, and go to state 345
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 300

   60 expr: expr '[' linefeed_expr . NEW_LINE_SYMBOL ']'

    NEW_LINE_SYMBOL  shift, and go to state 346


State 301

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   57     | expr DOUBLE_COLON_SYMBOL expr .
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    $default  reduce using rule 57 (expr)


State 302

  105 expr: expr DOUBLE_COLON_SYMBOL linefeed_expr .

    $default  reduce using rule 105 (expr)


State 303

  149 class_body_stmt: OBJECT_VAR_NAME '=' expr delimiter .

    $default  reduce using rule 149 (class_body_stmt)


State 304

  147 class_body_stmt: CLASS_VAR_NAME '=' expr delimiter .

    $default  reduce using rule 147 (class_body_stmt)


State 305

  142 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' param_list ')' delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 347
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 306

  137 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list ')' delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 348
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 307

  140 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 349
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 308

  121 stmt_list: stmt_list . stmt
  136 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list ')' delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 350
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 309

  204 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD . delimiter stmt_list END_KEYWORD
  205                  | BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD . delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 351


State 310

  189 when_list: WHEN_KEYWORD expr_list . delimiter stmt
  190          | WHEN_KEYWORD expr_list . THEN_KEYWORD stmt

    THEN_KEYWORD      shift, and go to state 352
    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 353


State 311

  188 case_stmt: CASE_KEYWORD expr when_list ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 354
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 312

  187 case_stmt: CASE_KEYWORD expr when_list END_KEYWORD .

    $default  reduce using rule 187 (case_stmt)


State 313

  191 when_list: when_list expr_list . delimiter stmt
  192          | when_list expr_list . THEN_KEYWORD stmt

    THEN_KEYWORD      shift, and go to state 355
    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 356


State 314

  156 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt . END_KEYWORD
  158        | IF_KEYWORD expr THEN_KEYWORD stmt . ELSE_KEYWORD stmt END_KEYWORD
  160        | IF_KEYWORD expr THEN_KEYWORD stmt . elsif_list stmt END_KEYWORD
  162        | IF_KEYWORD expr THEN_KEYWORD stmt . elsif_list ELSE_KEYWORD stmt END_KEYWORD

    ELSE_KEYWORD   shift, and go to state 357
    ELSIF_KEYWORD  shift, and go to state 358
    END_KEYWORD    shift, and go to state 359

    elsif_list  go to state 360


State 315

  155 if_stmt: IF_KEYWORD expr delimiter stmt . END_KEYWORD
  157        | IF_KEYWORD expr delimiter stmt . ELSE_KEYWORD stmt END_KEYWORD
  159        | IF_KEYWORD expr delimiter stmt . elsif_list stmt END_KEYWORD
  161        | IF_KEYWORD expr delimiter stmt . elsif_list ELSE_KEYWORD stmt END_KEYWORD

    ELSE_KEYWORD   shift, and go to state 361
    ELSIF_KEYWORD  shift, and go to state 358
    END_KEYWORD    shift, and go to state 362

    elsif_list  go to state 363


State 316

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  178 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr . DO_KEYWORD stmt END_KEYWORD
  179         | FOR_KEYWORD expr IN_KEYWORD expr . stmt END_KEYWORD

    ALIAS_KEYWORD           shift, and go to state 41
    BEGIN_KEYWORD           shift, and go to state 42
    CASE_KEYWORD            shift, and go to state 43
    DEFINED_KEYWORD         shift, and go to state 44
    DO_KEYWORD              shift, and go to state 364
    IF_KEYWORD              shift, and go to state 45
    FALSE_KEYWORD           shift, and go to state 46
    FOR_KEYWORD             shift, and go to state 47
    NIL_KEYWORD             shift, and go to state 48
    RETURN_KEYWORD          shift, and go to state 49
    TRUE_KEYWORD            shift, and go to state 50
    UNLESS_KEYWORD          shift, and go to state 51
    UNTIL_KEYWORD           shift, and go to state 52
    WHILE_KEYWORD           shift, and go to state 53
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    NOT_KEYWORD             shift, and go to state 54
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 207
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    LOGICAL_NOT_OP          shift, and go to state 56
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '('                     shift, and go to state 57
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 208
    DOUBLE_COLON_SYMBOL     shift, and go to state 209
    STRING                  shift, and go to state 60
    INTEGER_NUMBER          shift, and go to state 61
    FLOAT_NUMBER            shift, and go to state 62
    IDENTIFIER              shift, and go to state 63
    OBJECT_VAR_NAME         shift, and go to state 64
    CLASS_VAR_NAME          shift, and go to state 65
    CONSTANT_NAME           shift, and go to state 66

    expr               go to state 67
    stmt               go to state 365
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 317

  165 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt . END_KEYWORD
  167            | UNLESS_KEYWORD expr THEN_KEYWORD stmt . ELSE_KEYWORD stmt END_KEYWORD

    ELSE_KEYWORD  shift, and go to state 366
    END_KEYWORD   shift, and go to state 367


State 318

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   19     | expr '-' expr .
   20     | '-' expr .
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    IF_KEYWORD          reduce using rule 19 (expr)
    IF_KEYWORD          [reduce using rule 20 (expr)]
    UNLESS_KEYWORD      reduce using rule 19 (expr)
    UNLESS_KEYWORD      [reduce using rule 20 (expr)]
    UNTIL_KEYWORD       reduce using rule 19 (expr)
    UNTIL_KEYWORD       [reduce using rule 20 (expr)]
    OR_KEYWORD          reduce using rule 19 (expr)
    OR_KEYWORD          [reduce using rule 20 (expr)]
    AND_KEYWORD         reduce using rule 19 (expr)
    AND_KEYWORD         [reduce using rule 20 (expr)]
    '='                 reduce using rule 19 (expr)
    '='                 [reduce using rule 20 (expr)]
    ADD_ASSIGN_OP       reduce using rule 19 (expr)
    ADD_ASSIGN_OP       [reduce using rule 20 (expr)]
    SUB_ASSIGN_OP       reduce using rule 19 (expr)
    SUB_ASSIGN_OP       [reduce using rule 20 (expr)]
    MUL_ASSIGN_OP       reduce using rule 19 (expr)
    MUL_ASSIGN_OP       [reduce using rule 20 (expr)]
    DIV_ASSIGN_OP       reduce using rule 19 (expr)
    DIV_ASSIGN_OP       [reduce using rule 20 (expr)]
    MOD_ASSIGN_OP       reduce using rule 19 (expr)
    MOD_ASSIGN_OP       [reduce using rule 20 (expr)]
    POW_ASSIGN_OP       reduce using rule 19 (expr)
    POW_ASSIGN_OP       [reduce using rule 20 (expr)]
    QUESTION_SYMBOL     reduce using rule 19 (expr)
    QUESTION_SYMBOL     [reduce using rule 20 (expr)]
    EXCLUSIVE_RANGE_OP  reduce using rule 19 (expr)
    EXCLUSIVE_RANGE_OP  [reduce using rule 20 (expr)]
    INCLUSIVE_RANGE_OP  reduce using rule 19 (expr)
    INCLUSIVE_RANGE_OP  [reduce using rule 20 (expr)]
    LOGICAL_OR_OP       reduce using rule 19 (expr)
    LOGICAL_OR_OP       [reduce using rule 20 (expr)]
    LOGICAL_AND_OP      reduce using rule 19 (expr)
    LOGICAL_AND_OP      [reduce using rule 20 (expr)]
    EQL_OP              reduce using rule 19 (expr)
    EQL_OP              [reduce using rule 20 (expr)]
    NOT_EQL_OP          reduce using rule 19 (expr)
    NOT_EQL_OP          [reduce using rule 20 (expr)]
    COMB_COMPRASION_OP  reduce using rule 19 (expr)
    COMB_COMPRASION_OP  [reduce using rule 20 (expr)]
    CASE_EQL_OP         reduce using rule 19 (expr)
    CASE_EQL_OP         [reduce using rule 20 (expr)]
    GREATER_OP          reduce using rule 19 (expr)
    GREATER_OP          [reduce using rule 20 (expr)]
    LESS_OP             reduce using rule 19 (expr)
    LESS_OP             [reduce using rule 20 (expr)]
    GREATER_OR_EQL_OP   reduce using rule 19 (expr)
    GREATER_OR_EQL_OP   [reduce using rule 20 (expr)]
    LESS_OR_EQL_OP      reduce using rule 19 (expr)
    LESS_OR_EQL_OP      [reduce using rule 20 (expr)]
    BIN_OR_OP           reduce using rule 19 (expr)
    BIN_OR_OP           [reduce using rule 20 (expr)]
    BIN_XOR_OP          reduce using rule 19 (expr)
    BIN_XOR_OP          [reduce using rule 20 (expr)]
    BIN_AND_OP          reduce using rule 19 (expr)
    BIN_AND_OP          [reduce using rule 20 (expr)]
    BIN_LEFT_SHIFT_OP   reduce using rule 19 (expr)
    BIN_LEFT_SHIFT_OP   [reduce using rule 20 (expr)]
    BIN_RIGHT_SHIFT_OP  reduce using rule 19 (expr)
    BIN_RIGHT_SHIFT_OP  [reduce using rule 20 (expr)]
    '+'                 reduce using rule 19 (expr)
    '+'                 [reduce using rule 20 (expr)]
    '-'                 reduce using rule 19 (expr)
    '-'                 [reduce using rule 20 (expr)]
    '*'                 reduce using rule 20 (expr)
    '/'                 reduce using rule 20 (expr)
    '%'                 reduce using rule 20 (expr)
    SEMICOLON_SYMBOL    reduce using rule 20 (expr)
    NEW_LINE_SYMBOL     reduce using rule 20 (expr)
    $default            reduce using rule 19 (expr)

    reduce/reduce conflict on tokens IF_KEYWORD, UNLESS_KEYWORD, UNTIL_KEYWORD, OR_KEYWORD, AND_KEYWORD, '=', ADD_ASSIGN_OP, SUB_ASSIGN_OP, MUL_ASSIGN_OP, DIV_ASSIGN_OP, MOD_ASSIGN_OP, POW_ASSIGN_OP, QUESTION_SYMBOL, EXCLUSIVE_RANGE_OP, INCLUSIVE_RANGE_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, EQL_OP, NOT_EQL_OP, COMB_COMPRASION_OP, CASE_EQL_OP, GREATER_OP, LESS_OP, GREATER_OR_EQL_OP, LESS_OR_EQL_OP, BIN_OR_OP, BIN_XOR_OP, BIN_AND_OP, BIN_LEFT_SHIFT_OP, BIN_RIGHT_SHIFT_OP, '+', '-':
       19 expr: expr '-' expr .
       20 expr: '-' expr .
      First example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr '-' expr . IF_KEYWORD expr delimiter stmt END_KEYWORD delimiter END_KEYWORD delimiter END_KEYWORD $end
      First reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                     $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                     END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                                                        delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr                    stmt                                                                   END_KEYWORD
                                                                                                                           `-> 19: expr '-' expr . `-> 123: if_stmt                                             delimiter
                                                                                                                                                            `-> 155: IF_KEYWORD expr delimiter stmt END_KEYWORD
      Second example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr '-' expr . IF_KEYWORD expr delimiter END_KEYWORD delimiter END_KEYWORD $end
      Second reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                             delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr stmt                                                           END_KEYWORD
                                                                                                                                `-> 123: if_stmt                                     delimiter
                                                                                                                                         `-> 163: expr               IF_KEYWORD expr
                                                                                                                                                  `-> 20: '-' expr .



State 319

   65 expr: expr '-' linefeed_expr .
   66     | '-' linefeed_expr .

    IF_KEYWORD              reduce using rule 65 (expr)
    IF_KEYWORD              [reduce using rule 66 (expr)]
    UNLESS_KEYWORD          reduce using rule 65 (expr)
    UNLESS_KEYWORD          [reduce using rule 66 (expr)]
    UNTIL_KEYWORD           reduce using rule 65 (expr)
    UNTIL_KEYWORD           [reduce using rule 66 (expr)]
    OR_KEYWORD              reduce using rule 65 (expr)
    OR_KEYWORD              [reduce using rule 66 (expr)]
    AND_KEYWORD             reduce using rule 65 (expr)
    AND_KEYWORD             [reduce using rule 66 (expr)]
    '='                     reduce using rule 65 (expr)
    '='                     [reduce using rule 66 (expr)]
    ADD_ASSIGN_OP           reduce using rule 65 (expr)
    ADD_ASSIGN_OP           [reduce using rule 66 (expr)]
    SUB_ASSIGN_OP           reduce using rule 65 (expr)
    SUB_ASSIGN_OP           [reduce using rule 66 (expr)]
    MUL_ASSIGN_OP           reduce using rule 65 (expr)
    MUL_ASSIGN_OP           [reduce using rule 66 (expr)]
    DIV_ASSIGN_OP           reduce using rule 65 (expr)
    DIV_ASSIGN_OP           [reduce using rule 66 (expr)]
    MOD_ASSIGN_OP           reduce using rule 65 (expr)
    MOD_ASSIGN_OP           [reduce using rule 66 (expr)]
    POW_ASSIGN_OP           reduce using rule 65 (expr)
    POW_ASSIGN_OP           [reduce using rule 66 (expr)]
    QUESTION_SYMBOL         reduce using rule 65 (expr)
    QUESTION_SYMBOL         [reduce using rule 66 (expr)]
    EXCLUSIVE_RANGE_OP      reduce using rule 65 (expr)
    EXCLUSIVE_RANGE_OP      [reduce using rule 66 (expr)]
    INCLUSIVE_RANGE_OP      reduce using rule 65 (expr)
    INCLUSIVE_RANGE_OP      [reduce using rule 66 (expr)]
    LOGICAL_OR_OP           reduce using rule 65 (expr)
    LOGICAL_OR_OP           [reduce using rule 66 (expr)]
    LOGICAL_AND_OP          reduce using rule 65 (expr)
    LOGICAL_AND_OP          [reduce using rule 66 (expr)]
    EQL_OP                  reduce using rule 65 (expr)
    EQL_OP                  [reduce using rule 66 (expr)]
    NOT_EQL_OP              reduce using rule 65 (expr)
    NOT_EQL_OP              [reduce using rule 66 (expr)]
    COMB_COMPRASION_OP      reduce using rule 65 (expr)
    COMB_COMPRASION_OP      [reduce using rule 66 (expr)]
    CASE_EQL_OP             reduce using rule 65 (expr)
    CASE_EQL_OP             [reduce using rule 66 (expr)]
    GREATER_OP              reduce using rule 65 (expr)
    GREATER_OP              [reduce using rule 66 (expr)]
    LESS_OP                 reduce using rule 65 (expr)
    LESS_OP                 [reduce using rule 66 (expr)]
    GREATER_OR_EQL_OP       reduce using rule 65 (expr)
    GREATER_OR_EQL_OP       [reduce using rule 66 (expr)]
    LESS_OR_EQL_OP          reduce using rule 65 (expr)
    LESS_OR_EQL_OP          [reduce using rule 66 (expr)]
    BIN_OR_OP               reduce using rule 65 (expr)
    BIN_OR_OP               [reduce using rule 66 (expr)]
    BIN_XOR_OP              reduce using rule 65 (expr)
    BIN_XOR_OP              [reduce using rule 66 (expr)]
    BIN_AND_OP              reduce using rule 65 (expr)
    BIN_AND_OP              [reduce using rule 66 (expr)]
    BIN_LEFT_SHIFT_OP       reduce using rule 65 (expr)
    BIN_LEFT_SHIFT_OP       [reduce using rule 66 (expr)]
    BIN_RIGHT_SHIFT_OP      reduce using rule 65 (expr)
    BIN_RIGHT_SHIFT_OP      [reduce using rule 66 (expr)]
    '+'                     reduce using rule 65 (expr)
    '+'                     [reduce using rule 66 (expr)]
    '-'                     reduce using rule 65 (expr)
    '-'                     [reduce using rule 66 (expr)]
    '*'                     reduce using rule 65 (expr)
    '*'                     [reduce using rule 66 (expr)]
    '/'                     reduce using rule 65 (expr)
    '/'                     [reduce using rule 66 (expr)]
    '%'                     reduce using rule 65 (expr)
    '%'                     [reduce using rule 66 (expr)]
    BIN_ONES_COMPLEMENT_OP  reduce using rule 65 (expr)
    BIN_ONES_COMPLEMENT_OP  [reduce using rule 66 (expr)]
    ARITHMETIC_POW_OP       reduce using rule 65 (expr)
    ARITHMETIC_POW_OP       [reduce using rule 66 (expr)]
    '.'                     reduce using rule 65 (expr)
    '.'                     [reduce using rule 66 (expr)]
    '['                     reduce using rule 65 (expr)
    '['                     [reduce using rule 66 (expr)]
    DOUBLE_COLON_SYMBOL     reduce using rule 65 (expr)
    DOUBLE_COLON_SYMBOL     [reduce using rule 66 (expr)]
    SEMICOLON_SYMBOL        reduce using rule 66 (expr)
    NEW_LINE_SYMBOL         reduce using rule 66 (expr)
    $default                reduce using rule 65 (expr)

    reduce/reduce conflict on tokens IF_KEYWORD, UNLESS_KEYWORD, UNTIL_KEYWORD, OR_KEYWORD, AND_KEYWORD, '=', ADD_ASSIGN_OP, SUB_ASSIGN_OP, MUL_ASSIGN_OP, DIV_ASSIGN_OP, MOD_ASSIGN_OP, POW_ASSIGN_OP, QUESTION_SYMBOL, EXCLUSIVE_RANGE_OP, INCLUSIVE_RANGE_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, EQL_OP, NOT_EQL_OP, COMB_COMPRASION_OP, CASE_EQL_OP, GREATER_OP, LESS_OP, GREATER_OR_EQL_OP, LESS_OR_EQL_OP, BIN_OR_OP, BIN_XOR_OP, BIN_AND_OP, BIN_LEFT_SHIFT_OP, BIN_RIGHT_SHIFT_OP, '+', '-', '*', '/', '%', BIN_ONES_COMPLEMENT_OP, ARITHMETIC_POW_OP, '.', '[', DOUBLE_COLON_SYMBOL:
       65 expr: expr '-' linefeed_expr .
       66 expr: '-' linefeed_expr .
      First example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr '-' linefeed_expr . IF_KEYWORD expr delimiter stmt END_KEYWORD delimiter END_KEYWORD delimiter END_KEYWORD $end
      First reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                              $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                              END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                                                                 delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr                             stmt                                                                   END_KEYWORD
                                                                                                                           `-> 65: expr '-' linefeed_expr . `-> 123: if_stmt                                             delimiter
                                                                                                                                                                     `-> 155: IF_KEYWORD expr delimiter stmt END_KEYWORD
      Second example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr '-' linefeed_expr . IF_KEYWORD expr delimiter END_KEYWORD delimiter END_KEYWORD $end
      Second reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                   $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                   END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                                      delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr stmt                                                                    END_KEYWORD
                                                                                                                                `-> 123: if_stmt                                              delimiter
                                                                                                                                         `-> 163: expr                        IF_KEYWORD expr
                                                                                                                                                  `-> 66: '-' linefeed_expr .



State 320

  102 expr: '[' NEW_LINE_SYMBOL . expr_list NEW_LINE_SYMBOL ']'
  107 linefeed_expr: NEW_LINE_SYMBOL . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 116 (expr_list)

    expr                 go to state 368
    expr_list            go to state 219
    expr_list_not_empty  go to state 125


State 321

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   14     | expr '[' expr . ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  118 expr_list_not_empty: expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    ']'                     shift, and go to state 345
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    ']'       [reduce using rule 118 (expr_list_not_empty)]
    $default  reduce using rule 118 (expr_list_not_empty)

    shift/reduce conflict on token ']':
      118 expr_list_not_empty: expr .
       14 expr: expr '[' expr . ']'
      First example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr '[' expr . ']' DO_KEYWORD stmt END_KEYWORD delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                         $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: method_stmt
                               `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                  END_KEYWORD
                                                                         `-> 120: stmt
                                                                                  `-> 124: while_stmt                                                                     delimiter
                                                                                           `-> 175: WHILE_KEYWORD expr                        DO_KEYWORD stmt END_KEYWORD
                                                                                                                  `-> 14: expr '[' expr . ']'
      Second example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr '[' expr . ']' delimiter END_KEYWORD delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                              delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr stmt                                                            END_KEYWORD
                                                                                                                                `-> 122: expr                                         delimiter
                                                                                                                                         `-> 54: '[' expr_list                    ']'
                                                                                                                                                     `-> 117: expr_list_not_empty
                                                                                                                                                              `-> 118: expr .



State 322

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   56     | DOUBLE_COLON_SYMBOL expr .
   57     | expr . DOUBLE_COLON_SYMBOL expr
   57     | expr DOUBLE_COLON_SYMBOL expr .
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    ALIAS_KEYWORD           reduce using rule 57 (expr)
    BEGIN_KEYWORD           reduce using rule 57 (expr)
    CASE_KEYWORD            reduce using rule 57 (expr)
    DEFINED_KEYWORD         reduce using rule 57 (expr)
    DO_KEYWORD              reduce using rule 57 (expr)
    IF_KEYWORD              reduce using rule 56 (expr)
    IF_KEYWORD              [reduce using rule 57 (expr)]
    FALSE_KEYWORD           reduce using rule 57 (expr)
    FOR_KEYWORD             reduce using rule 57 (expr)
    NIL_KEYWORD             reduce using rule 57 (expr)
    RETURN_KEYWORD          reduce using rule 57 (expr)
    THEN_KEYWORD            reduce using rule 57 (expr)
    TRUE_KEYWORD            reduce using rule 57 (expr)
    UNLESS_KEYWORD          reduce using rule 56 (expr)
    UNLESS_KEYWORD          [reduce using rule 57 (expr)]
    UNTIL_KEYWORD           reduce using rule 56 (expr)
    UNTIL_KEYWORD           [reduce using rule 57 (expr)]
    WHILE_KEYWORD           reduce using rule 57 (expr)
    OR_KEYWORD              reduce using rule 56 (expr)
    OR_KEYWORD              [reduce using rule 57 (expr)]
    AND_KEYWORD             reduce using rule 56 (expr)
    AND_KEYWORD             [reduce using rule 57 (expr)]
    NOT_KEYWORD             reduce using rule 57 (expr)
    '='                     reduce using rule 56 (expr)
    '='                     [reduce using rule 57 (expr)]
    ADD_ASSIGN_OP           reduce using rule 56 (expr)
    ADD_ASSIGN_OP           [reduce using rule 57 (expr)]
    SUB_ASSIGN_OP           reduce using rule 56 (expr)
    SUB_ASSIGN_OP           [reduce using rule 57 (expr)]
    MUL_ASSIGN_OP           reduce using rule 56 (expr)
    MUL_ASSIGN_OP           [reduce using rule 57 (expr)]
    DIV_ASSIGN_OP           reduce using rule 56 (expr)
    DIV_ASSIGN_OP           [reduce using rule 57 (expr)]
    MOD_ASSIGN_OP           reduce using rule 56 (expr)
    MOD_ASSIGN_OP           [reduce using rule 57 (expr)]
    POW_ASSIGN_OP           reduce using rule 56 (expr)
    POW_ASSIGN_OP           [reduce using rule 57 (expr)]
    QUESTION_SYMBOL         reduce using rule 56 (expr)
    QUESTION_SYMBOL         [reduce using rule 57 (expr)]
    EXCLUSIVE_RANGE_OP      reduce using rule 56 (expr)
    EXCLUSIVE_RANGE_OP      [reduce using rule 57 (expr)]
    INCLUSIVE_RANGE_OP      reduce using rule 56 (expr)
    INCLUSIVE_RANGE_OP      [reduce using rule 57 (expr)]
    LOGICAL_OR_OP           reduce using rule 56 (expr)
    LOGICAL_OR_OP           [reduce using rule 57 (expr)]
    LOGICAL_AND_OP          reduce using rule 56 (expr)
    LOGICAL_AND_OP          [reduce using rule 57 (expr)]
    EQL_OP                  reduce using rule 56 (expr)
    EQL_OP                  [reduce using rule 57 (expr)]
    NOT_EQL_OP              reduce using rule 56 (expr)
    NOT_EQL_OP              [reduce using rule 57 (expr)]
    COMB_COMPRASION_OP      reduce using rule 56 (expr)
    COMB_COMPRASION_OP      [reduce using rule 57 (expr)]
    CASE_EQL_OP             reduce using rule 56 (expr)
    CASE_EQL_OP             [reduce using rule 57 (expr)]
    GREATER_OP              reduce using rule 56 (expr)
    GREATER_OP              [reduce using rule 57 (expr)]
    LESS_OP                 reduce using rule 56 (expr)
    LESS_OP                 [reduce using rule 57 (expr)]
    GREATER_OR_EQL_OP       reduce using rule 56 (expr)
    GREATER_OR_EQL_OP       [reduce using rule 57 (expr)]
    LESS_OR_EQL_OP          reduce using rule 56 (expr)
    LESS_OR_EQL_OP          [reduce using rule 57 (expr)]
    BIN_OR_OP               reduce using rule 56 (expr)
    BIN_OR_OP               [reduce using rule 57 (expr)]
    BIN_XOR_OP              reduce using rule 56 (expr)
    BIN_XOR_OP              [reduce using rule 57 (expr)]
    BIN_AND_OP              reduce using rule 56 (expr)
    BIN_AND_OP              [reduce using rule 57 (expr)]
    BIN_LEFT_SHIFT_OP       reduce using rule 56 (expr)
    BIN_LEFT_SHIFT_OP       [reduce using rule 57 (expr)]
    BIN_RIGHT_SHIFT_OP      reduce using rule 56 (expr)
    BIN_RIGHT_SHIFT_OP      [reduce using rule 57 (expr)]
    '+'                     reduce using rule 56 (expr)
    '+'                     [reduce using rule 57 (expr)]
    '-'                     reduce using rule 56 (expr)
    '-'                     [reduce using rule 57 (expr)]
    '*'                     reduce using rule 56 (expr)
    '*'                     [reduce using rule 57 (expr)]
    '/'                     reduce using rule 56 (expr)
    '/'                     [reduce using rule 57 (expr)]
    '%'                     reduce using rule 56 (expr)
    '%'                     [reduce using rule 57 (expr)]
    LOGICAL_NOT_OP          reduce using rule 57 (expr)
    BIN_ONES_COMPLEMENT_OP  reduce using rule 56 (expr)
    BIN_ONES_COMPLEMENT_OP  [reduce using rule 57 (expr)]
    ARITHMETIC_POW_OP       reduce using rule 56 (expr)
    ARITHMETIC_POW_OP       [reduce using rule 57 (expr)]
    '('                     reduce using rule 57 (expr)
    '.'                     reduce using rule 56 (expr)
    '.'                     [reduce using rule 57 (expr)]
    '['                     reduce using rule 56 (expr)
    '['                     [reduce using rule 57 (expr)]
    DOUBLE_COLON_SYMBOL     reduce using rule 56 (expr)
    DOUBLE_COLON_SYMBOL     [reduce using rule 57 (expr)]
    STRING                  reduce using rule 57 (expr)
    INTEGER_NUMBER          reduce using rule 57 (expr)
    FLOAT_NUMBER            reduce using rule 57 (expr)
    IDENTIFIER              reduce using rule 57 (expr)
    OBJECT_VAR_NAME         reduce using rule 57 (expr)
    CLASS_VAR_NAME          reduce using rule 57 (expr)
    CONSTANT_NAME           reduce using rule 57 (expr)
    $default                reduce using rule 56 (expr)

    reduce/reduce conflict on tokens IF_KEYWORD, UNLESS_KEYWORD, UNTIL_KEYWORD, OR_KEYWORD, AND_KEYWORD, '=', ADD_ASSIGN_OP, SUB_ASSIGN_OP, MUL_ASSIGN_OP, DIV_ASSIGN_OP, MOD_ASSIGN_OP, POW_ASSIGN_OP, QUESTION_SYMBOL, EXCLUSIVE_RANGE_OP, INCLUSIVE_RANGE_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, EQL_OP, NOT_EQL_OP, COMB_COMPRASION_OP, CASE_EQL_OP, GREATER_OP, LESS_OP, GREATER_OR_EQL_OP, LESS_OR_EQL_OP, BIN_OR_OP, BIN_XOR_OP, BIN_AND_OP, BIN_LEFT_SHIFT_OP, BIN_RIGHT_SHIFT_OP, '+', '-', '*', '/', '%', BIN_ONES_COMPLEMENT_OP, ARITHMETIC_POW_OP, '.', '[', DOUBLE_COLON_SYMBOL:
       56 expr: DOUBLE_COLON_SYMBOL expr .
       57 expr: expr DOUBLE_COLON_SYMBOL expr .
      First example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr DOUBLE_COLON_SYMBOL expr . IF_KEYWORD expr delimiter END_KEYWORD delimiter END_KEYWORD $end
      First reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                          END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                                             delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr stmt                                                                           END_KEYWORD
                                                                                                                                `-> 123: if_stmt                                                     delimiter
                                                                                                                                         `-> 163: expr                               IF_KEYWORD expr
                                                                                                                                                  `-> 56: DOUBLE_COLON_SYMBOL expr .
      Second example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr DOUBLE_COLON_SYMBOL expr . IF_KEYWORD expr delimiter stmt END_KEYWORD delimiter END_KEYWORD delimiter END_KEYWORD $end
      Second reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                                     $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                                     END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                                                                        delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr                                    stmt                                                                   END_KEYWORD
                                                                                                                           `-> 57: expr DOUBLE_COLON_SYMBOL expr . `-> 123: if_stmt                                             delimiter
                                                                                                                                                                            `-> 155: IF_KEYWORD expr delimiter stmt END_KEYWORD



State 323

  104 expr: DOUBLE_COLON_SYMBOL linefeed_expr .
  105     | expr DOUBLE_COLON_SYMBOL linefeed_expr .

    ALIAS_KEYWORD           reduce using rule 105 (expr)
    BEGIN_KEYWORD           reduce using rule 105 (expr)
    CASE_KEYWORD            reduce using rule 105 (expr)
    DEFINED_KEYWORD         reduce using rule 105 (expr)
    DO_KEYWORD              reduce using rule 105 (expr)
    IF_KEYWORD              reduce using rule 104 (expr)
    IF_KEYWORD              [reduce using rule 105 (expr)]
    FALSE_KEYWORD           reduce using rule 105 (expr)
    FOR_KEYWORD             reduce using rule 105 (expr)
    NIL_KEYWORD             reduce using rule 105 (expr)
    RETURN_KEYWORD          reduce using rule 105 (expr)
    THEN_KEYWORD            reduce using rule 105 (expr)
    TRUE_KEYWORD            reduce using rule 105 (expr)
    UNLESS_KEYWORD          reduce using rule 104 (expr)
    UNLESS_KEYWORD          [reduce using rule 105 (expr)]
    UNTIL_KEYWORD           reduce using rule 104 (expr)
    UNTIL_KEYWORD           [reduce using rule 105 (expr)]
    WHILE_KEYWORD           reduce using rule 105 (expr)
    OR_KEYWORD              reduce using rule 104 (expr)
    OR_KEYWORD              [reduce using rule 105 (expr)]
    AND_KEYWORD             reduce using rule 104 (expr)
    AND_KEYWORD             [reduce using rule 105 (expr)]
    NOT_KEYWORD             reduce using rule 105 (expr)
    '='                     reduce using rule 104 (expr)
    '='                     [reduce using rule 105 (expr)]
    ADD_ASSIGN_OP           reduce using rule 104 (expr)
    ADD_ASSIGN_OP           [reduce using rule 105 (expr)]
    SUB_ASSIGN_OP           reduce using rule 104 (expr)
    SUB_ASSIGN_OP           [reduce using rule 105 (expr)]
    MUL_ASSIGN_OP           reduce using rule 104 (expr)
    MUL_ASSIGN_OP           [reduce using rule 105 (expr)]
    DIV_ASSIGN_OP           reduce using rule 104 (expr)
    DIV_ASSIGN_OP           [reduce using rule 105 (expr)]
    MOD_ASSIGN_OP           reduce using rule 104 (expr)
    MOD_ASSIGN_OP           [reduce using rule 105 (expr)]
    POW_ASSIGN_OP           reduce using rule 104 (expr)
    POW_ASSIGN_OP           [reduce using rule 105 (expr)]
    QUESTION_SYMBOL         reduce using rule 104 (expr)
    QUESTION_SYMBOL         [reduce using rule 105 (expr)]
    EXCLUSIVE_RANGE_OP      reduce using rule 104 (expr)
    EXCLUSIVE_RANGE_OP      [reduce using rule 105 (expr)]
    INCLUSIVE_RANGE_OP      reduce using rule 104 (expr)
    INCLUSIVE_RANGE_OP      [reduce using rule 105 (expr)]
    LOGICAL_OR_OP           reduce using rule 104 (expr)
    LOGICAL_OR_OP           [reduce using rule 105 (expr)]
    LOGICAL_AND_OP          reduce using rule 104 (expr)
    LOGICAL_AND_OP          [reduce using rule 105 (expr)]
    EQL_OP                  reduce using rule 104 (expr)
    EQL_OP                  [reduce using rule 105 (expr)]
    NOT_EQL_OP              reduce using rule 104 (expr)
    NOT_EQL_OP              [reduce using rule 105 (expr)]
    COMB_COMPRASION_OP      reduce using rule 104 (expr)
    COMB_COMPRASION_OP      [reduce using rule 105 (expr)]
    CASE_EQL_OP             reduce using rule 104 (expr)
    CASE_EQL_OP             [reduce using rule 105 (expr)]
    GREATER_OP              reduce using rule 104 (expr)
    GREATER_OP              [reduce using rule 105 (expr)]
    LESS_OP                 reduce using rule 104 (expr)
    LESS_OP                 [reduce using rule 105 (expr)]
    GREATER_OR_EQL_OP       reduce using rule 104 (expr)
    GREATER_OR_EQL_OP       [reduce using rule 105 (expr)]
    LESS_OR_EQL_OP          reduce using rule 104 (expr)
    LESS_OR_EQL_OP          [reduce using rule 105 (expr)]
    BIN_OR_OP               reduce using rule 104 (expr)
    BIN_OR_OP               [reduce using rule 105 (expr)]
    BIN_XOR_OP              reduce using rule 104 (expr)
    BIN_XOR_OP              [reduce using rule 105 (expr)]
    BIN_AND_OP              reduce using rule 104 (expr)
    BIN_AND_OP              [reduce using rule 105 (expr)]
    BIN_LEFT_SHIFT_OP       reduce using rule 104 (expr)
    BIN_LEFT_SHIFT_OP       [reduce using rule 105 (expr)]
    BIN_RIGHT_SHIFT_OP      reduce using rule 104 (expr)
    BIN_RIGHT_SHIFT_OP      [reduce using rule 105 (expr)]
    '+'                     reduce using rule 104 (expr)
    '+'                     [reduce using rule 105 (expr)]
    '-'                     reduce using rule 104 (expr)
    '-'                     [reduce using rule 105 (expr)]
    '*'                     reduce using rule 104 (expr)
    '*'                     [reduce using rule 105 (expr)]
    '/'                     reduce using rule 104 (expr)
    '/'                     [reduce using rule 105 (expr)]
    '%'                     reduce using rule 104 (expr)
    '%'                     [reduce using rule 105 (expr)]
    LOGICAL_NOT_OP          reduce using rule 105 (expr)
    BIN_ONES_COMPLEMENT_OP  reduce using rule 104 (expr)
    BIN_ONES_COMPLEMENT_OP  [reduce using rule 105 (expr)]
    ARITHMETIC_POW_OP       reduce using rule 104 (expr)
    ARITHMETIC_POW_OP       [reduce using rule 105 (expr)]
    '('                     reduce using rule 105 (expr)
    '.'                     reduce using rule 104 (expr)
    '.'                     [reduce using rule 105 (expr)]
    '['                     reduce using rule 104 (expr)
    '['                     [reduce using rule 105 (expr)]
    DOUBLE_COLON_SYMBOL     reduce using rule 104 (expr)
    DOUBLE_COLON_SYMBOL     [reduce using rule 105 (expr)]
    STRING                  reduce using rule 105 (expr)
    INTEGER_NUMBER          reduce using rule 105 (expr)
    FLOAT_NUMBER            reduce using rule 105 (expr)
    IDENTIFIER              reduce using rule 105 (expr)
    OBJECT_VAR_NAME         reduce using rule 105 (expr)
    CLASS_VAR_NAME          reduce using rule 105 (expr)
    CONSTANT_NAME           reduce using rule 105 (expr)
    $default                reduce using rule 104 (expr)

    reduce/reduce conflict on tokens IF_KEYWORD, UNLESS_KEYWORD, UNTIL_KEYWORD, OR_KEYWORD, AND_KEYWORD, '=', ADD_ASSIGN_OP, SUB_ASSIGN_OP, MUL_ASSIGN_OP, DIV_ASSIGN_OP, MOD_ASSIGN_OP, POW_ASSIGN_OP, QUESTION_SYMBOL, EXCLUSIVE_RANGE_OP, INCLUSIVE_RANGE_OP, LOGICAL_OR_OP, LOGICAL_AND_OP, EQL_OP, NOT_EQL_OP, COMB_COMPRASION_OP, CASE_EQL_OP, GREATER_OP, LESS_OP, GREATER_OR_EQL_OP, LESS_OR_EQL_OP, BIN_OR_OP, BIN_XOR_OP, BIN_AND_OP, BIN_LEFT_SHIFT_OP, BIN_RIGHT_SHIFT_OP, '+', '-', '*', '/', '%', BIN_ONES_COMPLEMENT_OP, ARITHMETIC_POW_OP, '.', '[', DOUBLE_COLON_SYMBOL:
      104 expr: DOUBLE_COLON_SYMBOL linefeed_expr .
      105 expr: expr DOUBLE_COLON_SYMBOL linefeed_expr .
      First example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr DOUBLE_COLON_SYMBOL linefeed_expr . IF_KEYWORD expr delimiter END_KEYWORD delimiter END_KEYWORD $end
      First reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                    $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                    END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                                                       delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr stmt                                                                                     END_KEYWORD
                                                                                                                                `-> 123: if_stmt                                                               delimiter
                                                                                                                                         `-> 163: expr                                         IF_KEYWORD expr
                                                                                                                                                  `-> 104: DOUBLE_COLON_SYMBOL linefeed_expr .
      Second example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr DOUBLE_COLON_SYMBOL linefeed_expr . IF_KEYWORD expr delimiter stmt END_KEYWORD delimiter END_KEYWORD delimiter END_KEYWORD $end
      Second reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                                               $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                                               END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                                                                                  delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr                                              stmt                                                                   END_KEYWORD
                                                                                                                           `-> 105: expr DOUBLE_COLON_SYMBOL linefeed_expr . `-> 123: if_stmt                                             delimiter
                                                                                                                                                                                      `-> 155: IF_KEYWORD expr delimiter stmt END_KEYWORD



State 324

  168 unless_stmt: UNLESS_KEYWORD expr stmt ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 369
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 325

  166 unless_stmt: UNLESS_KEYWORD expr stmt END_KEYWORD .

    $default  reduce using rule 166 (unless_stmt)


State 326

  181 until_stmt: UNTIL_KEYWORD expr DO_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 370


State 327

  180 until_stmt: UNTIL_KEYWORD expr stmt END_KEYWORD .

    $default  reduce using rule 180 (until_stmt)


State 328

  175 while_stmt: WHILE_KEYWORD expr DO_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 371


State 329

  176 while_stmt: WHILE_KEYWORD expr stmt END_KEYWORD .

    $default  reduce using rule 176 (while_stmt)


State 330

  185 redo_stmt: REDO_KEYWORD . IF_KEYWORD expr
  186          | REDO_KEYWORD . expr IF_KEYWORD expr

    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 372
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 373


State 331

  177 while_stmt: WHILE_KEYWORD expr stmt redo_stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 374


State 332

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   74     | NOT_KEYWORD '(' NEW_LINE_SYMBOL expr . NEW_LINE_SYMBOL ')'
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 375


State 333

   26 expr: NOT_KEYWORD '(' expr ')' .

    $default  reduce using rule 26 (expr)


State 334

  101 expr: '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL . ')'

    ')'  shift, and go to state 376


State 335

  102 expr: '[' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL . ']'

    ']'  shift, and go to state 377


State 336

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  119 expr_list_not_empty: expr_list_not_empty COMMA_SYMBOL expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 119 (expr_list_not_empty)


State 337

   67 expr: IDENTIFIER '(' NEW_LINE_SYMBOL expr_list . NEW_LINE_SYMBOL ')'

    NEW_LINE_SYMBOL  shift, and go to state 378


State 338

   21 expr: IDENTIFIER '(' expr_list ')' .

    $default  reduce using rule 21 (expr)


State 339

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  164 if_stmt: expr IF_KEYWORD NEW_LINE_SYMBOL expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 164 (if_stmt)


State 340

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  170 unless_stmt: expr UNLESS_KEYWORD NEW_LINE_SYMBOL expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 170 (unless_stmt)


State 341

   58 expr: expr QUESTION_SYMBOL expr COLON_SYMBOL . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 379


State 342

  106 expr: expr QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL . COLON_SYMBOL linefeed_expr

    COLON_SYMBOL  shift, and go to state 380


State 343

   68 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER .
   69     | expr '.' NEW_LINE_SYMBOL IDENTIFIER . QUESTION_SYMBOL
   70     | expr '.' NEW_LINE_SYMBOL IDENTIFIER . LOGICAL_NOT_OP
   71     | expr '.' NEW_LINE_SYMBOL IDENTIFIER . '='

    '='              shift, and go to state 381
    QUESTION_SYMBOL  shift, and go to state 382
    LOGICAL_NOT_OP   shift, and go to state 383

    '='              [reduce using rule 68 (expr)]
    QUESTION_SYMBOL  [reduce using rule 68 (expr)]
    LOGICAL_NOT_OP   [reduce using rule 68 (expr)]
    $default         reduce using rule 68 (expr)

    shift/reduce conflict on token QUESTION_SYMBOL:
       68 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER .
       69 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER . QUESTION_SYMBOL
      First example: DEF_KEYWORD IDENTIFIER delimiter expr '.' NEW_LINE_SYMBOL IDENTIFIER . QUESTION_SYMBOL delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                        $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: method_stmt
                               `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                 END_KEYWORD
                                                                         `-> 120: stmt
                                                                                  `-> 122: expr                                                          delimiter
                                                                                           `-> 69: expr '.' NEW_LINE_SYMBOL IDENTIFIER . QUESTION_SYMBOL
      Second example: DEF_KEYWORD IDENTIFIER delimiter expr '.' NEW_LINE_SYMBOL IDENTIFIER . QUESTION_SYMBOL expr COLON_SYMBOL expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                                                         delimiter
                                                                                                    `-> 58: expr                                          QUESTION_SYMBOL expr COLON_SYMBOL expr
                                                                                                            `-> 68: expr '.' NEW_LINE_SYMBOL IDENTIFIER .

    shift/reduce conflict on token LOGICAL_NOT_OP:
       68 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER .
       70 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER . LOGICAL_NOT_OP
      First example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr '.' NEW_LINE_SYMBOL IDENTIFIER . LOGICAL_NOT_OP DO_KEYWORD stmt END_KEYWORD delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                          $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: method_stmt
                               `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                   END_KEYWORD
                                                                         `-> 120: stmt
                                                                                  `-> 124: while_stmt                                                                                                      delimiter
                                                                                           `-> 175: WHILE_KEYWORD expr                                                         DO_KEYWORD stmt END_KEYWORD
                                                                                                                  `-> 70: expr '.' NEW_LINE_SYMBOL IDENTIFIER . LOGICAL_NOT_OP
      Second example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr '.' NEW_LINE_SYMBOL IDENTIFIER . LOGICAL_NOT_OP expr delimiter END_KEYWORD delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                   $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                   END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                                                      delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr                                          stmt                                           END_KEYWORD
                                                                                                                           `-> 68: expr '.' NEW_LINE_SYMBOL IDENTIFIER . `-> 122: expr                        delimiter
                                                                                                                                                                                  `-> 50: LOGICAL_NOT_OP expr

    shift/reduce conflict on token '=':
       68 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER .
       71 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER . '='
      First example: DEF_KEYWORD IDENTIFIER delimiter expr '.' NEW_LINE_SYMBOL IDENTIFIER . '=' delimiter END_KEYWORD $end
      Shift derivation
        $accept
        `-> 0: programm                                                                                                                                            $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: method_stmt
                               `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                     END_KEYWORD
                                                                         `-> 120: stmt
                                                                                  `-> 122: expr                                              delimiter
                                                                                           `-> 71: expr '.' NEW_LINE_SYMBOL IDENTIFIER . '='
      Second example: DEF_KEYWORD IDENTIFIER delimiter expr '.' NEW_LINE_SYMBOL IDENTIFIER . '=' expr delimiter END_KEYWORD $end
      Reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                  $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                  END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 122: expr                                                           delimiter
                                                                                                    `-> 13: expr                                          '=' expr
                                                                                                            `-> 68: expr '.' NEW_LINE_SYMBOL IDENTIFIER .



State 344

   23 expr: expr '.' IDENTIFIER QUESTION_SYMBOL .

    $default  reduce using rule 23 (expr)


State 345

   14 expr: expr '[' expr ']' .

    $default  reduce using rule 14 (expr)


State 346

   60 expr: expr '[' linefeed_expr NEW_LINE_SYMBOL . ']'

    ']'  shift, and go to state 384


State 347

  121 stmt_list: stmt_list . stmt
  142 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' param_list ')' delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 385
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 348

  121 stmt_list: stmt_list . stmt
  137 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list ')' delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 386
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 349

  121 stmt_list: stmt_list . stmt
  140 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 387
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 350

  136 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list ')' delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 136 (method_stmt)


State 351

  204 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter . stmt_list END_KEYWORD
  205                  | BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter . stmt_list ENSURE_KEYWORD delimiter END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 388
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 352

  190 when_list: WHEN_KEYWORD expr_list THEN_KEYWORD . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 389
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 353

  189 when_list: WHEN_KEYWORD expr_list delimiter . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 390
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 354

  188 case_stmt: CASE_KEYWORD expr when_list ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 391


State 355

  192 when_list: when_list expr_list THEN_KEYWORD . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 392
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 356

  191 when_list: when_list expr_list delimiter . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 393
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 357

  158 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 394
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 358

  171 elsif_list: ELSIF_KEYWORD . expr delimiter stmt
  172           | ELSIF_KEYWORD . expr THEN_KEYWORD stmt

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 395


State 359

  156 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 156 (if_stmt)


State 360

  160 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list . stmt END_KEYWORD
  162        | IF_KEYWORD expr THEN_KEYWORD stmt elsif_list . ELSE_KEYWORD stmt END_KEYWORD
  173 elsif_list: elsif_list . ELSIF_KEYWORD expr delimiter stmt
  174           | elsif_list . ELSIF_KEYWORD expr THEN_KEYWORD stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    ELSE_KEYWORD         shift, and go to state 396
    ELSIF_KEYWORD        shift, and go to state 397
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 398
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 361

  157 if_stmt: IF_KEYWORD expr delimiter stmt ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 399
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 362

  155 if_stmt: IF_KEYWORD expr delimiter stmt END_KEYWORD .

    $default  reduce using rule 155 (if_stmt)


State 363

  159 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list . stmt END_KEYWORD
  161        | IF_KEYWORD expr delimiter stmt elsif_list . ELSE_KEYWORD stmt END_KEYWORD
  173 elsif_list: elsif_list . ELSIF_KEYWORD expr delimiter stmt
  174           | elsif_list . ELSIF_KEYWORD expr THEN_KEYWORD stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    ELSE_KEYWORD         shift, and go to state 400
    ELSIF_KEYWORD        shift, and go to state 397
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 401
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 364

  178 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr DO_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 402
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 365

  179 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 403


State 366

  167 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 404
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 367

  165 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 165 (unless_stmt)


State 368

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  107 linefeed_expr: NEW_LINE_SYMBOL expr .
  118 expr_list_not_empty: expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    COMMA_SYMBOL     reduce using rule 118 (expr_list_not_empty)
    NEW_LINE_SYMBOL  reduce using rule 107 (linefeed_expr)
    NEW_LINE_SYMBOL  [reduce using rule 118 (expr_list_not_empty)]
    $default         reduce using rule 107 (linefeed_expr)

    reduce/reduce conflict on token NEW_LINE_SYMBOL:
      107 linefeed_expr: NEW_LINE_SYMBOL expr .
      118 expr_list_not_empty: expr .
      First example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr '[' NEW_LINE_SYMBOL expr . NEW_LINE_SYMBOL ']' DO_KEYWORD stmt END_KEYWORD delimiter END_KEYWORD $end
      First reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                           $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                           END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                                              delimiter
                                                                                                    `-> 175: WHILE_KEYWORD expr                                                                 DO_KEYWORD stmt END_KEYWORD
                                                                                                                           `-> 60: expr '[' linefeed_expr                   NEW_LINE_SYMBOL ']'
                                                                                                                                            `-> 107: NEW_LINE_SYMBOL expr .
      Second example: DEF_KEYWORD IDENTIFIER delimiter WHILE_KEYWORD expr '[' NEW_LINE_SYMBOL expr . NEW_LINE_SYMBOL ']' delimiter END_KEYWORD delimiter END_KEYWORD $end
      Second reduce derivation
        $accept
        `-> 0: programm                                                                                                                                                                                                                                            $end
               `-> 2: programm_el_list_not_empty
                      `-> 111: programm_element
                               `-> 109: method_stmt
                                        `-> 138: DEF_KEYWORD IDENTIFIER delimiter stmt_list                                                                                                                                                            END_KEYWORD
                                                                                  `-> 120: stmt
                                                                                           `-> 124: while_stmt                                                                                                                               delimiter
                                                                                                    `-> 176: WHILE_KEYWORD expr stmt                                                                                             END_KEYWORD
                                                                                                                                `-> 122: expr                                                                          delimiter
                                                                                                                                         `-> 102: '[' NEW_LINE_SYMBOL expr_list                    NEW_LINE_SYMBOL ']'
                                                                                                                                                                      `-> 117: expr_list_not_empty
                                                                                                                                                                               `-> 118: expr .



State 369

  168 unless_stmt: UNLESS_KEYWORD expr stmt ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 405


State 370

  181 until_stmt: UNTIL_KEYWORD expr DO_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 181 (until_stmt)


State 371

  175 while_stmt: WHILE_KEYWORD expr DO_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 175 (while_stmt)


State 372

  185 redo_stmt: REDO_KEYWORD IF_KEYWORD . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 406


State 373

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  186 redo_stmt: REDO_KEYWORD expr . IF_KEYWORD expr

    IF_KEYWORD              shift, and go to state 407
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 374

  177 while_stmt: WHILE_KEYWORD expr stmt redo_stmt END_KEYWORD .

    $default  reduce using rule 177 (while_stmt)


State 375

   74 expr: NOT_KEYWORD '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL . ')'

    ')'  shift, and go to state 408


State 376

  101 expr: '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')' .

    $default  reduce using rule 101 (expr)


State 377

  102 expr: '[' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ']' .

    $default  reduce using rule 102 (expr)


State 378

   67 expr: IDENTIFIER '(' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL . ')'

    ')'  shift, and go to state 409


State 379

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   58     | expr QUESTION_SYMBOL expr COLON_SYMBOL expr .
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 58 (expr)


State 380

  106 expr: expr QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL . linefeed_expr

    NEW_LINE_SYMBOL  shift, and go to state 106

    linefeed_expr  go to state 410


State 381

   71 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER '=' .

    $default  reduce using rule 71 (expr)


State 382

   69 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL .

    $default  reduce using rule 69 (expr)


State 383

   70 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP .

    $default  reduce using rule 70 (expr)


State 384

   60 expr: expr '[' linefeed_expr NEW_LINE_SYMBOL ']' .

    $default  reduce using rule 60 (expr)


State 385

  142 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' param_list ')' delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 142 (method_stmt)


State 386

  137 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list ')' delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 137 (method_stmt)


State 387

  140 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 140 (method_stmt)


State 388

  121 stmt_list: stmt_list . stmt
  204 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list . END_KEYWORD
  205                  | BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list . ENSURE_KEYWORD delimiter END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 411
    ENSURE_KEYWORD       shift, and go to state 412
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 389

  190 when_list: WHEN_KEYWORD expr_list THEN_KEYWORD stmt .

    $default  reduce using rule 190 (when_list)


State 390

  189 when_list: WHEN_KEYWORD expr_list delimiter stmt .

    $default  reduce using rule 189 (when_list)


State 391

  188 case_stmt: CASE_KEYWORD expr when_list ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 188 (case_stmt)


State 392

  192 when_list: when_list expr_list THEN_KEYWORD stmt .

    $default  reduce using rule 192 (when_list)


State 393

  191 when_list: when_list expr_list delimiter stmt .

    $default  reduce using rule 191 (when_list)


State 394

  158 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 413


State 395

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  171 elsif_list: ELSIF_KEYWORD expr . delimiter stmt
  172           | ELSIF_KEYWORD expr . THEN_KEYWORD stmt

    THEN_KEYWORD            shift, and go to state 414
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    SEMICOLON_SYMBOL        shift, and go to state 15
    NEW_LINE_SYMBOL         shift, and go to state 16

    delimiter  go to state 415


State 396

  162 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 416
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 397

  173 elsif_list: elsif_list ELSIF_KEYWORD . expr delimiter stmt
  174           | elsif_list ELSIF_KEYWORD . expr THEN_KEYWORD stmt

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 417


State 398

  160 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 418


State 399

  157 if_stmt: IF_KEYWORD expr delimiter stmt ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 419


State 400

  161 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 420
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 401

  159 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 421


State 402

  178 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr DO_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 422


State 403

  179 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr stmt END_KEYWORD .

    $default  reduce using rule 179 (for_stmt)


State 404

  167 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 423


State 405

  168 unless_stmt: UNLESS_KEYWORD expr stmt ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 168 (unless_stmt)


State 406

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  185 redo_stmt: REDO_KEYWORD IF_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 185 (redo_stmt)


State 407

  186 redo_stmt: REDO_KEYWORD expr IF_KEYWORD . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 424


State 408

   74 expr: NOT_KEYWORD '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')' .

    $default  reduce using rule 74 (expr)


State 409

   67 expr: IDENTIFIER '(' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ')' .

    $default  reduce using rule 67 (expr)


State 410

  106 expr: expr QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr .

    $default  reduce using rule 106 (expr)


State 411

  204 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 204 (begin_rescue_stmt)


State 412

  205 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD . delimiter END_KEYWORD

    SEMICOLON_SYMBOL  shift, and go to state 15
    NEW_LINE_SYMBOL   shift, and go to state 16

    delimiter  go to state 425


State 413

  158 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 158 (if_stmt)


State 414

  172 elsif_list: ELSIF_KEYWORD expr THEN_KEYWORD . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 426
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 415

  171 elsif_list: ELSIF_KEYWORD expr delimiter . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 427
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 416

  162 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 428


State 417

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  173 elsif_list: elsif_list ELSIF_KEYWORD expr . delimiter stmt
  174           | elsif_list ELSIF_KEYWORD expr . THEN_KEYWORD stmt

    THEN_KEYWORD            shift, and go to state 429
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    SEMICOLON_SYMBOL        shift, and go to state 15
    NEW_LINE_SYMBOL         shift, and go to state 16

    delimiter  go to state 430


State 418

  160 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list stmt END_KEYWORD .

    $default  reduce using rule 160 (if_stmt)


State 419

  157 if_stmt: IF_KEYWORD expr delimiter stmt ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 157 (if_stmt)


State 420

  161 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 431


State 421

  159 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list stmt END_KEYWORD .

    $default  reduce using rule 159 (if_stmt)


State 422

  178 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr DO_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 178 (for_stmt)


State 423

  167 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 167 (unless_stmt)


State 424

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . AND_KEYWORD expr
   25     | expr . OR_KEYWORD expr
   27     | expr . ARITHMETIC_POW_OP expr
   28     | expr . EQL_OP expr
   29     | expr . NOT_EQL_OP expr
   30     | expr . GREATER_OP expr
   31     | expr . LESS_OP expr
   32     | expr . GREATER_OR_EQL_OP expr
   33     | expr . LESS_OR_EQL_OP expr
   34     | expr . COMB_COMPRASION_OP expr
   35     | expr . CASE_EQL_OP expr
   36     | expr . ADD_ASSIGN_OP expr
   37     | expr . SUB_ASSIGN_OP expr
   38     | expr . MUL_ASSIGN_OP expr
   39     | expr . DIV_ASSIGN_OP expr
   40     | expr . MOD_ASSIGN_OP expr
   41     | expr . POW_ASSIGN_OP expr
   42     | expr . BIN_AND_OP expr
   43     | expr . BIN_OR_OP expr
   44     | expr . BIN_XOR_OP expr
   45     | expr . BIN_ONES_COMPLEMENT_OP expr
   46     | expr . BIN_LEFT_SHIFT_OP expr
   47     | expr . BIN_RIGHT_SHIFT_OP expr
   48     | expr . LOGICAL_AND_OP expr
   49     | expr . LOGICAL_OR_OP expr
   51     | expr . INCLUSIVE_RANGE_OP expr
   52     | expr . EXCLUSIVE_RANGE_OP expr
   57     | expr . DOUBLE_COLON_SYMBOL expr
   58     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   59     | expr . '=' linefeed_expr
   60     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   61     | expr . '/' linefeed_expr
   62     | expr . '%' linefeed_expr
   63     | expr . '*' linefeed_expr
   64     | expr . '+' linefeed_expr
   65     | expr . '-' linefeed_expr
   68     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   69     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   72     | expr . AND_KEYWORD linefeed_expr
   73     | expr . OR_KEYWORD linefeed_expr
   75     | expr . ARITHMETIC_POW_OP linefeed_expr
   76     | expr . EQL_OP linefeed_expr
   77     | expr . NOT_EQL_OP linefeed_expr
   78     | expr . GREATER_OP linefeed_expr
   79     | expr . LESS_OP linefeed_expr
   80     | expr . GREATER_OR_EQL_OP linefeed_expr
   81     | expr . LESS_OR_EQL_OP linefeed_expr
   82     | expr . COMB_COMPRASION_OP linefeed_expr
   83     | expr . CASE_EQL_OP linefeed_expr
   84     | expr . ADD_ASSIGN_OP linefeed_expr
   85     | expr . SUB_ASSIGN_OP linefeed_expr
   86     | expr . MUL_ASSIGN_OP linefeed_expr
   87     | expr . DIV_ASSIGN_OP linefeed_expr
   88     | expr . MOD_ASSIGN_OP linefeed_expr
   89     | expr . POW_ASSIGN_OP linefeed_expr
   90     | expr . BIN_AND_OP linefeed_expr
   91     | expr . BIN_OR_OP linefeed_expr
   92     | expr . BIN_XOR_OP linefeed_expr
   93     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   94     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   95     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   96     | expr . LOGICAL_AND_OP linefeed_expr
   97     | expr . LOGICAL_OR_OP linefeed_expr
   99     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  100     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  105     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  106     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  186 redo_stmt: REDO_KEYWORD expr IF_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 186 (redo_stmt)


State 425

  205 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter . END_KEYWORD

    END_KEYWORD  shift, and go to state 432


State 426

  172 elsif_list: ELSIF_KEYWORD expr THEN_KEYWORD stmt .

    $default  reduce using rule 172 (elsif_list)


State 427

  171 elsif_list: ELSIF_KEYWORD expr delimiter stmt .

    $default  reduce using rule 171 (elsif_list)


State 428

  162 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 162 (if_stmt)


State 429

  174 elsif_list: elsif_list ELSIF_KEYWORD expr THEN_KEYWORD . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 433
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 430

  173 elsif_list: elsif_list ELSIF_KEYWORD expr delimiter . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 434
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 431

  161 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 161 (if_stmt)


State 432

  205 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD .

    $default  reduce using rule 205 (begin_rescue_stmt)


State 433

  174 elsif_list: elsif_list ELSIF_KEYWORD expr THEN_KEYWORD stmt .

    $default  reduce using rule 174 (elsif_list)


State 434

  173 elsif_list: elsif_list ELSIF_KEYWORD expr delimiter stmt .

    $default  reduce using rule 173 (elsif_list)
