Terminals unused in grammar

    BREAK_KEYWORD
    NEXT_KEYWORD
    RETRY_KEYWORD
    SELF_KEYWORD
    SUPER_KEYWORD
    UNDEF_KEYWORD
    YIELD_KEYWORD
    '{'
    '}'


State 295 conflicts: 2 shift/reduce
State 331 conflicts: 2 shift/reduce


Grammar

    0 $accept: programm $end

    1 programm: %empty
    2         | programm_el_list_not_empty

    3 expr: IDENTIFIER
    4     | OBJECT_VAR_NAME
    5     | CLASS_VAR_NAME
    6     | CONSTANT_NAME
    7     | STRING
    8     | TRUE_KEYWORD
    9     | FALSE_KEYWORD
   10     | NIL_KEYWORD
   11     | INTEGER_NUMBER
   12     | FLOAT_NUMBER
   13     | expr '=' expr
   14     | expr '[' expr ']'
   15     | expr '/' expr
   16     | expr '%' expr
   17     | expr '*' expr
   18     | expr '+' expr
   19     | expr '-' expr
   20     | '-' expr
   21     | IDENTIFIER '(' expr_list ')'
   22     | expr '.' IDENTIFIER
   23     | expr '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr '.' IDENTIFIER '='
   26     | expr AND_KEYWORD expr
   27     | expr OR_KEYWORD expr
   28     | NOT_KEYWORD '(' expr ')'
   29     | expr ARITHMETIC_POW_OP expr
   30     | expr EQL_OP expr
   31     | expr NOT_EQL_OP expr
   32     | expr GREATER_OP expr
   33     | expr LESS_OP expr
   34     | expr GREATER_OR_EQL_OP expr
   35     | expr LESS_OR_EQL_OP expr
   36     | expr COMB_COMPRASION_OP expr
   37     | expr CASE_EQL_OP expr
   38     | expr ADD_ASSIGN_OP expr
   39     | expr SUB_ASSIGN_OP expr
   40     | expr MUL_ASSIGN_OP expr
   41     | expr DIV_ASSIGN_OP expr
   42     | expr MOD_ASSIGN_OP expr
   43     | expr POW_ASSIGN_OP expr
   44     | expr BIN_AND_OP expr
   45     | expr BIN_OR_OP expr
   46     | expr BIN_XOR_OP expr
   47     | expr BIN_ONES_COMPLEMENT_OP expr
   48     | expr BIN_LEFT_SHIFT_OP expr
   49     | expr BIN_RIGHT_SHIFT_OP expr
   50     | expr LOGICAL_AND_OP expr
   51     | expr LOGICAL_OR_OP expr
   52     | LOGICAL_NOT_OP expr
   53     | expr INCLUSIVE_RANGE_OP expr
   54     | expr EXCLUSIVE_RANGE_OP expr
   55     | '(' expr ')'
   56     | '[' expr_list ']'
   57     | DEFINED_KEYWORD expr
   58     | DOUBLE_COLON_SYMBOL expr
   59     | expr DOUBLE_COLON_SYMBOL expr
   60     | expr QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr '=' linefeed_expr
   62     | expr '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr '/' linefeed_expr
   64     | expr '%' linefeed_expr
   65     | expr '*' linefeed_expr
   66     | expr '+' linefeed_expr
   67     | expr '-' linefeed_expr
   68     | '-' linefeed_expr
   69     | IDENTIFIER '(' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ')'
   70     | expr '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr AND_KEYWORD linefeed_expr
   75     | expr OR_KEYWORD linefeed_expr
   76     | NOT_KEYWORD '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')'
   77     | expr ARITHMETIC_POW_OP linefeed_expr
   78     | expr EQL_OP linefeed_expr
   79     | expr NOT_EQL_OP linefeed_expr
   80     | expr GREATER_OP linefeed_expr
   81     | expr LESS_OP linefeed_expr
   82     | expr GREATER_OR_EQL_OP linefeed_expr
   83     | expr LESS_OR_EQL_OP linefeed_expr
   84     | expr COMB_COMPRASION_OP linefeed_expr
   85     | expr CASE_EQL_OP linefeed_expr
   86     | expr ADD_ASSIGN_OP linefeed_expr
   87     | expr SUB_ASSIGN_OP linefeed_expr
   88     | expr MUL_ASSIGN_OP linefeed_expr
   89     | expr DIV_ASSIGN_OP linefeed_expr
   90     | expr MOD_ASSIGN_OP linefeed_expr
   91     | expr POW_ASSIGN_OP linefeed_expr
   92     | expr BIN_AND_OP linefeed_expr
   93     | expr BIN_OR_OP linefeed_expr
   94     | expr BIN_XOR_OP linefeed_expr
   95     | expr BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr LOGICAL_AND_OP linefeed_expr
   99     | expr LOGICAL_OR_OP linefeed_expr
  100     | LOGICAL_NOT_OP linefeed_expr
  101     | expr INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr EXCLUSIVE_RANGE_OP linefeed_expr
  103     | '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')'
  104     | '[' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ']'
  105     | DEFINED_KEYWORD linefeed_expr
  106     | DOUBLE_COLON_SYMBOL linefeed_expr
  107     | expr DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

  109 linefeed_expr: NEW_LINE_SYMBOL expr

  110 programm_element: class_stmt
  111                 | method_stmt
  112                 | module_stmt

  113 programm_el_list_not_empty: programm_element
  114                           | programm_el_list_not_empty programm_element

  115 delimiter: NEW_LINE_SYMBOL
  116          | SEMICOLON_SYMBOL
  117          | SEMICOLON_SYMBOL NEW_LINE_SYMBOL

  118 expr_list: %empty
  119          | expr_list_not_empty

  120 expr_list_not_empty: expr
  121                    | expr_list_not_empty COMMA_SYMBOL expr

  122 stmt_list: stmt
  123          | stmt_list stmt

  124 stmt: expr delimiter
  125     | if_stmt delimiter
  126     | while_stmt delimiter
  127     | for_stmt delimiter
  128     | until_stmt delimiter
  129     | case_stmt delimiter
  130     | unless_stmt delimiter
  131     | return_stmt delimiter
  132     | alias_stmt delimiter
  133     | begin_rescue_stmt delimiter

  134 param_list_not_empty: IDENTIFIER
  135                     | param_list_not_empty COMMA_SYMBOL IDENTIFIER

  136 param_list: %empty
  137           | param_list_not_empty

  138 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list ')' delimiter stmt_list END_KEYWORD
  139            | DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list ')' delimiter stmt_list END_KEYWORD
  140            | DEF_KEYWORD IDENTIFIER delimiter stmt_list END_KEYWORD
  141            | DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL delimiter stmt_list END_KEYWORD
  142            | DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' delimiter stmt_list END_KEYWORD
  143            | DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP delimiter stmt_list END_KEYWORD
  144            | DEF_KEYWORD IDENTIFIER '=' '(' param_list ')' delimiter stmt_list END_KEYWORD
  145            | DEF_KEYWORD IDENTIFIER '=' delimiter stmt_list END_KEYWORD

  146 class_stmt: CLASS_KEYWORD CONSTANT_NAME delimiter class_body END_KEYWORD

  147 class_body_stmt: method_stmt delimiter
  148                | CLASS_VAR_NAME delimiter
  149                | CLASS_VAR_NAME '=' expr delimiter
  150                | OBJECT_VAR_NAME delimiter
  151                | OBJECT_VAR_NAME '=' expr delimiter
  152                | class_stmt delimiter

  153 class_body_not_empty: class_body_stmt
  154                     | class_body_not_empty class_body_stmt

  155 class_body: %empty
  156           | class_body_not_empty

  157 if_stmt: IF_KEYWORD expr delimiter stmt END_KEYWORD
  158        | IF_KEYWORD expr THEN_KEYWORD stmt END_KEYWORD
  159        | IF_KEYWORD expr delimiter stmt ELSE_KEYWORD stmt END_KEYWORD
  160        | IF_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  161        | IF_KEYWORD expr delimiter stmt elsif_list stmt END_KEYWORD
  162        | IF_KEYWORD expr THEN_KEYWORD stmt elsif_list stmt END_KEYWORD
  163        | IF_KEYWORD expr delimiter stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD
  164        | IF_KEYWORD expr THEN_KEYWORD stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD
  165        | expr IF_KEYWORD expr
  166        | expr IF_KEYWORD NEW_LINE_SYMBOL expr

  167 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt END_KEYWORD
  168            | UNLESS_KEYWORD expr delimiter stmt END_KEYWORD
  169            | UNLESS_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  170            | UNLESS_KEYWORD expr delimiter stmt ELSE_KEYWORD stmt END_KEYWORD
  171            | expr UNLESS_KEYWORD expr
  172            | expr UNLESS_KEYWORD NEW_LINE_SYMBOL expr

  173 elsif_list: ELSIF_KEYWORD expr delimiter stmt
  174           | ELSIF_KEYWORD expr THEN_KEYWORD stmt
  175           | elsif_list ELSIF_KEYWORD expr delimiter stmt
  176           | elsif_list ELSIF_KEYWORD expr THEN_KEYWORD stmt

  177 while_stmt: WHILE_KEYWORD expr DO_KEYWORD stmt END_KEYWORD
  178           | WHILE_KEYWORD expr delimiter stmt END_KEYWORD
  179           | WHILE_KEYWORD expr delimiter stmt redo_stmt END_KEYWORD

  180 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr DO_KEYWORD stmt END_KEYWORD
  181         | FOR_KEYWORD expr IN_KEYWORD expr delimiter stmt END_KEYWORD

  182 until_stmt: UNTIL_KEYWORD expr delimiter stmt END_KEYWORD
  183           | UNTIL_KEYWORD expr DO_KEYWORD stmt END_KEYWORD
  184           | expr UNTIL_KEYWORD expr

  185 return_stmt: RETURN_KEYWORD expr
  186            | RETURN_KEYWORD

  187 redo_stmt: REDO_KEYWORD IF_KEYWORD expr
  188          | REDO_KEYWORD expr IF_KEYWORD expr

  189 case_stmt: CASE_KEYWORD expr when_list END_KEYWORD
  190          | CASE_KEYWORD expr when_list ELSE_KEYWORD stmt END_KEYWORD

  191 when_list: WHEN_KEYWORD expr_list_not_empty delimiter stmt
  192          | WHEN_KEYWORD expr_list_not_empty THEN_KEYWORD stmt
  193          | when_list expr_list_not_empty delimiter stmt
  194          | when_list expr_list_not_empty THEN_KEYWORD stmt

  195 alias_stmt: ALIAS_KEYWORD IDENTIFIER IDENTIFIER

  196 module_stmt: MODULE_KEYWORD CONSTANT_NAME delimiter module_body END_KEYWORD

  197 module_body_stmt: expr delimiter
  198                 | method_stmt delimiter
  199                 | alias_stmt delimiter
  200                 | class_stmt delimiter
  201                 | module_stmt delimiter

  202 module_body_not_empty: module_body_stmt
  203                      | module_body_not_empty module_body_stmt

  204 module_body: %empty
  205            | module_body_not_empty

  206 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list END_KEYWORD
  207                  | BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 16 64
    '(' (40) 21 28 55 69 76 103 138 139 142 144
    ')' (41) 21 28 55 69 76 103 138 139 142 144
    '*' (42) 17 65
    '+' (43) 18 66
    '-' (45) 19 20 67 68
    '.' (46) 22 23 24 25 70 71 72 73
    '/' (47) 15 63
    '=' (61) 13 25 61 73 144 145 149 151
    '[' (91) 14 56 62 104
    ']' (93) 14 56 62 104
    '{' (123)
    '}' (125)
    error (256)
    ALIAS_KEYWORD (258) 195
    BEGIN_KEYWORD (259) 206 207
    BREAK_KEYWORD (260)
    CASE_KEYWORD (261) 189 190
    CLASS_KEYWORD (262) 146
    DEF_KEYWORD (263) 138 139 140 141 142 143 144 145
    DEFINED_KEYWORD (264) 57 105
    DO_KEYWORD (265) 177 180 183
    IF_KEYWORD (266) 157 158 159 160 161 162 163 164 165 166 187 188
    ELSE_KEYWORD (267) 159 160 163 164 169 170 190
    ELSIF_KEYWORD (268) 173 174 175 176
    END_KEYWORD (269) 138 139 140 141 142 143 144 145 146 157 158 159 160 161 162 163 164 167 168 169 170 177 178 179 180 181 182 183 189 190 196 206 207
    ENSURE_KEYWORD (270) 207
    FALSE_KEYWORD (271) 9
    FOR_KEYWORD (272) 180 181
    IN_KEYWORD (273) 180 181
    MODULE_KEYWORD (274) 196
    NEXT_KEYWORD (275)
    NIL_KEYWORD (276) 10
    REDO_KEYWORD (277) 187 188
    RESCUE_KEYWORD (278) 206 207
    RETRY_KEYWORD (279)
    RETURN_KEYWORD (280) 185 186
    SELF_KEYWORD (281)
    SUPER_KEYWORD (282)
    THEN_KEYWORD (283) 158 160 162 164 167 169 174 176 192 194
    TRUE_KEYWORD (284) 8
    UNDEF_KEYWORD (285)
    UNLESS_KEYWORD (286) 167 168 169 170 171 172
    UNTIL_KEYWORD (287) 182 183 184
    WHEN_KEYWORD (288) 191 192
    WHILE_KEYWORD (289) 177 178 179
    YIELD_KEYWORD (290)
    OR_KEYWORD (291) 27 75
    AND_KEYWORD (292) 26 74
    NOT_KEYWORD (293) 28 76
    ADD_ASSIGN_OP (294) 38 86
    SUB_ASSIGN_OP (295) 39 87
    MUL_ASSIGN_OP (296) 40 88
    DIV_ASSIGN_OP (297) 41 89
    MOD_ASSIGN_OP (298) 42 90
    POW_ASSIGN_OP (299) 43 91
    QUESTION_SYMBOL (300) 23 60 71 108 139 141
    COLON_SYMBOL (301) 60 108
    EXCLUSIVE_RANGE_OP (302) 54 102
    INCLUSIVE_RANGE_OP (303) 53 101
    LOGICAL_OR_OP (304) 51 99
    LOGICAL_AND_OP (305) 50 98
    EQL_OP (306) 30 78
    NOT_EQL_OP (307) 31 79
    COMB_COMPRASION_OP (308) 36 84
    CASE_EQL_OP (309) 37 85
    GREATER_OP (310) 32 80
    LESS_OP (311) 33 81
    GREATER_OR_EQL_OP (312) 34 82
    LESS_OR_EQL_OP (313) 35 83
    BIN_OR_OP (314) 45 93
    BIN_XOR_OP (315) 46 94
    BIN_AND_OP (316) 44 92
    BIN_LEFT_SHIFT_OP (317) 48 96
    BIN_RIGHT_SHIFT_OP (318) 49 97
    UMINUS (319)
    LOGICAL_NOT_OP (320) 24 52 72 100 142 143
    BIN_ONES_COMPLEMENT_OP (321) 47 95
    ARITHMETIC_POW_OP (322) 29 77
    DOUBLE_COLON_SYMBOL (323) 58 59 106 107
    NEW_LINE_SYMBOL (324) 62 69 70 71 72 73 76 103 104 108 109 115 117 166 172
    COMMA_SYMBOL (325) 121 135
    SEMICOLON_SYMBOL (326) 116 117
    STRING (327) 7
    INTEGER_NUMBER (328) 11
    FLOAT_NUMBER (329) 12
    IDENTIFIER (330) 3 21 22 23 24 25 69 70 71 72 73 134 135 138 139 140 141 142 143 144 145 195
    OBJECT_VAR_NAME (331) 4 150 151
    CLASS_VAR_NAME (332) 5 148 149
    CONSTANT_NAME (333) 6 146 196


Nonterminals, with rules where they appear

    $accept (92)
        on left: 0
    programm (93)
        on left: 1 2
        on right: 0
    expr (94)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
        on right: 13 14 15 16 17 18 19 20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 58 59 60 61 62 63 64 65 66 67 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 101 102 103 107 108 109 120 121 124 149 151 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 187 188 189 190 197
    linefeed_expr (95)
        on left: 109
        on right: 61 62 63 64 65 66 67 68 74 75 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 105 106 107 108
    programm_element (96)
        on left: 110 111 112
        on right: 113 114
    programm_el_list_not_empty (97)
        on left: 113 114
        on right: 2 114
    delimiter (98)
        on left: 115 116 117
        on right: 124 125 126 127 128 129 130 131 132 133 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 157 159 161 163 168 170 173 175 178 179 181 182 191 193 196 197 198 199 200 201 206 207
    expr_list (99)
        on left: 118 119
        on right: 21 56 69 104
    expr_list_not_empty (100)
        on left: 120 121
        on right: 119 121 191 192 193 194
    stmt_list (101)
        on left: 122 123
        on right: 123 138 139 140 141 142 143 144 145 206 207
    stmt (102)
        on left: 124 125 126 127 128 129 130 131 132 133
        on right: 122 123 157 158 159 160 161 162 163 164 167 168 169 170 173 174 175 176 177 178 179 180 181 182 183 190 191 192 193 194
    param_list_not_empty (103)
        on left: 134 135
        on right: 135 137
    param_list (104)
        on left: 136 137
        on right: 138 139 142 144
    method_stmt (105)
        on left: 138 139 140 141 142 143 144 145
        on right: 111 147 198
    class_stmt (106)
        on left: 146
        on right: 110 152 200
    class_body_stmt (107)
        on left: 147 148 149 150 151 152
        on right: 153 154
    class_body_not_empty (108)
        on left: 153 154
        on right: 154 156
    class_body (109)
        on left: 155 156
        on right: 146
    if_stmt (110)
        on left: 157 158 159 160 161 162 163 164 165 166
        on right: 125
    unless_stmt (111)
        on left: 167 168 169 170 171 172
        on right: 130
    elsif_list (112)
        on left: 173 174 175 176
        on right: 161 162 163 164 175 176
    while_stmt (113)
        on left: 177 178 179
        on right: 126
    for_stmt (114)
        on left: 180 181
        on right: 127
    until_stmt (115)
        on left: 182 183 184
        on right: 128
    return_stmt (116)
        on left: 185 186
        on right: 131
    redo_stmt (117)
        on left: 187 188
        on right: 179
    case_stmt (118)
        on left: 189 190
        on right: 129
    when_list (119)
        on left: 191 192 193 194
        on right: 189 190 193 194
    alias_stmt (120)
        on left: 195
        on right: 132 199
    module_stmt (121)
        on left: 196
        on right: 112 201
    module_body_stmt (122)
        on left: 197 198 199 200 201
        on right: 202 203
    module_body_not_empty (123)
        on left: 202 203
        on right: 203 205
    module_body (124)
        on left: 204 205
        on right: 196
    begin_rescue_stmt (125)
        on left: 206 207
        on right: 133


State 0

    0 $accept: . programm $end

    CLASS_KEYWORD   shift, and go to state 1
    DEF_KEYWORD     shift, and go to state 2
    MODULE_KEYWORD  shift, and go to state 3

    $default  reduce using rule 1 (programm)

    programm                    go to state 4
    programm_element            go to state 5
    programm_el_list_not_empty  go to state 6
    method_stmt                 go to state 7
    class_stmt                  go to state 8
    module_stmt                 go to state 9


State 1

  146 class_stmt: CLASS_KEYWORD . CONSTANT_NAME delimiter class_body END_KEYWORD

    CONSTANT_NAME  shift, and go to state 10


State 2

  138 method_stmt: DEF_KEYWORD . IDENTIFIER '(' param_list ')' delimiter stmt_list END_KEYWORD
  139            | DEF_KEYWORD . IDENTIFIER QUESTION_SYMBOL '(' param_list ')' delimiter stmt_list END_KEYWORD
  140            | DEF_KEYWORD . IDENTIFIER delimiter stmt_list END_KEYWORD
  141            | DEF_KEYWORD . IDENTIFIER QUESTION_SYMBOL delimiter stmt_list END_KEYWORD
  142            | DEF_KEYWORD . IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' delimiter stmt_list END_KEYWORD
  143            | DEF_KEYWORD . IDENTIFIER LOGICAL_NOT_OP delimiter stmt_list END_KEYWORD
  144            | DEF_KEYWORD . IDENTIFIER '=' '(' param_list ')' delimiter stmt_list END_KEYWORD
  145            | DEF_KEYWORD . IDENTIFIER '=' delimiter stmt_list END_KEYWORD

    IDENTIFIER  shift, and go to state 11


State 3

  196 module_stmt: MODULE_KEYWORD . CONSTANT_NAME delimiter module_body END_KEYWORD

    CONSTANT_NAME  shift, and go to state 12


State 4

    0 $accept: programm . $end

    $end  shift, and go to state 13


State 5

  113 programm_el_list_not_empty: programm_element .

    $default  reduce using rule 113 (programm_el_list_not_empty)


State 6

    2 programm: programm_el_list_not_empty .
  114 programm_el_list_not_empty: programm_el_list_not_empty . programm_element

    CLASS_KEYWORD   shift, and go to state 1
    DEF_KEYWORD     shift, and go to state 2
    MODULE_KEYWORD  shift, and go to state 3

    $default  reduce using rule 2 (programm)

    programm_element  go to state 14
    method_stmt       go to state 7
    class_stmt        go to state 8
    module_stmt       go to state 9


State 7

  111 programm_element: method_stmt .

    $default  reduce using rule 111 (programm_element)


State 8

  110 programm_element: class_stmt .

    $default  reduce using rule 110 (programm_element)


State 9

  112 programm_element: module_stmt .

    $default  reduce using rule 112 (programm_element)


State 10

  146 class_stmt: CLASS_KEYWORD CONSTANT_NAME . delimiter class_body END_KEYWORD

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 17


State 11

  138 method_stmt: DEF_KEYWORD IDENTIFIER . '(' param_list ')' delimiter stmt_list END_KEYWORD
  139            | DEF_KEYWORD IDENTIFIER . QUESTION_SYMBOL '(' param_list ')' delimiter stmt_list END_KEYWORD
  140            | DEF_KEYWORD IDENTIFIER . delimiter stmt_list END_KEYWORD
  141            | DEF_KEYWORD IDENTIFIER . QUESTION_SYMBOL delimiter stmt_list END_KEYWORD
  142            | DEF_KEYWORD IDENTIFIER . LOGICAL_NOT_OP '(' param_list ')' delimiter stmt_list END_KEYWORD
  143            | DEF_KEYWORD IDENTIFIER . LOGICAL_NOT_OP delimiter stmt_list END_KEYWORD
  144            | DEF_KEYWORD IDENTIFIER . '=' '(' param_list ')' delimiter stmt_list END_KEYWORD
  145            | DEF_KEYWORD IDENTIFIER . '=' delimiter stmt_list END_KEYWORD

    '='               shift, and go to state 18
    QUESTION_SYMBOL   shift, and go to state 19
    LOGICAL_NOT_OP    shift, and go to state 20
    '('               shift, and go to state 21
    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 22


State 12

  196 module_stmt: MODULE_KEYWORD CONSTANT_NAME . delimiter module_body END_KEYWORD

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 23


State 13

    0 $accept: programm $end .

    $default  accept


State 14

  114 programm_el_list_not_empty: programm_el_list_not_empty programm_element .

    $default  reduce using rule 114 (programm_el_list_not_empty)


State 15

  115 delimiter: NEW_LINE_SYMBOL .

    $default  reduce using rule 115 (delimiter)


State 16

  116 delimiter: SEMICOLON_SYMBOL .
  117          | SEMICOLON_SYMBOL . NEW_LINE_SYMBOL

    NEW_LINE_SYMBOL  shift, and go to state 24

    $default  reduce using rule 116 (delimiter)


State 17

  146 class_stmt: CLASS_KEYWORD CONSTANT_NAME delimiter . class_body END_KEYWORD

    CLASS_KEYWORD    shift, and go to state 1
    DEF_KEYWORD      shift, and go to state 2
    OBJECT_VAR_NAME  shift, and go to state 25
    CLASS_VAR_NAME   shift, and go to state 26

    $default  reduce using rule 155 (class_body)

    method_stmt           go to state 27
    class_stmt            go to state 28
    class_body_stmt       go to state 29
    class_body_not_empty  go to state 30
    class_body            go to state 31


State 18

  144 method_stmt: DEF_KEYWORD IDENTIFIER '=' . '(' param_list ')' delimiter stmt_list END_KEYWORD
  145            | DEF_KEYWORD IDENTIFIER '=' . delimiter stmt_list END_KEYWORD

    '('               shift, and go to state 32
    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 33


State 19

  139 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL . '(' param_list ')' delimiter stmt_list END_KEYWORD
  141            | DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL . delimiter stmt_list END_KEYWORD

    '('               shift, and go to state 34
    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 35


State 20

  142 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP . '(' param_list ')' delimiter stmt_list END_KEYWORD
  143            | DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP . delimiter stmt_list END_KEYWORD

    '('               shift, and go to state 36
    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 37


State 21

  138 method_stmt: DEF_KEYWORD IDENTIFIER '(' . param_list ')' delimiter stmt_list END_KEYWORD

    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 136 (param_list)

    param_list_not_empty  go to state 39
    param_list            go to state 40


State 22

  140 method_stmt: DEF_KEYWORD IDENTIFIER delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 68
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 23

  196 module_stmt: MODULE_KEYWORD CONSTANT_NAME delimiter . module_body END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    CLASS_KEYWORD        shift, and go to state 1
    DEF_KEYWORD          shift, and go to state 2
    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    MODULE_KEYWORD       shift, and go to state 3
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 204 (module_body)

    expr                   go to state 79
    method_stmt            go to state 80
    class_stmt             go to state 81
    alias_stmt             go to state 82
    module_stmt            go to state 83
    module_body_stmt       go to state 84
    module_body_not_empty  go to state 85
    module_body            go to state 86


State 24

  117 delimiter: SEMICOLON_SYMBOL NEW_LINE_SYMBOL .

    $default  reduce using rule 117 (delimiter)


State 25

  150 class_body_stmt: OBJECT_VAR_NAME . delimiter
  151                | OBJECT_VAR_NAME . '=' expr delimiter

    '='               shift, and go to state 87
    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 88


State 26

  148 class_body_stmt: CLASS_VAR_NAME . delimiter
  149                | CLASS_VAR_NAME . '=' expr delimiter

    '='               shift, and go to state 89
    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 90


State 27

  147 class_body_stmt: method_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 91


State 28

  152 class_body_stmt: class_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 92


State 29

  153 class_body_not_empty: class_body_stmt .

    $default  reduce using rule 153 (class_body_not_empty)


State 30

  154 class_body_not_empty: class_body_not_empty . class_body_stmt
  156 class_body: class_body_not_empty .

    CLASS_KEYWORD    shift, and go to state 1
    DEF_KEYWORD      shift, and go to state 2
    OBJECT_VAR_NAME  shift, and go to state 25
    CLASS_VAR_NAME   shift, and go to state 26

    $default  reduce using rule 156 (class_body)

    method_stmt      go to state 27
    class_stmt       go to state 28
    class_body_stmt  go to state 93


State 31

  146 class_stmt: CLASS_KEYWORD CONSTANT_NAME delimiter class_body . END_KEYWORD

    END_KEYWORD  shift, and go to state 94


State 32

  144 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' . param_list ')' delimiter stmt_list END_KEYWORD

    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 136 (param_list)

    param_list_not_empty  go to state 39
    param_list            go to state 95


State 33

  145 method_stmt: DEF_KEYWORD IDENTIFIER '=' delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 96
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 34

  139 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' . param_list ')' delimiter stmt_list END_KEYWORD

    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 136 (param_list)

    param_list_not_empty  go to state 39
    param_list            go to state 97


State 35

  141 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 98
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 36

  142 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' . param_list ')' delimiter stmt_list END_KEYWORD

    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 136 (param_list)

    param_list_not_empty  go to state 39
    param_list            go to state 99


State 37

  143 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 100
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 38

  134 param_list_not_empty: IDENTIFIER .

    $default  reduce using rule 134 (param_list_not_empty)


State 39

  135 param_list_not_empty: param_list_not_empty . COMMA_SYMBOL IDENTIFIER
  137 param_list: param_list_not_empty .

    COMMA_SYMBOL  shift, and go to state 101

    $default  reduce using rule 137 (param_list)


State 40

  138 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list . ')' delimiter stmt_list END_KEYWORD

    ')'  shift, and go to state 102


State 41

  195 alias_stmt: ALIAS_KEYWORD . IDENTIFIER IDENTIFIER

    IDENTIFIER  shift, and go to state 103


State 42

  206 begin_rescue_stmt: BEGIN_KEYWORD . delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list END_KEYWORD
  207                  | BEGIN_KEYWORD . delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 104


State 43

  189 case_stmt: CASE_KEYWORD . expr when_list END_KEYWORD
  190          | CASE_KEYWORD . expr when_list ELSE_KEYWORD stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 105


State 44

   57 expr: DEFINED_KEYWORD . expr
  105     | DEFINED_KEYWORD . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 107
    linefeed_expr  go to state 108


State 45

  157 if_stmt: IF_KEYWORD . expr delimiter stmt END_KEYWORD
  158        | IF_KEYWORD . expr THEN_KEYWORD stmt END_KEYWORD
  159        | IF_KEYWORD . expr delimiter stmt ELSE_KEYWORD stmt END_KEYWORD
  160        | IF_KEYWORD . expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  161        | IF_KEYWORD . expr delimiter stmt elsif_list stmt END_KEYWORD
  162        | IF_KEYWORD . expr THEN_KEYWORD stmt elsif_list stmt END_KEYWORD
  163        | IF_KEYWORD . expr delimiter stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD
  164        | IF_KEYWORD . expr THEN_KEYWORD stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 109


State 46

    9 expr: FALSE_KEYWORD .

    $default  reduce using rule 9 (expr)


State 47

  180 for_stmt: FOR_KEYWORD . expr IN_KEYWORD expr DO_KEYWORD stmt END_KEYWORD
  181         | FOR_KEYWORD . expr IN_KEYWORD expr delimiter stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 110


State 48

   10 expr: NIL_KEYWORD .

    $default  reduce using rule 10 (expr)


State 49

  185 return_stmt: RETURN_KEYWORD . expr
  186            | RETURN_KEYWORD .

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 186 (return_stmt)

    expr  go to state 111


State 50

    8 expr: TRUE_KEYWORD .

    $default  reduce using rule 8 (expr)


State 51

  167 unless_stmt: UNLESS_KEYWORD . expr THEN_KEYWORD stmt END_KEYWORD
  168            | UNLESS_KEYWORD . expr delimiter stmt END_KEYWORD
  169            | UNLESS_KEYWORD . expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  170            | UNLESS_KEYWORD . expr delimiter stmt ELSE_KEYWORD stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 112


State 52

  182 until_stmt: UNTIL_KEYWORD . expr delimiter stmt END_KEYWORD
  183           | UNTIL_KEYWORD . expr DO_KEYWORD stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 113


State 53

  177 while_stmt: WHILE_KEYWORD . expr DO_KEYWORD stmt END_KEYWORD
  178           | WHILE_KEYWORD . expr delimiter stmt END_KEYWORD
  179           | WHILE_KEYWORD . expr delimiter stmt redo_stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 114


State 54

   28 expr: NOT_KEYWORD . '(' expr ')'
   76     | NOT_KEYWORD . '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')'

    '('  shift, and go to state 115


State 55

   20 expr: '-' . expr
   68     | '-' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 116
    linefeed_expr  go to state 117


State 56

   52 expr: LOGICAL_NOT_OP . expr
  100     | LOGICAL_NOT_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 118
    linefeed_expr  go to state 119


State 57

   55 expr: '(' . expr ')'
  103     | '(' . NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 120
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 121


State 58

   56 expr: '[' . expr_list ']'
  104     | '[' . NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ']'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 122
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 118 (expr_list)

    expr                 go to state 123
    expr_list            go to state 124
    expr_list_not_empty  go to state 125


State 59

   58 expr: DOUBLE_COLON_SYMBOL . expr
  106     | DOUBLE_COLON_SYMBOL . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 126
    linefeed_expr  go to state 127


State 60

    7 expr: STRING .

    $default  reduce using rule 7 (expr)


State 61

   11 expr: INTEGER_NUMBER .

    $default  reduce using rule 11 (expr)


State 62

   12 expr: FLOAT_NUMBER .

    $default  reduce using rule 12 (expr)


State 63

    3 expr: IDENTIFIER .
   21     | IDENTIFIER . '(' expr_list ')'
   69     | IDENTIFIER . '(' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ')'

    '('  shift, and go to state 128

    $default  reduce using rule 3 (expr)


State 64

    4 expr: OBJECT_VAR_NAME .

    $default  reduce using rule 4 (expr)


State 65

    5 expr: CLASS_VAR_NAME .

    $default  reduce using rule 5 (expr)


State 66

    6 expr: CONSTANT_NAME .

    $default  reduce using rule 6 (expr)


State 67

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  124 stmt: expr . delimiter
  165 if_stmt: expr . IF_KEYWORD expr
  166        | expr . IF_KEYWORD NEW_LINE_SYMBOL expr
  171 unless_stmt: expr . UNLESS_KEYWORD expr
  172            | expr . UNLESS_KEYWORD NEW_LINE_SYMBOL expr
  184 until_stmt: expr . UNTIL_KEYWORD expr

    IF_KEYWORD              shift, and go to state 129
    UNLESS_KEYWORD          shift, and go to state 130
    UNTIL_KEYWORD           shift, and go to state 131
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 15
    SEMICOLON_SYMBOL        shift, and go to state 16

    delimiter  go to state 169


State 68

  123 stmt_list: stmt_list . stmt
  140 method_stmt: DEF_KEYWORD IDENTIFIER delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 170
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 69

  122 stmt_list: stmt .

    $default  reduce using rule 122 (stmt_list)


State 70

  125 stmt: if_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 172


State 71

  130 stmt: unless_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 173


State 72

  126 stmt: while_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 174


State 73

  127 stmt: for_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 175


State 74

  128 stmt: until_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 176


State 75

  131 stmt: return_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 177


State 76

  129 stmt: case_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 178


State 77

  132 stmt: alias_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 179


State 78

  133 stmt: begin_rescue_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 180


State 79

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  197 module_body_stmt: expr . delimiter

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 15
    SEMICOLON_SYMBOL        shift, and go to state 16

    delimiter  go to state 181


State 80

  198 module_body_stmt: method_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 182


State 81

  200 module_body_stmt: class_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 183


State 82

  199 module_body_stmt: alias_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 184


State 83

  201 module_body_stmt: module_stmt . delimiter

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 185


State 84

  202 module_body_not_empty: module_body_stmt .

    $default  reduce using rule 202 (module_body_not_empty)


State 85

  203 module_body_not_empty: module_body_not_empty . module_body_stmt
  205 module_body: module_body_not_empty .

    ALIAS_KEYWORD        shift, and go to state 41
    CLASS_KEYWORD        shift, and go to state 1
    DEF_KEYWORD          shift, and go to state 2
    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    MODULE_KEYWORD       shift, and go to state 3
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 205 (module_body)

    expr              go to state 79
    method_stmt       go to state 80
    class_stmt        go to state 81
    alias_stmt        go to state 82
    module_stmt       go to state 83
    module_body_stmt  go to state 186


State 86

  196 module_stmt: MODULE_KEYWORD CONSTANT_NAME delimiter module_body . END_KEYWORD

    END_KEYWORD  shift, and go to state 187


State 87

  151 class_body_stmt: OBJECT_VAR_NAME '=' . expr delimiter

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 188


State 88

  150 class_body_stmt: OBJECT_VAR_NAME delimiter .

    $default  reduce using rule 150 (class_body_stmt)


State 89

  149 class_body_stmt: CLASS_VAR_NAME '=' . expr delimiter

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 189


State 90

  148 class_body_stmt: CLASS_VAR_NAME delimiter .

    $default  reduce using rule 148 (class_body_stmt)


State 91

  147 class_body_stmt: method_stmt delimiter .

    $default  reduce using rule 147 (class_body_stmt)


State 92

  152 class_body_stmt: class_stmt delimiter .

    $default  reduce using rule 152 (class_body_stmt)


State 93

  154 class_body_not_empty: class_body_not_empty class_body_stmt .

    $default  reduce using rule 154 (class_body_not_empty)


State 94

  146 class_stmt: CLASS_KEYWORD CONSTANT_NAME delimiter class_body END_KEYWORD .

    $default  reduce using rule 146 (class_stmt)


State 95

  144 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' param_list . ')' delimiter stmt_list END_KEYWORD

    ')'  shift, and go to state 190


State 96

  123 stmt_list: stmt_list . stmt
  145 method_stmt: DEF_KEYWORD IDENTIFIER '=' delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 191
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 97

  139 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list . ')' delimiter stmt_list END_KEYWORD

    ')'  shift, and go to state 192


State 98

  123 stmt_list: stmt_list . stmt
  141 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 193
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 99

  142 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list . ')' delimiter stmt_list END_KEYWORD

    ')'  shift, and go to state 194


State 100

  123 stmt_list: stmt_list . stmt
  143 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 195
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 101

  135 param_list_not_empty: param_list_not_empty COMMA_SYMBOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 196


State 102

  138 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list ')' . delimiter stmt_list END_KEYWORD

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 197


State 103

  195 alias_stmt: ALIAS_KEYWORD IDENTIFIER . IDENTIFIER

    IDENTIFIER  shift, and go to state 198


State 104

  206 begin_rescue_stmt: BEGIN_KEYWORD delimiter . stmt_list RESCUE_KEYWORD delimiter stmt_list END_KEYWORD
  207                  | BEGIN_KEYWORD delimiter . stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 199
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 105

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  189 case_stmt: CASE_KEYWORD expr . when_list END_KEYWORD
  190          | CASE_KEYWORD expr . when_list ELSE_KEYWORD stmt END_KEYWORD

    WHEN_KEYWORD            shift, and go to state 200
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    when_list  go to state 201


State 106

  109 linefeed_expr: NEW_LINE_SYMBOL . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 202


State 107

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   57     | DEFINED_KEYWORD expr .
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 57 (expr)


State 108

  105 expr: DEFINED_KEYWORD linefeed_expr .

    $default  reduce using rule 105 (expr)


State 109

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  157 if_stmt: IF_KEYWORD expr . delimiter stmt END_KEYWORD
  158        | IF_KEYWORD expr . THEN_KEYWORD stmt END_KEYWORD
  159        | IF_KEYWORD expr . delimiter stmt ELSE_KEYWORD stmt END_KEYWORD
  160        | IF_KEYWORD expr . THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  161        | IF_KEYWORD expr . delimiter stmt elsif_list stmt END_KEYWORD
  162        | IF_KEYWORD expr . THEN_KEYWORD stmt elsif_list stmt END_KEYWORD
  163        | IF_KEYWORD expr . delimiter stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD
  164        | IF_KEYWORD expr . THEN_KEYWORD stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD

    THEN_KEYWORD            shift, and go to state 203
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 15
    SEMICOLON_SYMBOL        shift, and go to state 16

    delimiter  go to state 204


State 110

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  180 for_stmt: FOR_KEYWORD expr . IN_KEYWORD expr DO_KEYWORD stmt END_KEYWORD
  181         | FOR_KEYWORD expr . IN_KEYWORD expr delimiter stmt END_KEYWORD

    IN_KEYWORD              shift, and go to state 205
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 111

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  185 return_stmt: RETURN_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 185 (return_stmt)


State 112

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  167 unless_stmt: UNLESS_KEYWORD expr . THEN_KEYWORD stmt END_KEYWORD
  168            | UNLESS_KEYWORD expr . delimiter stmt END_KEYWORD
  169            | UNLESS_KEYWORD expr . THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD
  170            | UNLESS_KEYWORD expr . delimiter stmt ELSE_KEYWORD stmt END_KEYWORD

    THEN_KEYWORD            shift, and go to state 206
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 15
    SEMICOLON_SYMBOL        shift, and go to state 16

    delimiter  go to state 207


State 113

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  182 until_stmt: UNTIL_KEYWORD expr . delimiter stmt END_KEYWORD
  183           | UNTIL_KEYWORD expr . DO_KEYWORD stmt END_KEYWORD

    DO_KEYWORD              shift, and go to state 208
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 15
    SEMICOLON_SYMBOL        shift, and go to state 16

    delimiter  go to state 209


State 114

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  177 while_stmt: WHILE_KEYWORD expr . DO_KEYWORD stmt END_KEYWORD
  178           | WHILE_KEYWORD expr . delimiter stmt END_KEYWORD
  179           | WHILE_KEYWORD expr . delimiter stmt redo_stmt END_KEYWORD

    DO_KEYWORD              shift, and go to state 210
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 15
    SEMICOLON_SYMBOL        shift, and go to state 16

    delimiter  go to state 211


State 115

   28 expr: NOT_KEYWORD '(' . expr ')'
   76     | NOT_KEYWORD '(' . NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 212
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 213


State 116

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   20     | '-' expr .
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 20 (expr)


State 117

   68 expr: '-' linefeed_expr .

    $default  reduce using rule 68 (expr)


State 118

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   52     | LOGICAL_NOT_OP expr .
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 52 (expr)


State 119

  100 expr: LOGICAL_NOT_OP linefeed_expr .

    $default  reduce using rule 100 (expr)


State 120

  103 expr: '(' NEW_LINE_SYMBOL . expr NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 214


State 121

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   55     | '(' expr . ')'
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    ')'                     shift, and go to state 215
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 122

  104 expr: '[' NEW_LINE_SYMBOL . expr_list NEW_LINE_SYMBOL ']'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 118 (expr_list)

    expr                 go to state 123
    expr_list            go to state 216
    expr_list_not_empty  go to state 125


State 123

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  120 expr_list_not_empty: expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 120 (expr_list_not_empty)


State 124

   56 expr: '[' expr_list . ']'

    ']'  shift, and go to state 217


State 125

  119 expr_list: expr_list_not_empty .
  121 expr_list_not_empty: expr_list_not_empty . COMMA_SYMBOL expr

    COMMA_SYMBOL  shift, and go to state 218

    $default  reduce using rule 119 (expr_list)


State 126

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   58     | DOUBLE_COLON_SYMBOL expr .
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    $default  reduce using rule 58 (expr)


State 127

  106 expr: DOUBLE_COLON_SYMBOL linefeed_expr .

    $default  reduce using rule 106 (expr)


State 128

   21 expr: IDENTIFIER '(' . expr_list ')'
   69     | IDENTIFIER '(' . NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 219
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 118 (expr_list)

    expr                 go to state 123
    expr_list            go to state 220
    expr_list_not_empty  go to state 125


State 129

  165 if_stmt: expr IF_KEYWORD . expr
  166        | expr IF_KEYWORD . NEW_LINE_SYMBOL expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 221
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 222


State 130

  171 unless_stmt: expr UNLESS_KEYWORD . expr
  172            | expr UNLESS_KEYWORD . NEW_LINE_SYMBOL expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 223
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 224


State 131

  184 until_stmt: expr UNTIL_KEYWORD . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 225


State 132

   27 expr: expr OR_KEYWORD . expr
   75     | expr OR_KEYWORD . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 226
    linefeed_expr  go to state 227


State 133

   26 expr: expr AND_KEYWORD . expr
   74     | expr AND_KEYWORD . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 228
    linefeed_expr  go to state 229


State 134

   13 expr: expr '=' . expr
   61     | expr '=' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 230
    linefeed_expr  go to state 231


State 135

   38 expr: expr ADD_ASSIGN_OP . expr
   86     | expr ADD_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 232
    linefeed_expr  go to state 233


State 136

   39 expr: expr SUB_ASSIGN_OP . expr
   87     | expr SUB_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 234
    linefeed_expr  go to state 235


State 137

   40 expr: expr MUL_ASSIGN_OP . expr
   88     | expr MUL_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 236
    linefeed_expr  go to state 237


State 138

   41 expr: expr DIV_ASSIGN_OP . expr
   89     | expr DIV_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 238
    linefeed_expr  go to state 239


State 139

   42 expr: expr MOD_ASSIGN_OP . expr
   90     | expr MOD_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 240
    linefeed_expr  go to state 241


State 140

   43 expr: expr POW_ASSIGN_OP . expr
   91     | expr POW_ASSIGN_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 242
    linefeed_expr  go to state 243


State 141

   60 expr: expr QUESTION_SYMBOL . expr COLON_SYMBOL expr
  108     | expr QUESTION_SYMBOL . linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 244
    linefeed_expr  go to state 245


State 142

   54 expr: expr EXCLUSIVE_RANGE_OP . expr
  102     | expr EXCLUSIVE_RANGE_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 246
    linefeed_expr  go to state 247


State 143

   53 expr: expr INCLUSIVE_RANGE_OP . expr
  101     | expr INCLUSIVE_RANGE_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 248
    linefeed_expr  go to state 249


State 144

   51 expr: expr LOGICAL_OR_OP . expr
   99     | expr LOGICAL_OR_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 250
    linefeed_expr  go to state 251


State 145

   50 expr: expr LOGICAL_AND_OP . expr
   98     | expr LOGICAL_AND_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 252
    linefeed_expr  go to state 253


State 146

   30 expr: expr EQL_OP . expr
   78     | expr EQL_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 254
    linefeed_expr  go to state 255


State 147

   31 expr: expr NOT_EQL_OP . expr
   79     | expr NOT_EQL_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 256
    linefeed_expr  go to state 257


State 148

   36 expr: expr COMB_COMPRASION_OP . expr
   84     | expr COMB_COMPRASION_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 258
    linefeed_expr  go to state 259


State 149

   37 expr: expr CASE_EQL_OP . expr
   85     | expr CASE_EQL_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 260
    linefeed_expr  go to state 261


State 150

   32 expr: expr GREATER_OP . expr
   80     | expr GREATER_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 262
    linefeed_expr  go to state 263


State 151

   33 expr: expr LESS_OP . expr
   81     | expr LESS_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 264
    linefeed_expr  go to state 265


State 152

   34 expr: expr GREATER_OR_EQL_OP . expr
   82     | expr GREATER_OR_EQL_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 266
    linefeed_expr  go to state 267


State 153

   35 expr: expr LESS_OR_EQL_OP . expr
   83     | expr LESS_OR_EQL_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 268
    linefeed_expr  go to state 269


State 154

   45 expr: expr BIN_OR_OP . expr
   93     | expr BIN_OR_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 270
    linefeed_expr  go to state 271


State 155

   46 expr: expr BIN_XOR_OP . expr
   94     | expr BIN_XOR_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 272
    linefeed_expr  go to state 273


State 156

   44 expr: expr BIN_AND_OP . expr
   92     | expr BIN_AND_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 274
    linefeed_expr  go to state 275


State 157

   48 expr: expr BIN_LEFT_SHIFT_OP . expr
   96     | expr BIN_LEFT_SHIFT_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 276
    linefeed_expr  go to state 277


State 158

   49 expr: expr BIN_RIGHT_SHIFT_OP . expr
   97     | expr BIN_RIGHT_SHIFT_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 278
    linefeed_expr  go to state 279


State 159

   18 expr: expr '+' . expr
   66     | expr '+' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 280
    linefeed_expr  go to state 281


State 160

   19 expr: expr '-' . expr
   67     | expr '-' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 282
    linefeed_expr  go to state 283


State 161

   17 expr: expr '*' . expr
   65     | expr '*' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 284
    linefeed_expr  go to state 285


State 162

   15 expr: expr '/' . expr
   63     | expr '/' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 286
    linefeed_expr  go to state 287


State 163

   16 expr: expr '%' . expr
   64     | expr '%' . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 288
    linefeed_expr  go to state 289


State 164

   47 expr: expr BIN_ONES_COMPLEMENT_OP . expr
   95     | expr BIN_ONES_COMPLEMENT_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 290
    linefeed_expr  go to state 291


State 165

   29 expr: expr ARITHMETIC_POW_OP . expr
   77     | expr ARITHMETIC_POW_OP . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 292
    linefeed_expr  go to state 293


State 166

   22 expr: expr '.' . IDENTIFIER
   23     | expr '.' . IDENTIFIER QUESTION_SYMBOL
   24     | expr '.' . IDENTIFIER LOGICAL_NOT_OP
   25     | expr '.' . IDENTIFIER '='
   70     | expr '.' . NEW_LINE_SYMBOL IDENTIFIER
   71     | expr '.' . NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr '.' . NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr '.' . NEW_LINE_SYMBOL IDENTIFIER '='

    NEW_LINE_SYMBOL  shift, and go to state 294
    IDENTIFIER       shift, and go to state 295


State 167

   14 expr: expr '[' . expr ']'
   62     | expr '[' . linefeed_expr NEW_LINE_SYMBOL ']'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 296
    linefeed_expr  go to state 297


State 168

   59 expr: expr DOUBLE_COLON_SYMBOL . expr
  107     | expr DOUBLE_COLON_SYMBOL . linefeed_expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    NEW_LINE_SYMBOL      shift, and go to state 106
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr           go to state 298
    linefeed_expr  go to state 299


State 169

  124 stmt: expr delimiter .

    $default  reduce using rule 124 (stmt)


State 170

  140 method_stmt: DEF_KEYWORD IDENTIFIER delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 140 (method_stmt)


State 171

  123 stmt_list: stmt_list stmt .

    $default  reduce using rule 123 (stmt_list)


State 172

  125 stmt: if_stmt delimiter .

    $default  reduce using rule 125 (stmt)


State 173

  130 stmt: unless_stmt delimiter .

    $default  reduce using rule 130 (stmt)


State 174

  126 stmt: while_stmt delimiter .

    $default  reduce using rule 126 (stmt)


State 175

  127 stmt: for_stmt delimiter .

    $default  reduce using rule 127 (stmt)


State 176

  128 stmt: until_stmt delimiter .

    $default  reduce using rule 128 (stmt)


State 177

  131 stmt: return_stmt delimiter .

    $default  reduce using rule 131 (stmt)


State 178

  129 stmt: case_stmt delimiter .

    $default  reduce using rule 129 (stmt)


State 179

  132 stmt: alias_stmt delimiter .

    $default  reduce using rule 132 (stmt)


State 180

  133 stmt: begin_rescue_stmt delimiter .

    $default  reduce using rule 133 (stmt)


State 181

  197 module_body_stmt: expr delimiter .

    $default  reduce using rule 197 (module_body_stmt)


State 182

  198 module_body_stmt: method_stmt delimiter .

    $default  reduce using rule 198 (module_body_stmt)


State 183

  200 module_body_stmt: class_stmt delimiter .

    $default  reduce using rule 200 (module_body_stmt)


State 184

  199 module_body_stmt: alias_stmt delimiter .

    $default  reduce using rule 199 (module_body_stmt)


State 185

  201 module_body_stmt: module_stmt delimiter .

    $default  reduce using rule 201 (module_body_stmt)


State 186

  203 module_body_not_empty: module_body_not_empty module_body_stmt .

    $default  reduce using rule 203 (module_body_not_empty)


State 187

  196 module_stmt: MODULE_KEYWORD CONSTANT_NAME delimiter module_body END_KEYWORD .

    $default  reduce using rule 196 (module_stmt)


State 188

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  151 class_body_stmt: OBJECT_VAR_NAME '=' expr . delimiter

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 15
    SEMICOLON_SYMBOL        shift, and go to state 16

    delimiter  go to state 300


State 189

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  149 class_body_stmt: CLASS_VAR_NAME '=' expr . delimiter

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 15
    SEMICOLON_SYMBOL        shift, and go to state 16

    delimiter  go to state 301


State 190

  144 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' param_list ')' . delimiter stmt_list END_KEYWORD

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 302


State 191

  145 method_stmt: DEF_KEYWORD IDENTIFIER '=' delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 145 (method_stmt)


State 192

  139 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list ')' . delimiter stmt_list END_KEYWORD

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 303


State 193

  141 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 141 (method_stmt)


State 194

  142 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' . delimiter stmt_list END_KEYWORD

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 304


State 195

  143 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 143 (method_stmt)


State 196

  135 param_list_not_empty: param_list_not_empty COMMA_SYMBOL IDENTIFIER .

    $default  reduce using rule 135 (param_list_not_empty)


State 197

  138 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list ')' delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 305
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 198

  195 alias_stmt: ALIAS_KEYWORD IDENTIFIER IDENTIFIER .

    $default  reduce using rule 195 (alias_stmt)


State 199

  123 stmt_list: stmt_list . stmt
  206 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list . RESCUE_KEYWORD delimiter stmt_list END_KEYWORD
  207                  | BEGIN_KEYWORD delimiter stmt_list . RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RESCUE_KEYWORD       shift, and go to state 306
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 200

  191 when_list: WHEN_KEYWORD . expr_list_not_empty delimiter stmt
  192          | WHEN_KEYWORD . expr_list_not_empty THEN_KEYWORD stmt

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr                 go to state 123
    expr_list_not_empty  go to state 307


State 201

  189 case_stmt: CASE_KEYWORD expr when_list . END_KEYWORD
  190          | CASE_KEYWORD expr when_list . ELSE_KEYWORD stmt END_KEYWORD
  193 when_list: when_list . expr_list_not_empty delimiter stmt
  194          | when_list . expr_list_not_empty THEN_KEYWORD stmt

    DEFINED_KEYWORD      shift, and go to state 44
    ELSE_KEYWORD         shift, and go to state 308
    END_KEYWORD          shift, and go to state 309
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr                 go to state 123
    expr_list_not_empty  go to state 310


State 202

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  109 linefeed_expr: NEW_LINE_SYMBOL expr .

    $default  reduce using rule 109 (linefeed_expr)


State 203

  158 if_stmt: IF_KEYWORD expr THEN_KEYWORD . stmt END_KEYWORD
  160        | IF_KEYWORD expr THEN_KEYWORD . stmt ELSE_KEYWORD stmt END_KEYWORD
  162        | IF_KEYWORD expr THEN_KEYWORD . stmt elsif_list stmt END_KEYWORD
  164        | IF_KEYWORD expr THEN_KEYWORD . stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 311
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 204

  157 if_stmt: IF_KEYWORD expr delimiter . stmt END_KEYWORD
  159        | IF_KEYWORD expr delimiter . stmt ELSE_KEYWORD stmt END_KEYWORD
  161        | IF_KEYWORD expr delimiter . stmt elsif_list stmt END_KEYWORD
  163        | IF_KEYWORD expr delimiter . stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 312
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 205

  180 for_stmt: FOR_KEYWORD expr IN_KEYWORD . expr DO_KEYWORD stmt END_KEYWORD
  181         | FOR_KEYWORD expr IN_KEYWORD . expr delimiter stmt END_KEYWORD

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 313


State 206

  167 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD . stmt END_KEYWORD
  169            | UNLESS_KEYWORD expr THEN_KEYWORD . stmt ELSE_KEYWORD stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 314
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 207

  168 unless_stmt: UNLESS_KEYWORD expr delimiter . stmt END_KEYWORD
  170            | UNLESS_KEYWORD expr delimiter . stmt ELSE_KEYWORD stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 315
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 208

  183 until_stmt: UNTIL_KEYWORD expr DO_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 316
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 209

  182 until_stmt: UNTIL_KEYWORD expr delimiter . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 317
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 210

  177 while_stmt: WHILE_KEYWORD expr DO_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 318
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 211

  178 while_stmt: WHILE_KEYWORD expr delimiter . stmt END_KEYWORD
  179           | WHILE_KEYWORD expr delimiter . stmt redo_stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 319
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 212

   76 expr: NOT_KEYWORD '(' NEW_LINE_SYMBOL . expr NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 320


State 213

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   28     | NOT_KEYWORD '(' expr . ')'
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    ')'                     shift, and go to state 321
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 214

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  103     | '(' NEW_LINE_SYMBOL expr . NEW_LINE_SYMBOL ')'
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 322


State 215

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


State 216

  104 expr: '[' NEW_LINE_SYMBOL expr_list . NEW_LINE_SYMBOL ']'

    NEW_LINE_SYMBOL  shift, and go to state 323


State 217

   56 expr: '[' expr_list ']' .

    $default  reduce using rule 56 (expr)


State 218

  121 expr_list_not_empty: expr_list_not_empty COMMA_SYMBOL . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 324


State 219

   69 expr: IDENTIFIER '(' NEW_LINE_SYMBOL . expr_list NEW_LINE_SYMBOL ')'

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    $default  reduce using rule 118 (expr_list)

    expr                 go to state 123
    expr_list            go to state 325
    expr_list_not_empty  go to state 125


State 220

   21 expr: IDENTIFIER '(' expr_list . ')'

    ')'  shift, and go to state 326


State 221

  166 if_stmt: expr IF_KEYWORD NEW_LINE_SYMBOL . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 327


State 222

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  165 if_stmt: expr IF_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 165 (if_stmt)


State 223

  172 unless_stmt: expr UNLESS_KEYWORD NEW_LINE_SYMBOL . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 328


State 224

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  171 unless_stmt: expr UNLESS_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 171 (unless_stmt)


State 225

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  184 until_stmt: expr UNTIL_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 184 (until_stmt)


State 226

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   27     | expr OR_KEYWORD expr .
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 27 (expr)


State 227

   75 expr: expr OR_KEYWORD linefeed_expr .

    $default  reduce using rule 75 (expr)


State 228

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   26     | expr AND_KEYWORD expr .
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 26 (expr)


State 229

   74 expr: expr AND_KEYWORD linefeed_expr .

    $default  reduce using rule 74 (expr)


State 230

   13 expr: expr . '=' expr
   13     | expr '=' expr .
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 13 (expr)


State 231

   61 expr: expr '=' linefeed_expr .

    $default  reduce using rule 61 (expr)


State 232

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   38     | expr ADD_ASSIGN_OP expr .
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 38 (expr)


State 233

   86 expr: expr ADD_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 86 (expr)


State 234

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   39     | expr SUB_ASSIGN_OP expr .
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 39 (expr)


State 235

   87 expr: expr SUB_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 87 (expr)


State 236

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   40     | expr MUL_ASSIGN_OP expr .
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 40 (expr)


State 237

   88 expr: expr MUL_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 88 (expr)


State 238

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   41     | expr DIV_ASSIGN_OP expr .
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 41 (expr)


State 239

   89 expr: expr DIV_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 89 (expr)


State 240

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   42     | expr MOD_ASSIGN_OP expr .
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 42 (expr)


State 241

   90 expr: expr MOD_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 90 (expr)


State 242

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   43     | expr POW_ASSIGN_OP expr .
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 43 (expr)


State 243

   91 expr: expr POW_ASSIGN_OP linefeed_expr .

    $default  reduce using rule 91 (expr)


State 244

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   60     | expr QUESTION_SYMBOL expr . COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    COLON_SYMBOL            shift, and go to state 329
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 245

  108 expr: expr QUESTION_SYMBOL linefeed_expr . NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    NEW_LINE_SYMBOL  shift, and go to state 330


State 246

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   54     | expr EXCLUSIVE_RANGE_OP expr .
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 54 (expr)


State 247

  102 expr: expr EXCLUSIVE_RANGE_OP linefeed_expr .

    $default  reduce using rule 102 (expr)


State 248

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   53     | expr INCLUSIVE_RANGE_OP expr .
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 53 (expr)


State 249

  101 expr: expr INCLUSIVE_RANGE_OP linefeed_expr .

    $default  reduce using rule 101 (expr)


State 250

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   51     | expr LOGICAL_OR_OP expr .
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 51 (expr)


State 251

   99 expr: expr LOGICAL_OR_OP linefeed_expr .

    $default  reduce using rule 99 (expr)


State 252

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   50     | expr LOGICAL_AND_OP expr .
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 50 (expr)


State 253

   98 expr: expr LOGICAL_AND_OP linefeed_expr .

    $default  reduce using rule 98 (expr)


State 254

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   30     | expr EQL_OP expr .
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 30 (expr)


State 255

   78 expr: expr EQL_OP linefeed_expr .

    $default  reduce using rule 78 (expr)


State 256

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   31     | expr NOT_EQL_OP expr .
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 31 (expr)


State 257

   79 expr: expr NOT_EQL_OP linefeed_expr .

    $default  reduce using rule 79 (expr)


State 258

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   36     | expr COMB_COMPRASION_OP expr .
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 36 (expr)


State 259

   84 expr: expr COMB_COMPRASION_OP linefeed_expr .

    $default  reduce using rule 84 (expr)


State 260

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   37     | expr CASE_EQL_OP expr .
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 37 (expr)


State 261

   85 expr: expr CASE_EQL_OP linefeed_expr .

    $default  reduce using rule 85 (expr)


State 262

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   32     | expr GREATER_OP expr .
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 32 (expr)


State 263

   80 expr: expr GREATER_OP linefeed_expr .

    $default  reduce using rule 80 (expr)


State 264

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   33     | expr LESS_OP expr .
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 33 (expr)


State 265

   81 expr: expr LESS_OP linefeed_expr .

    $default  reduce using rule 81 (expr)


State 266

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   34     | expr GREATER_OR_EQL_OP expr .
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 34 (expr)


State 267

   82 expr: expr GREATER_OR_EQL_OP linefeed_expr .

    $default  reduce using rule 82 (expr)


State 268

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   35     | expr LESS_OR_EQL_OP expr .
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 35 (expr)


State 269

   83 expr: expr LESS_OR_EQL_OP linefeed_expr .

    $default  reduce using rule 83 (expr)


State 270

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   45     | expr BIN_OR_OP expr .
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 45 (expr)


State 271

   93 expr: expr BIN_OR_OP linefeed_expr .

    $default  reduce using rule 93 (expr)


State 272

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   46     | expr BIN_XOR_OP expr .
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 46 (expr)


State 273

   94 expr: expr BIN_XOR_OP linefeed_expr .

    $default  reduce using rule 94 (expr)


State 274

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   44     | expr BIN_AND_OP expr .
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 44 (expr)


State 275

   92 expr: expr BIN_AND_OP linefeed_expr .

    $default  reduce using rule 92 (expr)


State 276

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   48     | expr BIN_LEFT_SHIFT_OP expr .
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 48 (expr)


State 277

   96 expr: expr BIN_LEFT_SHIFT_OP linefeed_expr .

    $default  reduce using rule 96 (expr)


State 278

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   49     | expr BIN_RIGHT_SHIFT_OP expr .
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 49 (expr)


State 279

   97 expr: expr BIN_RIGHT_SHIFT_OP linefeed_expr .

    $default  reduce using rule 97 (expr)


State 280

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   18     | expr '+' expr .
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 18 (expr)


State 281

   66 expr: expr '+' linefeed_expr .

    $default  reduce using rule 66 (expr)


State 282

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   19     | expr '-' expr .
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 19 (expr)


State 283

   67 expr: expr '-' linefeed_expr .

    $default  reduce using rule 67 (expr)


State 284

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   17     | expr '*' expr .
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 17 (expr)


State 285

   65 expr: expr '*' linefeed_expr .

    $default  reduce using rule 65 (expr)


State 286

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   15     | expr '/' expr .
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 15 (expr)


State 287

   63 expr: expr '/' linefeed_expr .

    $default  reduce using rule 63 (expr)


State 288

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   16     | expr '%' expr .
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 16 (expr)


State 289

   64 expr: expr '%' linefeed_expr .

    $default  reduce using rule 64 (expr)


State 290

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   47     | expr BIN_ONES_COMPLEMENT_OP expr .
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 47 (expr)


State 291

   95 expr: expr BIN_ONES_COMPLEMENT_OP linefeed_expr .

    $default  reduce using rule 95 (expr)


State 292

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   29     | expr ARITHMETIC_POW_OP expr .
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    '.'                  shift, and go to state 166
    '['                  shift, and go to state 167
    DOUBLE_COLON_SYMBOL  shift, and go to state 168

    $default  reduce using rule 29 (expr)


State 293

   77 expr: expr ARITHMETIC_POW_OP linefeed_expr .

    $default  reduce using rule 77 (expr)


State 294

   70 expr: expr '.' NEW_LINE_SYMBOL . IDENTIFIER
   71     | expr '.' NEW_LINE_SYMBOL . IDENTIFIER QUESTION_SYMBOL
   72     | expr '.' NEW_LINE_SYMBOL . IDENTIFIER LOGICAL_NOT_OP
   73     | expr '.' NEW_LINE_SYMBOL . IDENTIFIER '='

    IDENTIFIER  shift, and go to state 331


State 295

   22 expr: expr '.' IDENTIFIER .
   23     | expr '.' IDENTIFIER . QUESTION_SYMBOL
   24     | expr '.' IDENTIFIER . LOGICAL_NOT_OP
   25     | expr '.' IDENTIFIER . '='

    '='              shift, and go to state 332
    QUESTION_SYMBOL  shift, and go to state 333
    LOGICAL_NOT_OP   shift, and go to state 334

    '='              [reduce using rule 22 (expr)]
    QUESTION_SYMBOL  [reduce using rule 22 (expr)]
    $default         reduce using rule 22 (expr)


State 296

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   14     | expr '[' expr . ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    ']'                     shift, and go to state 335
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 297

   62 expr: expr '[' linefeed_expr . NEW_LINE_SYMBOL ']'

    NEW_LINE_SYMBOL  shift, and go to state 336


State 298

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   59     | expr DOUBLE_COLON_SYMBOL expr .
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    $default  reduce using rule 59 (expr)


State 299

  107 expr: expr DOUBLE_COLON_SYMBOL linefeed_expr .

    $default  reduce using rule 107 (expr)


State 300

  151 class_body_stmt: OBJECT_VAR_NAME '=' expr delimiter .

    $default  reduce using rule 151 (class_body_stmt)


State 301

  149 class_body_stmt: CLASS_VAR_NAME '=' expr delimiter .

    $default  reduce using rule 149 (class_body_stmt)


State 302

  144 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' param_list ')' delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 337
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 303

  139 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list ')' delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 338
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 304

  142 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' delimiter . stmt_list END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 339
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 305

  123 stmt_list: stmt_list . stmt
  138 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list ')' delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 340
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 306

  206 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD . delimiter stmt_list END_KEYWORD
  207                  | BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD . delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 341


State 307

  121 expr_list_not_empty: expr_list_not_empty . COMMA_SYMBOL expr
  191 when_list: WHEN_KEYWORD expr_list_not_empty . delimiter stmt
  192          | WHEN_KEYWORD expr_list_not_empty . THEN_KEYWORD stmt

    THEN_KEYWORD      shift, and go to state 342
    NEW_LINE_SYMBOL   shift, and go to state 15
    COMMA_SYMBOL      shift, and go to state 218
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 343


State 308

  190 case_stmt: CASE_KEYWORD expr when_list ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 344
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 309

  189 case_stmt: CASE_KEYWORD expr when_list END_KEYWORD .

    $default  reduce using rule 189 (case_stmt)


State 310

  121 expr_list_not_empty: expr_list_not_empty . COMMA_SYMBOL expr
  193 when_list: when_list expr_list_not_empty . delimiter stmt
  194          | when_list expr_list_not_empty . THEN_KEYWORD stmt

    THEN_KEYWORD      shift, and go to state 345
    NEW_LINE_SYMBOL   shift, and go to state 15
    COMMA_SYMBOL      shift, and go to state 218
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 346


State 311

  158 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt . END_KEYWORD
  160        | IF_KEYWORD expr THEN_KEYWORD stmt . ELSE_KEYWORD stmt END_KEYWORD
  162        | IF_KEYWORD expr THEN_KEYWORD stmt . elsif_list stmt END_KEYWORD
  164        | IF_KEYWORD expr THEN_KEYWORD stmt . elsif_list ELSE_KEYWORD stmt END_KEYWORD

    ELSE_KEYWORD   shift, and go to state 347
    ELSIF_KEYWORD  shift, and go to state 348
    END_KEYWORD    shift, and go to state 349

    elsif_list  go to state 350


State 312

  157 if_stmt: IF_KEYWORD expr delimiter stmt . END_KEYWORD
  159        | IF_KEYWORD expr delimiter stmt . ELSE_KEYWORD stmt END_KEYWORD
  161        | IF_KEYWORD expr delimiter stmt . elsif_list stmt END_KEYWORD
  163        | IF_KEYWORD expr delimiter stmt . elsif_list ELSE_KEYWORD stmt END_KEYWORD

    ELSE_KEYWORD   shift, and go to state 351
    ELSIF_KEYWORD  shift, and go to state 348
    END_KEYWORD    shift, and go to state 352

    elsif_list  go to state 353


State 313

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  180 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr . DO_KEYWORD stmt END_KEYWORD
  181         | FOR_KEYWORD expr IN_KEYWORD expr . delimiter stmt END_KEYWORD

    DO_KEYWORD              shift, and go to state 354
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 15
    SEMICOLON_SYMBOL        shift, and go to state 16

    delimiter  go to state 355


State 314

  167 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt . END_KEYWORD
  169            | UNLESS_KEYWORD expr THEN_KEYWORD stmt . ELSE_KEYWORD stmt END_KEYWORD

    ELSE_KEYWORD  shift, and go to state 356
    END_KEYWORD   shift, and go to state 357


State 315

  168 unless_stmt: UNLESS_KEYWORD expr delimiter stmt . END_KEYWORD
  170            | UNLESS_KEYWORD expr delimiter stmt . ELSE_KEYWORD stmt END_KEYWORD

    ELSE_KEYWORD  shift, and go to state 358
    END_KEYWORD   shift, and go to state 359


State 316

  183 until_stmt: UNTIL_KEYWORD expr DO_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 360


State 317

  182 until_stmt: UNTIL_KEYWORD expr delimiter stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 361


State 318

  177 while_stmt: WHILE_KEYWORD expr DO_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 362


State 319

  178 while_stmt: WHILE_KEYWORD expr delimiter stmt . END_KEYWORD
  179           | WHILE_KEYWORD expr delimiter stmt . redo_stmt END_KEYWORD

    END_KEYWORD   shift, and go to state 363
    REDO_KEYWORD  shift, and go to state 364

    redo_stmt  go to state 365


State 320

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   76     | NOT_KEYWORD '(' NEW_LINE_SYMBOL expr . NEW_LINE_SYMBOL ')'
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 366


State 321

   28 expr: NOT_KEYWORD '(' expr ')' .

    $default  reduce using rule 28 (expr)


State 322

  103 expr: '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL . ')'

    ')'  shift, and go to state 367


State 323

  104 expr: '[' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL . ']'

    ']'  shift, and go to state 368


State 324

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  121 expr_list_not_empty: expr_list_not_empty COMMA_SYMBOL expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 121 (expr_list_not_empty)


State 325

   69 expr: IDENTIFIER '(' NEW_LINE_SYMBOL expr_list . NEW_LINE_SYMBOL ')'

    NEW_LINE_SYMBOL  shift, and go to state 369


State 326

   21 expr: IDENTIFIER '(' expr_list ')' .

    $default  reduce using rule 21 (expr)


State 327

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  166 if_stmt: expr IF_KEYWORD NEW_LINE_SYMBOL expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 166 (if_stmt)


State 328

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  172 unless_stmt: expr UNLESS_KEYWORD NEW_LINE_SYMBOL expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 172 (unless_stmt)


State 329

   60 expr: expr QUESTION_SYMBOL expr COLON_SYMBOL . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 370


State 330

  108 expr: expr QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL . COLON_SYMBOL linefeed_expr

    COLON_SYMBOL  shift, and go to state 371


State 331

   70 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER .
   71     | expr '.' NEW_LINE_SYMBOL IDENTIFIER . QUESTION_SYMBOL
   72     | expr '.' NEW_LINE_SYMBOL IDENTIFIER . LOGICAL_NOT_OP
   73     | expr '.' NEW_LINE_SYMBOL IDENTIFIER . '='

    '='              shift, and go to state 372
    QUESTION_SYMBOL  shift, and go to state 373
    LOGICAL_NOT_OP   shift, and go to state 374

    '='              [reduce using rule 70 (expr)]
    QUESTION_SYMBOL  [reduce using rule 70 (expr)]
    $default         reduce using rule 70 (expr)


State 332

   25 expr: expr '.' IDENTIFIER '=' .

    $default  reduce using rule 25 (expr)


State 333

   23 expr: expr '.' IDENTIFIER QUESTION_SYMBOL .

    $default  reduce using rule 23 (expr)


State 334

   24 expr: expr '.' IDENTIFIER LOGICAL_NOT_OP .

    $default  reduce using rule 24 (expr)


State 335

   14 expr: expr '[' expr ']' .

    $default  reduce using rule 14 (expr)


State 336

   62 expr: expr '[' linefeed_expr NEW_LINE_SYMBOL . ']'

    ']'  shift, and go to state 375


State 337

  123 stmt_list: stmt_list . stmt
  144 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' param_list ')' delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 376
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 338

  123 stmt_list: stmt_list . stmt
  139 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list ')' delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 377
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 339

  123 stmt_list: stmt_list . stmt
  142 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' delimiter stmt_list . END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 378
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 340

  138 method_stmt: DEF_KEYWORD IDENTIFIER '(' param_list ')' delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 138 (method_stmt)


State 341

  206 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter . stmt_list END_KEYWORD
  207                  | BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter . stmt_list ENSURE_KEYWORD delimiter END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt_list          go to state 379
    stmt               go to state 69
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 342

  192 when_list: WHEN_KEYWORD expr_list_not_empty THEN_KEYWORD . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 380
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 343

  191 when_list: WHEN_KEYWORD expr_list_not_empty delimiter . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 381
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 344

  190 case_stmt: CASE_KEYWORD expr when_list ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 382


State 345

  194 when_list: when_list expr_list_not_empty THEN_KEYWORD . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 383
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 346

  193 when_list: when_list expr_list_not_empty delimiter . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 384
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 347

  160 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 385
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 348

  173 elsif_list: ELSIF_KEYWORD . expr delimiter stmt
  174           | ELSIF_KEYWORD . expr THEN_KEYWORD stmt

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 386


State 349

  158 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 158 (if_stmt)


State 350

  162 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list . stmt END_KEYWORD
  164        | IF_KEYWORD expr THEN_KEYWORD stmt elsif_list . ELSE_KEYWORD stmt END_KEYWORD
  175 elsif_list: elsif_list . ELSIF_KEYWORD expr delimiter stmt
  176           | elsif_list . ELSIF_KEYWORD expr THEN_KEYWORD stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    ELSE_KEYWORD         shift, and go to state 387
    ELSIF_KEYWORD        shift, and go to state 388
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 389
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 351

  159 if_stmt: IF_KEYWORD expr delimiter stmt ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 390
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 352

  157 if_stmt: IF_KEYWORD expr delimiter stmt END_KEYWORD .

    $default  reduce using rule 157 (if_stmt)


State 353

  161 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list . stmt END_KEYWORD
  163        | IF_KEYWORD expr delimiter stmt elsif_list . ELSE_KEYWORD stmt END_KEYWORD
  175 elsif_list: elsif_list . ELSIF_KEYWORD expr delimiter stmt
  176           | elsif_list . ELSIF_KEYWORD expr THEN_KEYWORD stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    ELSE_KEYWORD         shift, and go to state 391
    ELSIF_KEYWORD        shift, and go to state 388
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 392
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 354

  180 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr DO_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 393
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 355

  181 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr delimiter . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 394
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 356

  169 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 395
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 357

  167 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 167 (unless_stmt)


State 358

  170 unless_stmt: UNLESS_KEYWORD expr delimiter stmt ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 396
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 359

  168 unless_stmt: UNLESS_KEYWORD expr delimiter stmt END_KEYWORD .

    $default  reduce using rule 168 (unless_stmt)


State 360

  183 until_stmt: UNTIL_KEYWORD expr DO_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 183 (until_stmt)


State 361

  182 until_stmt: UNTIL_KEYWORD expr delimiter stmt END_KEYWORD .

    $default  reduce using rule 182 (until_stmt)


State 362

  177 while_stmt: WHILE_KEYWORD expr DO_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 177 (while_stmt)


State 363

  178 while_stmt: WHILE_KEYWORD expr delimiter stmt END_KEYWORD .

    $default  reduce using rule 178 (while_stmt)


State 364

  187 redo_stmt: REDO_KEYWORD . IF_KEYWORD expr
  188          | REDO_KEYWORD . expr IF_KEYWORD expr

    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 397
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 398


State 365

  179 while_stmt: WHILE_KEYWORD expr delimiter stmt redo_stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 399


State 366

   76 expr: NOT_KEYWORD '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL . ')'

    ')'  shift, and go to state 400


State 367

  103 expr: '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')' .

    $default  reduce using rule 103 (expr)


State 368

  104 expr: '[' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ']' .

    $default  reduce using rule 104 (expr)


State 369

   69 expr: IDENTIFIER '(' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL . ')'

    ')'  shift, and go to state 401


State 370

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   60     | expr QUESTION_SYMBOL expr COLON_SYMBOL expr .
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr

    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 60 (expr)


State 371

  108 expr: expr QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL . linefeed_expr

    NEW_LINE_SYMBOL  shift, and go to state 106

    linefeed_expr  go to state 402


State 372

   73 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER '=' .

    $default  reduce using rule 73 (expr)


State 373

   71 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL .

    $default  reduce using rule 71 (expr)


State 374

   72 expr: expr '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP .

    $default  reduce using rule 72 (expr)


State 375

   62 expr: expr '[' linefeed_expr NEW_LINE_SYMBOL ']' .

    $default  reduce using rule 62 (expr)


State 376

  144 method_stmt: DEF_KEYWORD IDENTIFIER '=' '(' param_list ')' delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 144 (method_stmt)


State 377

  139 method_stmt: DEF_KEYWORD IDENTIFIER QUESTION_SYMBOL '(' param_list ')' delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 139 (method_stmt)


State 378

  142 method_stmt: DEF_KEYWORD IDENTIFIER LOGICAL_NOT_OP '(' param_list ')' delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 142 (method_stmt)


State 379

  123 stmt_list: stmt_list . stmt
  206 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list . END_KEYWORD
  207                  | BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list . ENSURE_KEYWORD delimiter END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    END_KEYWORD          shift, and go to state 403
    ENSURE_KEYWORD       shift, and go to state 404
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 171
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 380

  192 when_list: WHEN_KEYWORD expr_list_not_empty THEN_KEYWORD stmt .

    $default  reduce using rule 192 (when_list)


State 381

  191 when_list: WHEN_KEYWORD expr_list_not_empty delimiter stmt .

    $default  reduce using rule 191 (when_list)


State 382

  190 case_stmt: CASE_KEYWORD expr when_list ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 190 (case_stmt)


State 383

  194 when_list: when_list expr_list_not_empty THEN_KEYWORD stmt .

    $default  reduce using rule 194 (when_list)


State 384

  193 when_list: when_list expr_list_not_empty delimiter stmt .

    $default  reduce using rule 193 (when_list)


State 385

  160 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 405


State 386

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  173 elsif_list: ELSIF_KEYWORD expr . delimiter stmt
  174           | ELSIF_KEYWORD expr . THEN_KEYWORD stmt

    THEN_KEYWORD            shift, and go to state 406
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 15
    SEMICOLON_SYMBOL        shift, and go to state 16

    delimiter  go to state 407


State 387

  164 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 408
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 388

  175 elsif_list: elsif_list ELSIF_KEYWORD . expr delimiter stmt
  176           | elsif_list ELSIF_KEYWORD . expr THEN_KEYWORD stmt

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 409


State 389

  162 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 410


State 390

  159 if_stmt: IF_KEYWORD expr delimiter stmt ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 411


State 391

  163 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list ELSE_KEYWORD . stmt END_KEYWORD

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 412
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 392

  161 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 413


State 393

  180 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr DO_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 414


State 394

  181 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr delimiter stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 415


State 395

  169 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 416


State 396

  170 unless_stmt: UNLESS_KEYWORD expr delimiter stmt ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 417


State 397

  187 redo_stmt: REDO_KEYWORD IF_KEYWORD . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 418


State 398

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  188 redo_stmt: REDO_KEYWORD expr . IF_KEYWORD expr

    IF_KEYWORD              shift, and go to state 419
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168


State 399

  179 while_stmt: WHILE_KEYWORD expr delimiter stmt redo_stmt END_KEYWORD .

    $default  reduce using rule 179 (while_stmt)


State 400

   76 expr: NOT_KEYWORD '(' NEW_LINE_SYMBOL expr NEW_LINE_SYMBOL ')' .

    $default  reduce using rule 76 (expr)


State 401

   69 expr: IDENTIFIER '(' NEW_LINE_SYMBOL expr_list NEW_LINE_SYMBOL ')' .

    $default  reduce using rule 69 (expr)


State 402

  108 expr: expr QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr .

    $default  reduce using rule 108 (expr)


State 403

  206 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list END_KEYWORD .

    $default  reduce using rule 206 (begin_rescue_stmt)


State 404

  207 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD . delimiter END_KEYWORD

    NEW_LINE_SYMBOL   shift, and go to state 15
    SEMICOLON_SYMBOL  shift, and go to state 16

    delimiter  go to state 420


State 405

  160 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 160 (if_stmt)


State 406

  174 elsif_list: ELSIF_KEYWORD expr THEN_KEYWORD . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 421
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 407

  173 elsif_list: ELSIF_KEYWORD expr delimiter . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 422
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 408

  164 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 423


State 409

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  175 elsif_list: elsif_list ELSIF_KEYWORD expr . delimiter stmt
  176           | elsif_list ELSIF_KEYWORD expr . THEN_KEYWORD stmt

    THEN_KEYWORD            shift, and go to state 424
    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168
    NEW_LINE_SYMBOL         shift, and go to state 15
    SEMICOLON_SYMBOL        shift, and go to state 16

    delimiter  go to state 425


State 410

  162 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list stmt END_KEYWORD .

    $default  reduce using rule 162 (if_stmt)


State 411

  159 if_stmt: IF_KEYWORD expr delimiter stmt ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 159 (if_stmt)


State 412

  163 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list ELSE_KEYWORD stmt . END_KEYWORD

    END_KEYWORD  shift, and go to state 426


State 413

  161 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list stmt END_KEYWORD .

    $default  reduce using rule 161 (if_stmt)


State 414

  180 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr DO_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 180 (for_stmt)


State 415

  181 for_stmt: FOR_KEYWORD expr IN_KEYWORD expr delimiter stmt END_KEYWORD .

    $default  reduce using rule 181 (for_stmt)


State 416

  169 unless_stmt: UNLESS_KEYWORD expr THEN_KEYWORD stmt ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 169 (unless_stmt)


State 417

  170 unless_stmt: UNLESS_KEYWORD expr delimiter stmt ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 170 (unless_stmt)


State 418

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  187 redo_stmt: REDO_KEYWORD IF_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 187 (redo_stmt)


State 419

  188 redo_stmt: REDO_KEYWORD expr IF_KEYWORD . expr

    DEFINED_KEYWORD      shift, and go to state 44
    FALSE_KEYWORD        shift, and go to state 46
    NIL_KEYWORD          shift, and go to state 48
    TRUE_KEYWORD         shift, and go to state 50
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr  go to state 427


State 420

  207 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter . END_KEYWORD

    END_KEYWORD  shift, and go to state 428


State 421

  174 elsif_list: ELSIF_KEYWORD expr THEN_KEYWORD stmt .

    $default  reduce using rule 174 (elsif_list)


State 422

  173 elsif_list: ELSIF_KEYWORD expr delimiter stmt .

    $default  reduce using rule 173 (elsif_list)


State 423

  164 if_stmt: IF_KEYWORD expr THEN_KEYWORD stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 164 (if_stmt)


State 424

  176 elsif_list: elsif_list ELSIF_KEYWORD expr THEN_KEYWORD . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 429
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 425

  175 elsif_list: elsif_list ELSIF_KEYWORD expr delimiter . stmt

    ALIAS_KEYWORD        shift, and go to state 41
    BEGIN_KEYWORD        shift, and go to state 42
    CASE_KEYWORD         shift, and go to state 43
    DEFINED_KEYWORD      shift, and go to state 44
    IF_KEYWORD           shift, and go to state 45
    FALSE_KEYWORD        shift, and go to state 46
    FOR_KEYWORD          shift, and go to state 47
    NIL_KEYWORD          shift, and go to state 48
    RETURN_KEYWORD       shift, and go to state 49
    TRUE_KEYWORD         shift, and go to state 50
    UNLESS_KEYWORD       shift, and go to state 51
    UNTIL_KEYWORD        shift, and go to state 52
    WHILE_KEYWORD        shift, and go to state 53
    NOT_KEYWORD          shift, and go to state 54
    '-'                  shift, and go to state 55
    LOGICAL_NOT_OP       shift, and go to state 56
    '('                  shift, and go to state 57
    '['                  shift, and go to state 58
    DOUBLE_COLON_SYMBOL  shift, and go to state 59
    STRING               shift, and go to state 60
    INTEGER_NUMBER       shift, and go to state 61
    FLOAT_NUMBER         shift, and go to state 62
    IDENTIFIER           shift, and go to state 63
    OBJECT_VAR_NAME      shift, and go to state 64
    CLASS_VAR_NAME       shift, and go to state 65
    CONSTANT_NAME        shift, and go to state 66

    expr               go to state 67
    stmt               go to state 430
    if_stmt            go to state 70
    unless_stmt        go to state 71
    while_stmt         go to state 72
    for_stmt           go to state 73
    until_stmt         go to state 74
    return_stmt        go to state 75
    case_stmt          go to state 76
    alias_stmt         go to state 77
    begin_rescue_stmt  go to state 78


State 426

  163 if_stmt: IF_KEYWORD expr delimiter stmt elsif_list ELSE_KEYWORD stmt END_KEYWORD .

    $default  reduce using rule 163 (if_stmt)


State 427

   13 expr: expr . '=' expr
   14     | expr . '[' expr ']'
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '*' expr
   18     | expr . '+' expr
   19     | expr . '-' expr
   22     | expr . '.' IDENTIFIER
   23     | expr . '.' IDENTIFIER QUESTION_SYMBOL
   24     | expr . '.' IDENTIFIER LOGICAL_NOT_OP
   25     | expr . '.' IDENTIFIER '='
   26     | expr . AND_KEYWORD expr
   27     | expr . OR_KEYWORD expr
   29     | expr . ARITHMETIC_POW_OP expr
   30     | expr . EQL_OP expr
   31     | expr . NOT_EQL_OP expr
   32     | expr . GREATER_OP expr
   33     | expr . LESS_OP expr
   34     | expr . GREATER_OR_EQL_OP expr
   35     | expr . LESS_OR_EQL_OP expr
   36     | expr . COMB_COMPRASION_OP expr
   37     | expr . CASE_EQL_OP expr
   38     | expr . ADD_ASSIGN_OP expr
   39     | expr . SUB_ASSIGN_OP expr
   40     | expr . MUL_ASSIGN_OP expr
   41     | expr . DIV_ASSIGN_OP expr
   42     | expr . MOD_ASSIGN_OP expr
   43     | expr . POW_ASSIGN_OP expr
   44     | expr . BIN_AND_OP expr
   45     | expr . BIN_OR_OP expr
   46     | expr . BIN_XOR_OP expr
   47     | expr . BIN_ONES_COMPLEMENT_OP expr
   48     | expr . BIN_LEFT_SHIFT_OP expr
   49     | expr . BIN_RIGHT_SHIFT_OP expr
   50     | expr . LOGICAL_AND_OP expr
   51     | expr . LOGICAL_OR_OP expr
   53     | expr . INCLUSIVE_RANGE_OP expr
   54     | expr . EXCLUSIVE_RANGE_OP expr
   59     | expr . DOUBLE_COLON_SYMBOL expr
   60     | expr . QUESTION_SYMBOL expr COLON_SYMBOL expr
   61     | expr . '=' linefeed_expr
   62     | expr . '[' linefeed_expr NEW_LINE_SYMBOL ']'
   63     | expr . '/' linefeed_expr
   64     | expr . '%' linefeed_expr
   65     | expr . '*' linefeed_expr
   66     | expr . '+' linefeed_expr
   67     | expr . '-' linefeed_expr
   70     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER
   71     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER QUESTION_SYMBOL
   72     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER LOGICAL_NOT_OP
   73     | expr . '.' NEW_LINE_SYMBOL IDENTIFIER '='
   74     | expr . AND_KEYWORD linefeed_expr
   75     | expr . OR_KEYWORD linefeed_expr
   77     | expr . ARITHMETIC_POW_OP linefeed_expr
   78     | expr . EQL_OP linefeed_expr
   79     | expr . NOT_EQL_OP linefeed_expr
   80     | expr . GREATER_OP linefeed_expr
   81     | expr . LESS_OP linefeed_expr
   82     | expr . GREATER_OR_EQL_OP linefeed_expr
   83     | expr . LESS_OR_EQL_OP linefeed_expr
   84     | expr . COMB_COMPRASION_OP linefeed_expr
   85     | expr . CASE_EQL_OP linefeed_expr
   86     | expr . ADD_ASSIGN_OP linefeed_expr
   87     | expr . SUB_ASSIGN_OP linefeed_expr
   88     | expr . MUL_ASSIGN_OP linefeed_expr
   89     | expr . DIV_ASSIGN_OP linefeed_expr
   90     | expr . MOD_ASSIGN_OP linefeed_expr
   91     | expr . POW_ASSIGN_OP linefeed_expr
   92     | expr . BIN_AND_OP linefeed_expr
   93     | expr . BIN_OR_OP linefeed_expr
   94     | expr . BIN_XOR_OP linefeed_expr
   95     | expr . BIN_ONES_COMPLEMENT_OP linefeed_expr
   96     | expr . BIN_LEFT_SHIFT_OP linefeed_expr
   97     | expr . BIN_RIGHT_SHIFT_OP linefeed_expr
   98     | expr . LOGICAL_AND_OP linefeed_expr
   99     | expr . LOGICAL_OR_OP linefeed_expr
  101     | expr . INCLUSIVE_RANGE_OP linefeed_expr
  102     | expr . EXCLUSIVE_RANGE_OP linefeed_expr
  107     | expr . DOUBLE_COLON_SYMBOL linefeed_expr
  108     | expr . QUESTION_SYMBOL linefeed_expr NEW_LINE_SYMBOL COLON_SYMBOL linefeed_expr
  188 redo_stmt: REDO_KEYWORD expr IF_KEYWORD expr .

    OR_KEYWORD              shift, and go to state 132
    AND_KEYWORD             shift, and go to state 133
    '='                     shift, and go to state 134
    ADD_ASSIGN_OP           shift, and go to state 135
    SUB_ASSIGN_OP           shift, and go to state 136
    MUL_ASSIGN_OP           shift, and go to state 137
    DIV_ASSIGN_OP           shift, and go to state 138
    MOD_ASSIGN_OP           shift, and go to state 139
    POW_ASSIGN_OP           shift, and go to state 140
    QUESTION_SYMBOL         shift, and go to state 141
    EXCLUSIVE_RANGE_OP      shift, and go to state 142
    INCLUSIVE_RANGE_OP      shift, and go to state 143
    LOGICAL_OR_OP           shift, and go to state 144
    LOGICAL_AND_OP          shift, and go to state 145
    EQL_OP                  shift, and go to state 146
    NOT_EQL_OP              shift, and go to state 147
    COMB_COMPRASION_OP      shift, and go to state 148
    CASE_EQL_OP             shift, and go to state 149
    GREATER_OP              shift, and go to state 150
    LESS_OP                 shift, and go to state 151
    GREATER_OR_EQL_OP       shift, and go to state 152
    LESS_OR_EQL_OP          shift, and go to state 153
    BIN_OR_OP               shift, and go to state 154
    BIN_XOR_OP              shift, and go to state 155
    BIN_AND_OP              shift, and go to state 156
    BIN_LEFT_SHIFT_OP       shift, and go to state 157
    BIN_RIGHT_SHIFT_OP      shift, and go to state 158
    '+'                     shift, and go to state 159
    '-'                     shift, and go to state 160
    '*'                     shift, and go to state 161
    '/'                     shift, and go to state 162
    '%'                     shift, and go to state 163
    BIN_ONES_COMPLEMENT_OP  shift, and go to state 164
    ARITHMETIC_POW_OP       shift, and go to state 165
    '.'                     shift, and go to state 166
    '['                     shift, and go to state 167
    DOUBLE_COLON_SYMBOL     shift, and go to state 168

    $default  reduce using rule 188 (redo_stmt)


State 428

  207 begin_rescue_stmt: BEGIN_KEYWORD delimiter stmt_list RESCUE_KEYWORD delimiter stmt_list ENSURE_KEYWORD delimiter END_KEYWORD .

    $default  reduce using rule 207 (begin_rescue_stmt)


State 429

  176 elsif_list: elsif_list ELSIF_KEYWORD expr THEN_KEYWORD stmt .

    $default  reduce using rule 176 (elsif_list)


State 430

  175 elsif_list: elsif_list ELSIF_KEYWORD expr delimiter stmt .

    $default  reduce using rule 175 (elsif_list)
